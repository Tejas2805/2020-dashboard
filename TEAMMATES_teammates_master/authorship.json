[
  {
    "path": "src/main/java/teammates/logic/api/Logic.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.logic.api;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Set;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseDetailsBundle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.CourseSummaryBundle;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackResponseCommentSearchResultBundle;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionDetailsBundle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionQuestionsBundle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResponseStatus;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackSessionResultsBundle;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorPrivileges;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.InstructorSearchResultBundle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetail;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.SectionDetailsBundle;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.StudentSearchResultBundle;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.TeamDetailsBundle;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.AccountAttributes;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseCommentAttributes;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentProfileAttributes;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EnrollException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityAlreadyExistsException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.ExceedingRangeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidParametersException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Assumption;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.AccountsLogic;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.DataBundleLogic;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackQuestionsLogic;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponseCommentsLogic;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackResponsesLogic;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.FeedbackSessionsLogic;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.InstructorsLogic;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.ProfilesLogic;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.StudentsLogic;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": " * Provides the business logic for production usage of the system."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": " * \u003cp\u003eThis is a Facade class which simply forwards the method to internal classes."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "public class Logic {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final AccountsLogic accountsLogic \u003d AccountsLogic.inst();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final StudentsLogic studentsLogic \u003d StudentsLogic.inst();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final InstructorsLogic instructorsLogic \u003d InstructorsLogic.inst();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final CoursesLogic coursesLogic \u003d CoursesLogic.inst();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackSessionsLogic feedbackSessionsLogic \u003d FeedbackSessionsLogic.inst();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackQuestionsLogic feedbackQuestionsLogic \u003d FeedbackQuestionsLogic.inst();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponsesLogic feedbackResponsesLogic \u003d FeedbackResponsesLogic.inst();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final FeedbackResponseCommentsLogic feedbackResponseCommentsLogic \u003d"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentsLogic.inst();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final ProfilesLogic profilesLogic \u003d ProfilesLogic.inst();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    private static final DataBundleLogic dataBundleLogic \u003d DataBundleLogic.inst();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    public AccountAttributes getAccount(String googleId) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.getAccount(googleId);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates/Creates the profile using {@link StudentProfileAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated student profile"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileAttributes updateOrCreateStudentProfile(StudentProfileAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        return profilesLogic.updateOrCreateStudentProfile(updateOptions);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes both instructor and student privileges, as long as the account and associated student profile."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cul\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cli\u003eFails silently if no such account.\u003c/li\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003c/ul\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions:\u003c/p\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteAccountCascade(String googleId) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.deleteAccountCascade(googleId);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "     * Delete the picture associated with the {@code key} in Cloud Storage."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     * All parameters are non-null."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the {@code key} doesn\u0027t exist.\u003c/p\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePicture(String key) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deletePicture(key);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes {@code pictureKey} for the student profile associated with {@code googleId}."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the associated profile doesn\u0027t exist, create a new one.\u003c/p\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deletePictureKey(String googleId) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        profilesLogic.deletePictureKey(googleId);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Add an instructor for a course. \u003cbr\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    @Deprecated"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructor(String courseId, String name, String email, String role)"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(name);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor \u003d InstructorAttributes.builder(courseId, email)"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "                .withName(name)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRole(role)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                .withPrivileges(new InstructorPrivileges(role))"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "                .build();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates an instructor."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions:\u003c/p\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created instructor"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the instructor is not valid"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the instructor already exists in the Datastore"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes createInstructor(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.createInstructor(instructor);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "     * search instructors in the whole system."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorSearchResultBundle searchInstructorsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.searchInstructorsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given Instructors."
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putInstructorDocuments(List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.putDocuments(instructors);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForEmail(courseId, email);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorById(String courseId, String email) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorById(courseId, email);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes getInstructorForRegistrationKey(String encryptedKey) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorForRegistrationKey(encryptedKey);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForGoogleId(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForGoogleId(googleId, omitArchived);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cInstructorAttributes\u003e getInstructorsForCourse(String courseId) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getInstructorsForCourse(courseId);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get the encrypted registration key for the instructor."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForInstructor(String courseId, String email)"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.getEncryptedKeyForInstructor(courseId, email);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getAllOngoingSessions(Instant rangeStart, Instant rangeEnd) {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getAllOngoingSessions(rangeStart, rangeEnd);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user has instructor privileges."
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructor(String googleId) {"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.isAccountAnInstructor(googleId);"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if this user is an instructor of the course."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isInstructorOfCourse(String googleId, String courseId) {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isGoogleIdOfInstructorOfCourse(googleId, courseId);"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns true if the instructor is a new user."
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see InstructorsLogic#isNewInstructor(String)"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isNewInstructor(String googleId) {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.isNewInstructor(googleId);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithGoogleId}."
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade update the comments and responses given by the instructor."
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated instructor"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the instructor cannot be found"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes updateInstructorCascade(InstructorAttributes.UpdateOptionsWithGoogleId updateOptions)"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.updateInstructorByGoogleIdCascade(updateOptions);"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates an instructor by {@link InstructorAttributes.UpdateOptionsWithEmail}."
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated instructor"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the instructor cannot be found"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes updateInstructor(InstructorAttributes.UpdateOptionsWithEmail updateOptions)"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        return instructorsLogic.updateInstructorByEmail(updateOptions);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the instructor join the course, i.e. associate the Google ID to the instructor.\u003cbr\u003e"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create an account for the instructor if there is no account exist for him."
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "    public InstructorAttributes joinCourseForInstructor(String encryptedKey, String googleId, String institute)"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(encryptedKey);"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.joinCourseForInstructor(encryptedKey, googleId, institute);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "     * Downgrades an instructor account to student account."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade deletes all instructors associated with the account."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    public void downgradeInstructorToStudentCascade(String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        accountsLogic.downgradeInstructorToStudentCascade(googleId);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes an instructor cascade its associated feedback responses and comments."
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the student does not exist."
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorCascade(String courseId, String email) {"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.deleteInstructorCascade(courseId, email);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a course and an associated instructor for the course."
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr/\u003e"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "     * * {@code instructorGoogleId} already has an account and instructor privileges."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "    public void createCourseAndInstructor(String instructorGoogleId, CourseAttributes courseAttributes)"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorGoogleId);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseAttributes);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.createCourseAndInstructor(instructorGoogleId, courseAttributes);"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getCourse(String courseId) {"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourse(courseId);"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a detailed version of course data. \u003cbr\u003e"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseDetailsBundle getCourseDetails(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummary(courseId);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a course data, including its feedback sessions, according to the instructor passed in.\u003cbr\u003e"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseSummaryBundle getCourseSummaryWithFeedbackSessions(InstructorAttributes instructor)"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummaryWithFeedbackSessionsForInstructor(instructor);"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForStudentAccount(String googleId) {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForStudentAccount(googleId);"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor without stats."
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseSummaryBundle\u003e getCourseSummariesWithoutStatsForInstructor(String googleId,"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                            boolean omitArchived) {"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesSummaryWithoutStatsForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return A less detailed version of courses for this instructor."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "     *         Returns an empty list if none found."
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, CourseDetailsBundle\u003e getCourseSummariesForInstructor(String googleId)"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseSummariesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Details of courses the student is in. CourseData objects"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     *         returned contain details of feedback sessions too (except the ones"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     *         still AWAITING)."
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseDetailsBundle\u003e getCourseDetailsListForStudent(String googleId)"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseDetailsListForStudent(googleId);"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId) {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "        return getCoursesForInstructor(googleId, false);"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "     * Omits archived courses if omitArchived \u003d\u003d true\u003cbr\u003e"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the instructor is in."
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses the given instructors is in except for courses in Recycle Bin."
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getCoursesForInstructor(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCoursesForInstructor(instructorList);"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Courses in Recycle Bin that the given instructors is in."
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cCourseAttributes\u003e getSoftDeletedCoursesForInstructors(List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSoftDeletedCoursesForInstructors(instructorList);"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes getSoftDeletedCourseForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSoftDeletedCourseForInstructor(instructor);"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a course by {@link CourseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the {@code timezone} of the course is changed, cascade the change to its corresponding feedback sessions."
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated course"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the course cannot be found"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "    public CourseAttributes updateCourseCascade(CourseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.updateCourseCascade(updateOptions);"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "     * Changes the archive status of a course for an instructor."
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param courseId The course of which the archive status is to be changed"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param archiveStatus The archive status to be set"
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setArchiveStatusOfInstructor(String googleId, String courseId, boolean archiveStatus)"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(archiveStatus);"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.setArchiveStatusOfInstructor(googleId, courseId, archiveStatus);"
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a course cascade its students, instructors, sessions, responses and comments."
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if no such course."
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.deleteCourseCascade(courseId);"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks if the course is present in the system based on its courseid."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isCoursePresent(String courseid) {"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.isCoursePresent(courseid);"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "     * Moves a course to Recycle Bin by its given corresponding ID."
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     *"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "     * @return the deletion timestamp assigned to the course."
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    public Instant moveCourseToRecycleBin(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return coursesLogic.moveCourseToRecycleBin(courseId);"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores a course and all data related to the course from Recycle Bin by"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "     * its given corresponding ID."
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreCourseFromRecycleBin(String courseId)"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreCourseFromRecycleBin(courseId);"
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores all courses and all data related to these courses from Recycle Bin."
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreAllCoursesFromRecycleBin(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "        coursesLogic.restoreAllCoursesFromRecycleBin(instructorList);"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for students. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudents(String queryString, List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudents(queryString, instructors);"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "     * This method should be used by admin only since the searching does not restrict the"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "     * visibility according to the logged-in user\u0027s google ID. This is used by admin to"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "     * search students in the whole system."
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentSearchResultBundle searchStudentsInWholeSystem(String queryString) {"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.searchStudentsInWholeSystem(queryString);"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 678,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 679,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 680,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 681,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 682,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 683,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 684,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 685,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForRegistrationKey(String registrationKey) {"
      },
      {
        "lineNumber": 686,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(registrationKey);"
      },
      {
        "lineNumber": 687,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForRegistrationKey(registrationKey);"
      },
      {
        "lineNumber": 688,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 689,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 690,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 691,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 692,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 693,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 694,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 695,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 696,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForEmail(String courseId, String email) {"
      },
      {
        "lineNumber": 697,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 698,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 699,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 700,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForEmail(courseId, email);"
      },
      {
        "lineNumber": 701,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 702,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 703,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 704,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 705,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 706,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 707,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return an empty list if no match found."
      },
      {
        "lineNumber": 708,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 709,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getAllStudentForEmail(String email) {"
      },
      {
        "lineNumber": 710,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 711,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 712,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getAllStudentsForEmail(email);"
      },
      {
        "lineNumber": 713,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 714,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 715,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 716,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 717,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 718,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 719,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found."
      },
      {
        "lineNumber": 720,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 721,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes getStudentForGoogleId(String courseId, String googleId) {"
      },
      {
        "lineNumber": 722,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 723,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 724,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 725,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentForCourseIdAndGoogleId(courseId, googleId);"
      },
      {
        "lineNumber": 726,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 727,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 728,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 729,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets student profile associated with the {@code googleId}."
      },
      {
        "lineNumber": 730,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 731,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 732,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 733,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 734,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if no match found."
      },
      {
        "lineNumber": 735,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 736,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentProfileAttributes getStudentProfile(String googleId) {"
      },
      {
        "lineNumber": 737,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 738,
        "author": {
          "gitId": "-"
        },
        "content": "        return profilesLogic.getStudentProfile(googleId);"
      },
      {
        "lineNumber": 739,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 741,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 742,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 743,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 744,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 745,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if no match found."
      },
      {
        "lineNumber": 746,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 747,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForGoogleId(String googleId) {"
      },
      {
        "lineNumber": 748,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 749,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForGoogleId(googleId);"
      },
      {
        "lineNumber": 750,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 752,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 753,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 754,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 755,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Empty list if none found."
      },
      {
        "lineNumber": 756,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 757,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 758,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 759,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 760,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 761,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 762,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 763,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of section names for the course with ID courseId."
      },
      {
        "lineNumber": 764,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 765,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 766,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 767,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 768,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsNameForCourse(String)"
      },
      {
        "lineNumber": 769,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 770,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getSectionNamesForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 771,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 772,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsNameForCourse(courseId);"
      },
      {
        "lineNumber": 773,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 774,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 775,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 776,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of {@link SectionDetailsBundle} for a given course using courseId."
      },
      {
        "lineNumber": 777,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 778,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 779,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 780,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 781,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see CoursesLogic#getSectionsForCourseWithoutStats(String)"
      },
      {
        "lineNumber": 782,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 783,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cSectionDetailsBundle\u003e getSectionsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 784,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 785,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getSectionsForCourseWithoutStats(courseId);"
      },
      {
        "lineNumber": 786,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 787,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 788,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 789,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 790,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 791,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 792,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cTeamDetailsBundle\u003e getTeamsForCourse(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 793,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 794,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getTeamsForCourse(courseId);"
      },
      {
        "lineNumber": 795,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 797,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 798,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 799,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 800,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 801,
        "author": {
          "gitId": "-"
        },
        "content": "    public TeamDetailsBundle getTeamDetailsForStudent(StudentAttributes student) {"
      },
      {
        "lineNumber": 802,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 803,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getTeamDetailsForStudent(student);"
      },
      {
        "lineNumber": 804,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 805,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 806,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 807,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 808,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 809,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 810,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getEncryptedKeyForStudent(String courseId, String email) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 811,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 812,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 813,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 814,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 815,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getEncryptedKeyForStudent(courseId, email);"
      },
      {
        "lineNumber": 816,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 817,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 818,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 819,
        "author": {
          "gitId": "-"
        },
        "content": "     * Populates fields that need dynamic generation in a question."
      },
      {
        "lineNumber": 820,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 821,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCurrently, only MCQ/MSQ needs to generate choices dynamically.\u003c/p\u003e"
      },
      {
        "lineNumber": 822,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 823,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 824,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters except \u003ccode\u003eteamOfEntityDoingQuestion\u003c/code\u003e are non-null."
      },
      {
        "lineNumber": 825,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 826,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param feedbackQuestionAttributes the question to populate"
      },
      {
        "lineNumber": 827,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param emailOfEntityDoingQuestion the email of the entity doing the question"
      },
      {
        "lineNumber": 828,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param teamOfEntityDoingQuestion the team of the entity doing the question. If the entity is an instructor,"
      },
      {
        "lineNumber": 829,
        "author": {
          "gitId": "-"
        },
        "content": "     *                                  it can be {@code null}."
      },
      {
        "lineNumber": 830,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 831,
        "author": {
          "gitId": "-"
        },
        "content": "    public void populateFieldsToGenerateInQuestion(FeedbackQuestionAttributes feedbackQuestionAttributes,"
      },
      {
        "lineNumber": 832,
        "author": {
          "gitId": "-"
        },
        "content": "            String emailOfEntityDoingQuestion, String teamOfEntityDoingQuestion) {"
      },
      {
        "lineNumber": 833,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionAttributes);"
      },
      {
        "lineNumber": 834,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(emailOfEntityDoingQuestion);"
      },
      {
        "lineNumber": 835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 836,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.populateFieldsToGenerateInQuestion("
      },
      {
        "lineNumber": 837,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackQuestionAttributes, emailOfEntityDoingQuestion, teamOfEntityDoingQuestion);"
      },
      {
        "lineNumber": 838,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 839,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 840,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 841,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the googleId associated with the student."
      },
      {
        "lineNumber": 842,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 843,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 844,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 845,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 846,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetStudentGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 847,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 848,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 849,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 850,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.resetStudentGoogleId(originalEmail, courseId);"
      },
      {
        "lineNumber": 851,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 852,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 853,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 854,
        "author": {
          "gitId": "-"
        },
        "content": "     * Resets the associated googleId of an instructor."
      },
      {
        "lineNumber": 855,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 856,
        "author": {
          "gitId": "-"
        },
        "content": "    public void resetInstructorGoogleId(String originalEmail, String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 857,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(originalEmail);"
      },
      {
        "lineNumber": 858,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 859,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 860,
        "author": {
          "gitId": "-"
        },
        "content": "        instructorsLogic.resetInstructorGoogleId(originalEmail, courseId);"
      },
      {
        "lineNumber": 861,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 863,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 864,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a student."
      },
      {
        "lineNumber": 865,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 866,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created student."
      },
      {
        "lineNumber": 867,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the student is not valid."
      },
      {
        "lineNumber": 868,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the student already exists in the Datastore."
      },
      {
        "lineNumber": 869,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 870,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes createStudent(StudentAttributes student)"
      },
      {
        "lineNumber": 871,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 872,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student.getCourse());"
      },
      {
        "lineNumber": 873,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student.getEmail());"
      },
      {
        "lineNumber": 874,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 875,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.createStudent(student);"
      },
      {
        "lineNumber": 876,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 877,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 878,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 879,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a student by {@link StudentAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 880,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 881,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf email changed, update by recreating the student and cascade update all responses the student gives/receives."
      },
      {
        "lineNumber": 882,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 883,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf team changed, cascade delete all responses the student gives/receives within that team."
      },
      {
        "lineNumber": 884,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 885,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf section changed, cascade update all responses the student gives/receives."
      },
      {
        "lineNumber": 886,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 887,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 888,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 889,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 890,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated student"
      },
      {
        "lineNumber": 891,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 892,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the student cannot be found"
      },
      {
        "lineNumber": 893,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the student cannot be updated"
      },
      {
        "lineNumber": 894,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent student"
      },
      {
        "lineNumber": 895,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 896,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes updateStudentCascade(StudentAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 897,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 898,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 899,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 901,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.updateStudentCascade(updateOptions);"
      },
      {
        "lineNumber": 902,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 903,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 904,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 905,
        "author": {
          "gitId": "-"
        },
        "content": "     * Make the student join the course, i.e. associate the Google ID to the student.\u003cbr\u003e"
      },
      {
        "lineNumber": 906,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create an account for the student if there is no account exist for him."
      },
      {
        "lineNumber": 907,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 908,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 909,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param key the encrypted registration key"
      },
      {
        "lineNumber": 910,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 911,
        "author": {
          "gitId": "-"
        },
        "content": "    public StudentAttributes joinCourseForStudent(String key, String googleId)"
      },
      {
        "lineNumber": 912,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 913,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 914,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 915,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(key);"
      },
      {
        "lineNumber": 916,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 917,
        "author": {
          "gitId": "-"
        },
        "content": "        return accountsLogic.joinCourseForStudent(key, googleId);"
      },
      {
        "lineNumber": 918,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 919,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 920,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 921,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getUnregisteredStudentsForCourse(String courseId) {"
      },
      {
        "lineNumber": 922,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 923,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getUnregisteredStudentsForCourse(courseId);"
      },
      {
        "lineNumber": 924,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 925,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 926,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByInstructor(FeedbackSessionAttributes fsa, String userEmail)"
      },
      {
        "lineNumber": 927,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 928,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 929,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 930,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByInstructor(fsa, userEmail);"
      },
      {
        "lineNumber": 931,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 932,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 933,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isFeedbackSessionCompletedByStudent(FeedbackSessionAttributes fsa, String userEmail) {"
      },
      {
        "lineNumber": 934,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 935,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 936,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, userEmail);"
      },
      {
        "lineNumber": 937,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 938,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 939,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 940,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a student cascade its associated feedback responses and comments."
      },
      {
        "lineNumber": 941,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 942,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eFails silently if the student does not exist."
      },
      {
        "lineNumber": 943,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 944,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 945,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 946,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 947,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentCascade(String courseId, String studentEmail) {"
      },
      {
        "lineNumber": 948,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 949,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 950,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 951,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentCascade(courseId, studentEmail);"
      },
      {
        "lineNumber": 952,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 953,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 954,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 955,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes all the students in the course cascade their associated responses and comments."
      },
      {
        "lineNumber": 956,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 957,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 958,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 959,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 960,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentsInCourseCascade(String courseId) {"
      },
      {
        "lineNumber": 961,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 962,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 963,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.deleteStudentsInCourseCascade(courseId);"
      },
      {
        "lineNumber": 964,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 965,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 966,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 967,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Checks if a course has sections for each team"
      },
      {
        "lineNumber": 968,
        "author": {
          "gitId": "-"
        },
        "content": "     *  Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 969,
        "author": {
          "gitId": "-"
        },
        "content": "     *  * All parameters are non-null."
      },
      {
        "lineNumber": 970,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 971,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasIndicatedSections(String courseId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 972,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 973,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.hasIndicatedSections(courseId);"
      },
      {
        "lineNumber": 974,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 975,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 976,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 977,
        "author": {
          "gitId": "-"
        },
        "content": "     * Validates sections for any limit violations and teams for any team name violations."
      },
      {
        "lineNumber": 978,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 979,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 980,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 981,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 982,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see StudentsLogic#validateSectionsAndTeams(List, String)"
      },
      {
        "lineNumber": 983,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 984,
        "author": {
          "gitId": "-"
        },
        "content": "    public void validateSectionsAndTeams(List\u003cStudentAttributes\u003e studentList, String courseId) throws EnrollException {"
      },
      {
        "lineNumber": 985,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 986,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentList);"
      },
      {
        "lineNumber": 987,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 988,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 989,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.validateSectionsAndTeams(studentList, courseId);"
      },
      {
        "lineNumber": 990,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 991,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 992,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 993,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all students of a team."
      },
      {
        "lineNumber": 994,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 995,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cStudentAttributes\u003e getStudentsForTeam(String teamName, String courseId) {"
      },
      {
        "lineNumber": 996,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(teamName);"
      },
      {
        "lineNumber": 997,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 998,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 999,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getStudentsForTeam(teamName, courseId);"
      },
      {
        "lineNumber": 1000,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1001,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1002,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1003,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates search documents for the given students."
      },
      {
        "lineNumber": 1004,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1005,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putStudentDocuments(List\u003cStudentAttributes\u003e students) {"
      },
      {
        "lineNumber": 1006,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsLogic.putDocuments(students);"
      },
      {
        "lineNumber": 1007,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1008,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1009,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1010,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates students list of a course in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1011,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1012,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1013,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1014,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getCourseStudentListAsCsv(String courseId, String googleId) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1015,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1016,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1017,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1018,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1019,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getCourseStudentListAsCsv(courseId, googleId);"
      },
      {
        "lineNumber": 1020,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1021,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1022,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1023,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback session."
      },
      {
        "lineNumber": 1024,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1025,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1026,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1027,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1028,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback session"
      },
      {
        "lineNumber": 1029,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the session is not valid"
      },
      {
        "lineNumber": 1030,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the session already exist"
      },
      {
        "lineNumber": 1031,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1032,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes createFeedbackSession(FeedbackSessionAttributes feedbackSession)"
      },
      {
        "lineNumber": 1033,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityAlreadyExistsException, InvalidParametersException {"
      },
      {
        "lineNumber": 1034,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSession);"
      },
      {
        "lineNumber": 1035,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1036,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.createFeedbackSession(feedbackSession);"
      },
      {
        "lineNumber": 1037,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1038,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1039,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1040,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the data storage."
      },
      {
        "lineNumber": 1041,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1042,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1043,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1044,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1045,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found or in recycle bin."
      },
      {
        "lineNumber": 1046,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1047,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1048,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1049,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1050,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1051,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1052,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1053,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1054,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1055,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1056,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a feedback session from the recycle bin."
      },
      {
        "lineNumber": 1057,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1058,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1059,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1060,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1061,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return null if not found."
      },
      {
        "lineNumber": 1062,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1063,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes getFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1064,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1065,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1066,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1067,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1068,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1069,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1070,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1071,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1072,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1073,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1074,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForCourse(String courseId) {"
      },
      {
        "lineNumber": 1075,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1076,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForCourse(courseId);"
      },
      {
        "lineNumber": 1077,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1078,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1079,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1080,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1081,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1082,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1083,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionDetailsBundle getFeedbackSessionDetails(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1084,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1085,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1086,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1087,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1088,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1089,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionDetails(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1090,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1091,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1092,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1093,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions WITHOUT their response"
      },
      {
        "lineNumber": 1094,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor given by his googleId."
      },
      {
        "lineNumber": 1095,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1096,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1097,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1098,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1099,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsListForInstructor(String, boolean)"
      },
      {
        "lineNumber": 1100,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1101,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor(String googleId, boolean omitArchived) {"
      },
      {
        "lineNumber": 1102,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1103,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(googleId, omitArchived);"
      },
      {
        "lineNumber": 1104,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1106,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsListForInstructor("
      },
      {
        "lineNumber": 1107,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 1108,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1109,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsListForInstructor(instructorList);"
      },
      {
        "lineNumber": 1110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a {@code List} of all feedback sessions in Recycle Bin WITHOUT their response"
      },
      {
        "lineNumber": 1114,
        "author": {
          "gitId": "-"
        },
        "content": "     * statistics for a instructor."
      },
      {
        "lineNumber": 1115,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1116,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1117,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1118,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1119,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructor(InstructorAttributes instructor) {"
      },
      {
        "lineNumber": 1120,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructor);"
      },
      {
        "lineNumber": 1121,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructor(instructor);"
      },
      {
        "lineNumber": 1122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1124,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getSoftDeletedFeedbackSessionsListForInstructors("
      },
      {
        "lineNumber": 1125,
        "author": {
          "gitId": "-"
        },
        "content": "            List\u003cInstructorAttributes\u003e instructorList) {"
      },
      {
        "lineNumber": 1126,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1127,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getSoftDeletedFeedbackSessionsListForInstructors(instructorList);"
      },
      {
        "lineNumber": 1128,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1130,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1131,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1132,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that an instructor can view/submit as a"
      },
      {
        "lineNumber": 1133,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1134,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1135,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1136,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1137,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1138,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForInstructor(String, String, String)"
      },
      {
        "lineNumber": 1139,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1140,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForInstructor(String feedbackSessionName,"
      },
      {
        "lineNumber": 1141,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String courseId,"
      },
      {
        "lineNumber": 1142,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                         String userEmail)"
      },
      {
        "lineNumber": 1143,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1145,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1146,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1147,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1149,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1150,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1152,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1153,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets {@code FeedbackQuestions} and previously filled"
      },
      {
        "lineNumber": 1154,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@code FeedbackResponses} that a student can view/submit as a"
      },
      {
        "lineNumber": 1155,
        "author": {
          "gitId": "-"
        },
        "content": "     * {@link FeedbackSessionQuestionsBundle}."
      },
      {
        "lineNumber": 1156,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1157,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1158,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1159,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1160,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionQuestionsForStudent(String, String, String)"
      },
      {
        "lineNumber": 1161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1162,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionQuestionsBundle getFeedbackSessionQuestionsBundleForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1163,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String courseId,"
      },
      {
        "lineNumber": 1164,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String userEmail)"
      },
      {
        "lineNumber": 1165,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1167,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1168,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1169,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1170,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1171,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionQuestionsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1172,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1174,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1175,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the recipients of a feedback question for student."
      },
      {
        "lineNumber": 1176,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1177,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackQuestionsLogic#getRecipientsOfQuestionForStudent(FeedbackQuestionAttributes, String, String)"
      },
      {
        "lineNumber": 1178,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1179,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, String\u003e getRecipientsOfQuestionForStudent("
      },
      {
        "lineNumber": 1180,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, String giverEmail, String giverTeam) {"
      },
      {
        "lineNumber": 1181,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1182,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1183,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverTeam);"
      },
      {
        "lineNumber": 1184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1185,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getRecipientsOfQuestionForStudent(question, giverEmail, giverTeam);"
      },
      {
        "lineNumber": 1186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1188,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1189,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the recipients of a feedback question for instructor."
      },
      {
        "lineNumber": 1190,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1191,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackQuestionsLogic#getRecipientsOfQuestionForInstructor(FeedbackQuestionAttributes, String)"
      },
      {
        "lineNumber": 1192,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1193,
        "author": {
          "gitId": "-"
        },
        "content": "    public Map\u003cString, String\u003e getRecipientsOfQuestionForInstructor(FeedbackQuestionAttributes question, String giverEmail) {"
      },
      {
        "lineNumber": 1194,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1195,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1196,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1197,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getRecipientsOfQuestionForInstructor(question, giverEmail);"
      },
      {
        "lineNumber": 1198,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1200,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackSessionName,"
      },
      {
        "lineNumber": 1201,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String courseId,"
      },
      {
        "lineNumber": 1202,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          int questionNumber) {"
      },
      {
        "lineNumber": 1203,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1204,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1206,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackSessionName, courseId, questionNumber);"
      },
      {
        "lineNumber": 1207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1209,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1210,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1211,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1212,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1213,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1214,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes getFeedbackQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1215,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1216,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1217,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1219,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1220,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a list of all questions for the given session that"
      },
      {
        "lineNumber": 1221,
        "author": {
          "gitId": "-"
        },
        "content": "     * students can view/submit."
      },
      {
        "lineNumber": 1222,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1223,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForStudents("
      },
      {
        "lineNumber": 1224,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1225,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1226,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1228,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForStudents(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1229,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1230,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1231,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1232,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a {@code List} of all questions for the given session that"
      },
      {
        "lineNumber": 1233,
        "author": {
          "gitId": "-"
        },
        "content": "     * instructor can view/submit."
      },
      {
        "lineNumber": 1234,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1235,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForInstructors("
      },
      {
        "lineNumber": 1236,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String instructorEmail) throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1237,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1238,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1240,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForInstructor(feedbackSessionName, courseId, instructorEmail);"
      },
      {
        "lineNumber": 1241,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1243,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1244,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1245,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1246,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1247,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryAsCsv(String, String,"
      },
      {
        "lineNumber": 1248,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, String, boolean, boolean)"
      },
      {
        "lineNumber": 1249,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1250,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryAsCsv("
      },
      {
        "lineNumber": 1251,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail,"
      },
      {
        "lineNumber": 1252,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean isMissingResponsesShown, boolean isStatsShown, String questionId)"
      },
      {
        "lineNumber": 1253,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1255,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1256,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1258,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryAsCsv("
      },
      {
        "lineNumber": 1259,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, questionId,"
      },
      {
        "lineNumber": 1260,
        "author": {
          "gitId": "-"
        },
        "content": "                isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1261,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1263,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1264,
        "author": {
          "gitId": "-"
        },
        "content": "     * Generates summary results (without comments) within a section in CSV format. \u003cbr\u003e"
      },
      {
        "lineNumber": 1265,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1266,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters(except questionId) are non-null. \u003cbr\u003e"
      },
      {
        "lineNumber": 1267,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResultsSummaryInSectionAsCsv(String, String, String,"
      },
      {
        "lineNumber": 1268,
        "author": {
          "gitId": "-"
        },
        "content": "     *      String, SectionDetail, String, boolean, boolean)"
      },
      {
        "lineNumber": 1269,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1270,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getFeedbackSessionResultSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1271,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String feedbackSessionName, String instructorEmail, String section,"
      },
      {
        "lineNumber": 1272,
        "author": {
          "gitId": "-"
        },
        "content": "            SectionDetail sectionDetail, String questionId, boolean isMissingResponsesShown, boolean isStatsShown)"
      },
      {
        "lineNumber": 1273,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, ExceedingRangeException {"
      },
      {
        "lineNumber": 1274,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1275,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1276,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1277,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1278,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(sectionDetail);"
      },
      {
        "lineNumber": 1279,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1280,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsSummaryInSectionAsCsv("
      },
      {
        "lineNumber": 1281,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSessionName, courseId, instructorEmail, section, sectionDetail,"
      },
      {
        "lineNumber": 1282,
        "author": {
          "gitId": "-"
        },
        "content": "                questionId, isMissingResponsesShown, isStatsShown);"
      },
      {
        "lineNumber": 1283,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1285,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1286,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1287,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1288,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return a list of viewable feedback sessions for any user in the course."
      },
      {
        "lineNumber": 1289,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1290,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsForUserInCourse(String courseId, String userEmail)"
      },
      {
        "lineNumber": 1291,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1292,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1293,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1294,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1295,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsForUserInCourse(courseId, userEmail);"
      },
      {
        "lineNumber": 1296,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1298,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1299,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1300,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1301,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1302,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasStudentSubmittedFeedback(FeedbackSessionAttributes fsa, String studentEmail) {"
      },
      {
        "lineNumber": 1303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1304,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(fsa);"
      },
      {
        "lineNumber": 1305,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(studentEmail);"
      },
      {
        "lineNumber": 1306,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1307,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isFeedbackSessionCompletedByStudent(fsa, studentEmail);"
      },
      {
        "lineNumber": 1308,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1310,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1311,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates the details of a feedback session by {@link FeedbackSessionAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1312,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1313,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAdjust email sending status if necessary."
      },
      {
        "lineNumber": 1314,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1315,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1316,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1317,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1318,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback session"
      },
      {
        "lineNumber": 1319,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1320,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1321,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1322,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes updateFeedbackSession(FeedbackSessionAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1323,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1324,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1326,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.updateFeedbackSession(updateOptions);"
      },
      {
        "lineNumber": 1327,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1328,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1329,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1330,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds an instructor with {@code email} in the instructor respondent set"
      },
      {
        "lineNumber": 1331,
        "author": {
          "gitId": "-"
        },
        "content": "     * in feedback session {@code feedbackSessionName} in {@code courseId}."
      },
      {
        "lineNumber": 1332,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1333,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1334,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1336,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1337,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1338,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1340,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1341,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1343,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1344,
        "author": {
          "gitId": "-"
        },
        "content": "     * Adds a student with {@code email} in the student respondent set"
      },
      {
        "lineNumber": 1345,
        "author": {
          "gitId": "-"
        },
        "content": "     * in feedback session {@code feedbackSessionName} in {@code courseId}."
      },
      {
        "lineNumber": 1346,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1347,
        "author": {
          "gitId": "-"
        },
        "content": "    public void addStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1348,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1350,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1351,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1352,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1354,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.addStudentRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1357,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1358,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes an instructor with {@code email} in the instructor respondent set"
      },
      {
        "lineNumber": 1359,
        "author": {
          "gitId": "-"
        },
        "content": "     * in session {@code feedbackSessionName} of course {@code courseId}."
      },
      {
        "lineNumber": 1360,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1361,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteInstructorRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1362,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1364,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1365,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1366,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1368,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteInstructorRespondent(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1371,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1372,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a student with {@code email} in the student respondent set"
      },
      {
        "lineNumber": 1373,
        "author": {
          "gitId": "-"
        },
        "content": "     * in session {@code feedbackSessionName} of course {@code courseId}."
      },
      {
        "lineNumber": 1374,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1375,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteStudentRespondent(String email, String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1376,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1378,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(email);"
      },
      {
        "lineNumber": 1379,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1380,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1381,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1382,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteStudentFromRespondentList(email, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1383,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1385,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1386,
        "author": {
          "gitId": "-"
        },
        "content": "     * Publishes a feedback session."
      },
      {
        "lineNumber": 1387,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1388,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1389,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1390,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1391,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the published feedback session"
      },
      {
        "lineNumber": 1392,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1393,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if session is already published"
      },
      {
        "lineNumber": 1394,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1395,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes publishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1396,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1397,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1398,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1399,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1400,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1401,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.publishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1402,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1403,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1404,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1405,
        "author": {
          "gitId": "-"
        },
        "content": "     * Unpublishes a feedback session."
      },
      {
        "lineNumber": 1406,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1407,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1408,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1409,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1410,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the unpublished feedback session"
      },
      {
        "lineNumber": 1411,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback session cannot be found"
      },
      {
        "lineNumber": 1412,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException"
      },
      {
        "lineNumber": 1413,
        "author": {
          "gitId": "-"
        },
        "content": "     *             if the feedback session is not ready to be unpublished."
      },
      {
        "lineNumber": 1414,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1415,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionAttributes unpublishFeedbackSession(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1416,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1418,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1419,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1421,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.unpublishFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1422,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1423,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1424,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1425,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback session cascade to its associated questions, responses and comments."
      },
      {
        "lineNumber": 1426,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1427,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1428,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1429,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1430,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackSessionCascade(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1431,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1432,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1433,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1434,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1435,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.deleteFeedbackSessionCascade(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1436,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1438,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1439,
        "author": {
          "gitId": "-"
        },
        "content": "     * Soft-deletes a specific session to Recycle Bin."
      },
      {
        "lineNumber": 1440,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1441,
        "author": {
          "gitId": "-"
        },
        "content": "    public void moveFeedbackSessionToRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1442,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1444,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1445,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1446,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1447,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1448,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1449,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1450,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1451,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores a specific session from Recycle Bin to feedback sessions table."
      },
      {
        "lineNumber": 1452,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1453,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreFeedbackSessionFromRecycleBin(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1454,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1455,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1456,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1457,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1458,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1459,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.restoreFeedbackSessionFromRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1460,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1461,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1462,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1463,
        "author": {
          "gitId": "-"
        },
        "content": "     * Restores all sessions from Recycle Bin to feedback sessions table."
      },
      {
        "lineNumber": 1464,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1465,
        "author": {
          "gitId": "-"
        },
        "content": "    public void restoreAllFeedbackSessionsFromRecycleBin(List\u003cInstructorAttributes\u003e instructorList)"
      },
      {
        "lineNumber": 1466,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1467,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1468,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorList);"
      },
      {
        "lineNumber": 1469,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1470,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsLogic.restoreAllFeedbackSessionsFromRecycleBin(instructorList);"
      },
      {
        "lineNumber": 1471,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1473,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1474,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a new feedback question."
      },
      {
        "lineNumber": 1475,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1476,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1477,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1478,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1479,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return the created question"
      },
      {
        "lineNumber": 1480,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the question is invalid"
      },
      {
        "lineNumber": 1481,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1482,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes createFeedbackQuestion(FeedbackQuestionAttributes feedbackQuestion)"
      },
      {
        "lineNumber": 1483,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException {"
      },
      {
        "lineNumber": 1484,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestion);"
      },
      {
        "lineNumber": 1485,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1486,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.createFeedbackQuestion(feedbackQuestion);"
      },
      {
        "lineNumber": 1487,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1488,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1489,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1490,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback question by {@code FeedbackQuestionAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1491,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1492,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade adjust the question number of questions in the same session."
      },
      {
        "lineNumber": 1493,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1494,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade adjust the existing response of the question."
      },
      {
        "lineNumber": 1495,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1496,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003e Preconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1497,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1498,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1499,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback question"
      },
      {
        "lineNumber": 1500,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1501,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the feedback question cannot be found"
      },
      {
        "lineNumber": 1502,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1503,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackQuestionAttributes updateFeedbackQuestionCascade(FeedbackQuestionAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1504,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1505,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1506,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1507,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.updateFeedbackQuestionCascade(updateOptions);"
      },
      {
        "lineNumber": 1508,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1509,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1510,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1511,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback question cascade its responses and comments."
      },
      {
        "lineNumber": 1512,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1513,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eSilently fail if question does not exist."
      },
      {
        "lineNumber": 1514,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1515,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will also be updated due the deletion of question."
      },
      {
        "lineNumber": 1516,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1517,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1518,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1519,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1520,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackQuestionCascade(String questionId) {"
      },
      {
        "lineNumber": 1521,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(questionId);"
      },
      {
        "lineNumber": 1522,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackQuestionsLogic.deleteFeedbackQuestionCascade(questionId);"
      },
      {
        "lineNumber": 1523,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1525,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1526,
        "author": {
          "gitId": "-"
        },
        "content": "     * Checks whether there are responses for a question."
      },
      {
        "lineNumber": 1527,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1528,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1529,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1530,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1531,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean areThereResponsesForQuestion(String feedbackQuestionId) {"
      },
      {
        "lineNumber": 1532,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.areThereResponsesForQuestion(feedbackQuestionId);"
      },
      {
        "lineNumber": 1533,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1534,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1535,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1536,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all copiable questions for an instructor\u003cbr\u003e"
      },
      {
        "lineNumber": 1537,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1538,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1539,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1540,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1541,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1542,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getCopiableFeedbackQuestionsForInstructor(String googleId)"
      },
      {
        "lineNumber": 1543,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1544,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(googleId);"
      },
      {
        "lineNumber": 1545,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getCopiableFeedbackQuestionsForInstructor(googleId);"
      },
      {
        "lineNumber": 1546,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1547,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1548,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1549,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets all questions for a feedback session.\u003cbr\u003e"
      },
      {
        "lineNumber": 1550,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns an empty list if they are no questions"
      },
      {
        "lineNumber": 1551,
        "author": {
          "gitId": "-"
        },
        "content": "     * for the session."
      },
      {
        "lineNumber": 1552,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1553,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1554,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1555,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackQuestionAttributes\u003e getFeedbackQuestionsForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1556,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1557,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1558,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1559,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackQuestionsLogic.getFeedbackQuestionsForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1560,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1561,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1562,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1563,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets the response rate status for a session."
      },
      {
        "lineNumber": 1564,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1565,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003ePreconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1566,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1567,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1568,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionResponseStatus(String, String)"
      },
      {
        "lineNumber": 1569,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1570,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResponseStatus getFeedbackSessionResponseStatus(String feedbackSessionName, String courseId)"
      },
      {
        "lineNumber": 1571,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1572,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1573,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1574,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1575,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1576,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResponseStatus(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1577,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1578,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1579,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1580,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1581,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the student for a feedback session."
      },
      {
        "lineNumber": 1582,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1583,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1584,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1585,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForStudent(String feedbackSessionName,"
      },
      {
        "lineNumber": 1586,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                            String courseId, String userEmail)"
      },
      {
        "lineNumber": 1587,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1588,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1589,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1590,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1591,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1592,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForStudent(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1593,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1594,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1595,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1596,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1597,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session within the given range"
      },
      {
        "lineNumber": 1598,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1599,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1600,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1601,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorWithinRangeFromView("
      },
      {
        "lineNumber": 1602,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, int range, String viewType)"
      },
      {
        "lineNumber": 1603,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1604,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1605,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1606,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1607,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1608,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(viewType);"
      },
      {
        "lineNumber": 1609,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1610,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorWithinRangeFromView(feedbackSessionName,"
      },
      {
        "lineNumber": 1611,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               courseId, userEmail,"
      },
      {
        "lineNumber": 1612,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                               range, viewType);"
      },
      {
        "lineNumber": 1613,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1614,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1615,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1616,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1617,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a section within the given range"
      },
      {
        "lineNumber": 1618,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1619,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1620,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1621,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1622,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1623,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1624,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1625,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1626,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1627,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1628,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1629,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromSectionWithinRange("
      },
      {
        "lineNumber": 1630,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1631,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1632,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1633,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1634,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1635,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session to a section within the given range"
      },
      {
        "lineNumber": 1636,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1637,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1638,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1639,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1640,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String section, int range)"
      },
      {
        "lineNumber": 1641,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1642,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1643,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1644,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1645,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1646,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1647,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorToSectionWithinRange("
      },
      {
        "lineNumber": 1648,
        "author": {
          "gitId": "-"
        },
        "content": "                                        feedbackSessionName, courseId, userEmail, section, range);"
      },
      {
        "lineNumber": 1649,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1651,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1652,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a set of giver identifiers that has at least one response under a feedback session."
      },
      {
        "lineNumber": 1653,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1654,
        "author": {
          "gitId": "-"
        },
        "content": "    public Set\u003cString\u003e getGiverSetThatAnswerFeedbackSession(String courseId, String feedbackSessionName) {"
      },
      {
        "lineNumber": 1655,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1656,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1657,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1658,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getGiverSetThatAnswerFeedbackSession(courseId, feedbackSessionName);"
      },
      {
        "lineNumber": 1659,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1660,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1661,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1662,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1663,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1664,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1665,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1666,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1667,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1668,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestion("
      },
      {
        "lineNumber": 1669,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail, String questionId)"
      },
      {
        "lineNumber": 1670,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1671,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1672,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1673,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1674,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1675,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1676,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestion(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1677,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                        userEmail, questionId);"
      },
      {
        "lineNumber": 1678,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1679,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1680,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1681,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1682,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session from a given question number"
      },
      {
        "lineNumber": 1683,
        "author": {
          "gitId": "-"
        },
        "content": "     * in a given section."
      },
      {
        "lineNumber": 1684,
        "author": {
          "gitId": "-"
        },
        "content": "     * This will not retrieve the list of comments for this question"
      },
      {
        "lineNumber": 1685,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1686,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1687,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1688,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1689,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String feedbackSessionName, String courseId, String userEmail,"
      },
      {
        "lineNumber": 1690,
        "author": {
          "gitId": "-"
        },
        "content": "                                    String questionId, String selectedSection, SectionDetail selectedSectionDetail)"
      },
      {
        "lineNumber": 1691,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1692,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1693,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1694,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1695,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1696,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(selectedSection);"
      },
      {
        "lineNumber": 1697,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(selectedSectionDetail);"
      },
      {
        "lineNumber": 1698,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1699,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorFromQuestionInSection("
      },
      {
        "lineNumber": 1700,
        "author": {
          "gitId": "-"
        },
        "content": "                                            feedbackSessionName, courseId, userEmail,"
      },
      {
        "lineNumber": 1701,
        "author": {
          "gitId": "-"
        },
        "content": "                                            questionId, selectedSection, selectedSectionDetail);"
      },
      {
        "lineNumber": 1702,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1703,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1704,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1705,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1706,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session."
      },
      {
        "lineNumber": 1707,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1708,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1709,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1710,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructor("
      },
      {
        "lineNumber": 1711,
        "author": {
          "gitId": "-"
        },
        "content": "            String feedbackSessionName, String courseId, String userEmail)"
      },
      {
        "lineNumber": 1712,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1713,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1714,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1715,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1716,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1717,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1718,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructor(feedbackSessionName, courseId, userEmail);"
      },
      {
        "lineNumber": 1719,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1720,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1721,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1722,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets a question+response bundle for questions with responses that"
      },
      {
        "lineNumber": 1723,
        "author": {
          "gitId": "-"
        },
        "content": "     * is visible to the instructor for a feedback session in a specific section."
      },
      {
        "lineNumber": 1724,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1725,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1726,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1727,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackSessionResultsBundle getFeedbackSessionResultsForInstructorInSection(String feedbackSessionName,"
      },
      {
        "lineNumber": 1728,
        "author": {
          "gitId": "-"
        },
        "content": "            String courseId, String userEmail, String section, SectionDetail sectionDetail)"
      },
      {
        "lineNumber": 1729,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException {"
      },
      {
        "lineNumber": 1730,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1731,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1732,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1733,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1734,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(section);"
      },
      {
        "lineNumber": 1735,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(sectionDetail);"
      },
      {
        "lineNumber": 1736,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1737,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionResultsForInstructorInSection(feedbackSessionName, courseId,"
      },
      {
        "lineNumber": 1738,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                     userEmail, section, sectionDetail);"
      },
      {
        "lineNumber": 1739,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1740,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1741,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1742,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get existing feedback responses from student or his team for the given question."
      },
      {
        "lineNumber": 1743,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1744,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromStudentOrTeamForQuestion("
      },
      {
        "lineNumber": 1745,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, StudentAttributes student) {"
      },
      {
        "lineNumber": 1746,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1747,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(student);"
      },
      {
        "lineNumber": 1748,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1749,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesFromStudentOrTeamForQuestion(question, student);"
      },
      {
        "lineNumber": 1750,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1751,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1752,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1753,
        "author": {
          "gitId": "-"
        },
        "content": "     * Get existing feedback responses from instructor for the given question."
      },
      {
        "lineNumber": 1754,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1755,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e getFeedbackResponsesFromInstructorForQuestion("
      },
      {
        "lineNumber": 1756,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackQuestionAttributes question, InstructorAttributes instructorAttributes) {"
      },
      {
        "lineNumber": 1757,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(question);"
      },
      {
        "lineNumber": 1758,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorAttributes);"
      },
      {
        "lineNumber": 1759,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1760,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesFromGiverForQuestion("
      },
      {
        "lineNumber": 1761,
        "author": {
          "gitId": "-"
        },
        "content": "                question.getFeedbackQuestionId(), instructorAttributes.getEmail());"
      },
      {
        "lineNumber": 1762,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1763,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1764,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackResponseId) {"
      },
      {
        "lineNumber": 1765,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseId);"
      },
      {
        "lineNumber": 1766,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackResponseId);"
      },
      {
        "lineNumber": 1767,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1768,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1769,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes getFeedbackResponse(String feedbackQuestionId,"
      },
      {
        "lineNumber": 1770,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String giverEmail,"
      },
      {
        "lineNumber": 1771,
        "author": {
          "gitId": "-"
        },
        "content": "                                                          String recipient) {"
      },
      {
        "lineNumber": 1772,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1773,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackQuestionId);"
      },
      {
        "lineNumber": 1774,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1775,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(recipient);"
      },
      {
        "lineNumber": 1776,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1777,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponse(feedbackQuestionId, giverEmail, recipient);"
      },
      {
        "lineNumber": 1778,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1779,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1780,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1781,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates a feedback response."
      },
      {
        "lineNumber": 1782,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1783,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1784,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1785,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1786,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return created feedback response"
      },
      {
        "lineNumber": 1787,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if the response is not valid"
      },
      {
        "lineNumber": 1788,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response already exist"
      },
      {
        "lineNumber": 1789,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1790,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes createFeedbackResponse(FeedbackResponseAttributes feedbackResponse)"
      },
      {
        "lineNumber": 1791,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1792,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponse);"
      },
      {
        "lineNumber": 1793,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1794,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 1795,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1796,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1797,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasGiverRespondedForSession(String userEmail, String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1798,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(userEmail);"
      },
      {
        "lineNumber": 1799,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1800,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1801,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1802,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasGiverRespondedForSession(userEmail, feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1803,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1804,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1805,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean hasResponsesForCourse(String courseId) {"
      },
      {
        "lineNumber": 1806,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.hasResponsesForCourse(courseId);"
      },
      {
        "lineNumber": 1807,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1808,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1809,
        "author": {
          "gitId": "-"
        },
        "content": "    public boolean isOpenOrPublishedEmailSentForTheCourse(String courseId) {"
      },
      {
        "lineNumber": 1810,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1811,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.isOpenOrPublishedEmailSentForTheCourse(courseId);"
      },
      {
        "lineNumber": 1812,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1813,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1814,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1815,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response by {@link FeedbackResponseAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1816,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1817,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eCascade updates its associated feedback response comment"
      },
      {
        "lineNumber": 1818,
        "author": {
          "gitId": "-"
        },
        "content": "     * (e.g. associated response ID, giverSection and recipientSection)."
      },
      {
        "lineNumber": 1819,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1820,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eIf the giver/recipient field is changed, the response is updated by recreating the response"
      },
      {
        "lineNumber": 1821,
        "author": {
          "gitId": "-"
        },
        "content": "     * as question-giver-recipient is the primary key."
      },
      {
        "lineNumber": 1822,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1823,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1824,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1825,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1826,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated feedback response"
      },
      {
        "lineNumber": 1827,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1828,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 1829,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityAlreadyExistsException if the response cannot be updated"
      },
      {
        "lineNumber": 1830,
        "author": {
          "gitId": "-"
        },
        "content": "     *         by recreation because of an existent response"
      },
      {
        "lineNumber": 1831,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1832,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseAttributes updateFeedbackResponseCascade(FeedbackResponseAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1833,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1834,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1835,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1836,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.updateFeedbackResponseCascade(updateOptions);"
      },
      {
        "lineNumber": 1837,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1838,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1839,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1840,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a feedback response cascade its associated comments."
      },
      {
        "lineNumber": 1841,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1842,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eThe respondent lists will NOT be updated."
      },
      {
        "lineNumber": 1843,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1844,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1845,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1846,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1847,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseCascade(String responseId) {"
      },
      {
        "lineNumber": 1848,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(responseId);"
      },
      {
        "lineNumber": 1849,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponsesLogic.deleteFeedbackResponseCascade(responseId);"
      },
      {
        "lineNumber": 1850,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1851,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1852,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1853,
        "author": {
          "gitId": "-"
        },
        "content": "     * Create a feedback response comment, and return the created comment."
      },
      {
        "lineNumber": 1854,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1855,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1856,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1857,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1858,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes createFeedbackResponseComment("
      },
      {
        "lineNumber": 1859,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes feedbackResponseComment)"
      },
      {
        "lineNumber": 1860,
        "author": {
          "gitId": "-"
        },
        "content": "            throws InvalidParametersException, EntityDoesNotExistException, EntityAlreadyExistsException {"
      },
      {
        "lineNumber": 1861,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseComment);"
      },
      {
        "lineNumber": 1862,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1863,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.createFeedbackResponseComment(feedbackResponseComment);"
      },
      {
        "lineNumber": 1864,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1865,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1866,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment(Long feedbackResponseCommentId) {"
      },
      {
        "lineNumber": 1867,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1868,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(feedbackResponseCommentId);"
      },
      {
        "lineNumber": 1869,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1870,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1871,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1872,
        "author": {
          "gitId": "-"
        },
        "content": "     * Preconditions: \u003cbr\u003e"
      },
      {
        "lineNumber": 1873,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1874,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1875,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes getFeedbackResponseComment("
      },
      {
        "lineNumber": 1876,
        "author": {
          "gitId": "-"
        },
        "content": "            String responseId, String giverEmail, Instant creationDate) {"
      },
      {
        "lineNumber": 1877,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(responseId);"
      },
      {
        "lineNumber": 1878,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1879,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(creationDate);"
      },
      {
        "lineNumber": 1880,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1881,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseComment(responseId, giverEmail, creationDate);"
      },
      {
        "lineNumber": 1882,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1883,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1884,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseCommentAttributes\u003e getFeedbackResponseCommentForGiver(String courseId,"
      },
      {
        "lineNumber": 1885,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                                      String giverEmail) {"
      },
      {
        "lineNumber": 1886,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1887,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(giverEmail);"
      },
      {
        "lineNumber": 1888,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1889,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.getFeedbackResponseCommentsForGiver(courseId, giverEmail);"
      },
      {
        "lineNumber": 1890,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1891,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1892,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1893,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates or updates document for the given comment."
      },
      {
        "lineNumber": 1894,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1895,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocument(FeedbackResponseCommentAttributes)"
      },
      {
        "lineNumber": 1896,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1897,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putDocument(FeedbackResponseCommentAttributes comment) {"
      },
      {
        "lineNumber": 1898,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocument(comment);"
      },
      {
        "lineNumber": 1899,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1900,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1901,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1902,
        "author": {
          "gitId": "-"
        },
        "content": "     * Batch creates or updates documents for the given comments."
      },
      {
        "lineNumber": 1903,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1904,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackResponseCommentsLogic#putDocuments(List)"
      },
      {
        "lineNumber": 1905,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1906,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putFeedbackResponseCommentDocuments(List\u003cFeedbackResponseCommentAttributes\u003e comments) {"
      },
      {
        "lineNumber": 1907,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.putDocuments(comments);"
      },
      {
        "lineNumber": 1908,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1909,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1910,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1911,
        "author": {
          "gitId": "-"
        },
        "content": "     * Search for FeedbackResponseComment. Preconditions: all parameters are non-null."
      },
      {
        "lineNumber": 1912,
        "author": {
          "gitId": "-"
        },
        "content": "     * @param instructors   a list of InstructorAttributes associated to a googleId,"
      },
      {
        "lineNumber": 1913,
        "author": {
          "gitId": "-"
        },
        "content": "     *                      used for filtering of search result"
      },
      {
        "lineNumber": 1914,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return Null if no match found"
      },
      {
        "lineNumber": 1915,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1916,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentSearchResultBundle searchFeedbackResponseComments(String queryString,"
      },
      {
        "lineNumber": 1917,
        "author": {
          "gitId": "-"
        },
        "content": "                                                                         List\u003cInstructorAttributes\u003e instructors) {"
      },
      {
        "lineNumber": 1918,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(queryString);"
      },
      {
        "lineNumber": 1919,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructors);"
      },
      {
        "lineNumber": 1920,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.searchFeedbackResponseComments(queryString, instructors);"
      },
      {
        "lineNumber": 1921,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1922,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1923,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1924,
        "author": {
          "gitId": "-"
        },
        "content": "     * Updates a feedback response comment by {@link FeedbackResponseCommentAttributes.UpdateOptions}."
      },
      {
        "lineNumber": 1925,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1926,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cbr/\u003ePreconditions: \u003cbr/\u003e"
      },
      {
        "lineNumber": 1927,
        "author": {
          "gitId": "-"
        },
        "content": "     * * All parameters are non-null."
      },
      {
        "lineNumber": 1928,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1929,
        "author": {
          "gitId": "-"
        },
        "content": "     * @return updated comment"
      },
      {
        "lineNumber": 1930,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws InvalidParametersException if attributes to update are not valid"
      },
      {
        "lineNumber": 1931,
        "author": {
          "gitId": "-"
        },
        "content": "     * @throws EntityDoesNotExistException if the comment cannot be found"
      },
      {
        "lineNumber": 1932,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1933,
        "author": {
          "gitId": "-"
        },
        "content": "    public FeedbackResponseCommentAttributes updateFeedbackResponseComment("
      },
      {
        "lineNumber": 1934,
        "author": {
          "gitId": "-"
        },
        "content": "            FeedbackResponseCommentAttributes.UpdateOptions updateOptions)"
      },
      {
        "lineNumber": 1935,
        "author": {
          "gitId": "-"
        },
        "content": "            throws EntityDoesNotExistException, InvalidParametersException {"
      },
      {
        "lineNumber": 1936,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(updateOptions);"
      },
      {
        "lineNumber": 1937,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1938,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponseCommentsLogic.updateFeedbackResponseComment(updateOptions);"
      },
      {
        "lineNumber": 1939,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1940,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1941,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1942,
        "author": {
          "gitId": "-"
        },
        "content": "     * Deletes a comment."
      },
      {
        "lineNumber": 1943,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1944,
        "author": {
          "gitId": "-"
        },
        "content": "    public void deleteFeedbackResponseComment(long commentId) {"
      },
      {
        "lineNumber": 1945,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponseCommentsLogic.deleteFeedbackResponseComment(commentId);"
      },
      {
        "lineNumber": 1946,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1947,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1948,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cString\u003e getArchivedCourseIds(List\u003cCourseAttributes\u003e allCourses,"
      },
      {
        "lineNumber": 1949,
        "author": {
          "gitId": "-"
        },
        "content": "                                             Map\u003cString, InstructorAttributes\u003e instructorsForCourses) {"
      },
      {
        "lineNumber": 1950,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(allCourses);"
      },
      {
        "lineNumber": 1951,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(instructorsForCourses);"
      },
      {
        "lineNumber": 1952,
        "author": {
          "gitId": "-"
        },
        "content": "        return coursesLogic.getArchivedCourseIds(allCourses, instructorsForCourses);"
      },
      {
        "lineNumber": 1953,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1954,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1955,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackResponseAttributes\u003e"
      },
      {
        "lineNumber": 1956,
        "author": {
          "gitId": "-"
        },
        "content": "            getFeedbackResponsesForSession(String feedbackSessionName, String courseId) {"
      },
      {
        "lineNumber": 1957,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(feedbackSessionName);"
      },
      {
        "lineNumber": 1958,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1959,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackResponsesLogic.getFeedbackResponsesForSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 1960,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1961,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1962,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1963,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns returns a list of sessions that were closed within past hour."
      },
      {
        "lineNumber": 1964,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1965,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsClosedWithinThePastHour()"
      },
      {
        "lineNumber": 1966,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1967,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosedWithinThePastHour() {"
      },
      {
        "lineNumber": 1968,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosedWithinThePastHour();"
      },
      {
        "lineNumber": 1969,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1970,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1971,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsClosingWithinTimeLimit() {"
      },
      {
        "lineNumber": 1972,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsClosingWithinTimeLimit();"
      },
      {
        "lineNumber": 1973,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1974,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1975,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1976,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns a list of sessions that require automated emails to be sent as they are published."
      },
      {
        "lineNumber": 1977,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1978,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see FeedbackSessionsLogic#getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent()"
      },
      {
        "lineNumber": 1979,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1980,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent() {"
      },
      {
        "lineNumber": 1981,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedAutomatedPublishedEmailsToBeSent();"
      },
      {
        "lineNumber": 1982,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1983,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1984,
        "author": {
          "gitId": "-"
        },
        "content": "    public List\u003cFeedbackSessionAttributes\u003e getFeedbackSessionsWhichNeedOpenEmailsToBeSent() {"
      },
      {
        "lineNumber": 1985,
        "author": {
          "gitId": "-"
        },
        "content": "        return feedbackSessionsLogic.getFeedbackSessionsWhichNeedOpenEmailsToBeSent();"
      },
      {
        "lineNumber": 1986,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1987,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1988,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getSectionForTeam(String courseId, String teamName) {"
      },
      {
        "lineNumber": 1989,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(courseId);"
      },
      {
        "lineNumber": 1990,
        "author": {
          "gitId": "-"
        },
        "content": "        Assumption.assertNotNull(teamName);"
      },
      {
        "lineNumber": 1991,
        "author": {
          "gitId": "-"
        },
        "content": "        return studentsLogic.getSectionForTeam(courseId, teamName);"
      },
      {
        "lineNumber": 1992,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 1993,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 1994,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 1995,
        "author": {
          "gitId": "-"
        },
        "content": "     * Persists the given data bundle to the datastore."
      },
      {
        "lineNumber": 1996,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 1997,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#persistDataBundle(DataBundle)"
      },
      {
        "lineNumber": 1998,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 1999,
        "author": {
          "gitId": "-"
        },
        "content": "    public void persistDataBundle(DataBundle dataBundle) throws InvalidParametersException {"
      },
      {
        "lineNumber": 2000,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.persistDataBundle(dataBundle);"
      },
      {
        "lineNumber": 2001,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2002,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2003,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2004,
        "author": {
          "gitId": "-"
        },
        "content": "     * Removes the given data bundle from the datastore."
      },
      {
        "lineNumber": 2005,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2006,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#removeDataBundle(DataBundle)"
      },
      {
        "lineNumber": 2007,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2008,
        "author": {
          "gitId": "-"
        },
        "content": "    public void removeDataBundle(DataBundle dataBundle) {"
      },
      {
        "lineNumber": 2009,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.removeDataBundle(dataBundle);"
      },
      {
        "lineNumber": 2010,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2011,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2012,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 2013,
        "author": {
          "gitId": "-"
        },
        "content": "     * Puts searchable documents from the data bundle to the datastore."
      },
      {
        "lineNumber": 2014,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 2015,
        "author": {
          "gitId": "-"
        },
        "content": "     * @see DataBundleLogic#putDocuments(DataBundle)"
      },
      {
        "lineNumber": 2016,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 2017,
        "author": {
          "gitId": "-"
        },
        "content": "    public void putDocuments(DataBundle dataBundle) {"
      },
      {
        "lineNumber": 2018,
        "author": {
          "gitId": "-"
        },
        "content": "        dataBundleLogic.putDocuments(dataBundle);"
      },
      {
        "lineNumber": 2019,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 2020,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 2021,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 4,
      "-": 2017
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/BinCourseAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityDoesNotExistException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.CourseData;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " * Move a course to the recycle bin."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class BinCourseAction extends Action {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.LOGGED_IN;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!userInfo.isInstructor) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new UnauthorizedAccessException(\"Instructor privilege is required to access this resource.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        String idOfCourseToBin \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        gateKeeper.verifyAccessible(logic.getInstructorForGoogleId(idOfCourseToBin, userInfo.id),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "                logic.getCourse(idOfCourseToBin), Const.ParamsNames.INSTRUCTOR_PERMISSION_MODIFY_COURSE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        String idOfCourseToBin \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            CourseAttributes courseAttributes \u003d logic.getCourse(idOfCourseToBin);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "            courseAttributes.deletedAt \u003d logic.moveCourseToRecycleBin(idOfCourseToBin);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "            return new JsonResult(new CourseData(courseAttributes));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (EntityDoesNotExistException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new EntityNotFoundException(e);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 43
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/action/ConfirmFeedbackSessionSubmissionAction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.ui.webapi.action;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailSendingStatus;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.api.EmailGenerator;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.output.ConfirmationResponse;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.output.ConfirmationResult;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.Intent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": " * Confirm the submission of a feedback session."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfirmFeedbackSessionSubmissionAction extends BasicFeedbackSubmissionAction {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    protected AuthType getMinAuthLevel() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        return AuthType.PUBLIC;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    public void checkSpecificAccessControl() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes feedbackSession \u003d logic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        verifySessionOpenExceptForModeration(feedbackSession);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNotPreview();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        Intent intent \u003d Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (intent) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        case STUDENT_SUBMISSION:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes studentAttributes \u003d getStudentOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            checkAccessControlForStudentFeedbackSubmission(studentAttributes, feedbackSession);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        case INSTRUCTOR_SUBMISSION:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructorAttributes \u003d getInstructorOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            checkAccessControlForInstructorFeedbackSubmission(instructorAttributes, feedbackSession);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidHttpParameterException(\"Unknown intent \" + intent);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    public ActionResult execute() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        String courseId \u003d getNonNullRequestParamValue(Const.ParamsNames.COURSE_ID);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        String feedbackSessionName \u003d getNonNullRequestParamValue(Const.ParamsNames.FEEDBACK_SESSION_NAME);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes feedbackSession \u003d logic.getFeedbackSession(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        boolean isSubmissionEmailConfirmationEmailRequested \u003d"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                getBooleanRequestParamValue(Const.ParamsNames.SEND_SUBMISSION_EMAIL);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        Intent intent \u003d Intent.valueOf(getNonNullRequestParamValue(Const.ParamsNames.INTENT));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        EmailWrapper email \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (intent) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        case STUDENT_SUBMISSION:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            StudentAttributes studentAttributes \u003d getStudentOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasStudentRespondedForSession \u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "                    logic.hasGiverRespondedForSession(studentAttributes.getEmail(), feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasStudentRespondedForSession) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, studentAttributes.getEmail(), false, false);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, studentAttributes.getEmail(), false, true);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSubmissionEmailConfirmationEmailRequested) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                email \u003d new EmailGenerator().generateFeedbackSubmissionConfirmationEmailForStudent("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                            feedbackSession, studentAttributes, Instant.now());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        case INSTRUCTOR_SUBMISSION:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            InstructorAttributes instructorAttributes \u003d getInstructorOfCourseFromRequest(feedbackSession.getCourseId());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            boolean hasInstructorRespondedForSession \u003d"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                    logic.hasGiverRespondedForSession(instructorAttributes.getEmail(), feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            if (hasInstructorRespondedForSession) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, instructorAttributes.getEmail(), true, false);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                taskQueuer.scheduleUpdateRespondentForSession("
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                        courseId, feedbackSessionName, instructorAttributes.getEmail(), true, true);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            if (isSubmissionEmailConfirmationEmailRequested) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                email \u003d new EmailGenerator().generateFeedbackSubmissionConfirmationEmailForInstructor("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                        feedbackSession, instructorAttributes, Instant.now());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            throw new InvalidHttpParameterException(\"Unknown intent \" + intent);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        if (email !\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            EmailSendingStatus status \u003d emailSender.sendEmail(email);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!status.isSuccess()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                return new JsonResult(new ConfirmationResponse(ConfirmationResult.SUCCESS_BUT_EMAIL_FAIL_TO_SEND,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                        \"Submission confirmation email failed to send\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        return new JsonResult(new ConfirmationResponse(ConfirmationResult.SUCCESS, \"Submission confirmed\"));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 106
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/endpoints/ResourceEndpoints.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package teammates.ui.webapi.endpoints;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import com.fasterxml.jackson.annotation.JsonValue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import teammates.common.util.Const.ResourceURIs;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * API endpoints for resources."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "public enum ResourceEndpoints {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    //CHECKSTYLE.OFF:JavadocVariable"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    URI_PREFIX(ResourceURIs.URI_PREFIX),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    LOGOUT(ResourceURIs.LOGOUT),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    DATABUNDLE(ResourceURIs.DATABUNDLE),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    EXCEPTION(ResourceURIs.EXCEPTION),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ERROR_REPORT(ResourceURIs.ERROR_REPORT),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    AUTH(ResourceURIs.AUTH),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNT(ResourceURIs.ACCOUNT),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNTS_SEARCH(ResourceURIs.ACCOUNTS_SEARCH),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNT_RESET(ResourceURIs.ACCOUNT_RESET),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ACCOUNT_DOWNGRADE(ResourceURIs.ACCOUNT_DOWNGRADE),"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESPONSE_COMMENT(ResourceURIs.RESPONSE_COMMENT),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE(ResourceURIs.COURSE),"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE_ARCHIVE(ResourceURIs.COURSE_ARCHIVE),"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    BIN_COURSE(ResourceURIs.BIN_COURSE),"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE_SECTIONS(ResourceURIs.COURSE_SECTIONS),"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSES(ResourceURIs.COURSES),"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    INSTRUCTORS(ResourceURIs.INSTRUCTORS),"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    INSTRUCTOR(ResourceURIs.INSTRUCTOR),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    INSTRUCTOR_PRIVILEGE(ResourceURIs.INSTRUCTOR_PRIVILEGE),"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESULT(ResourceURIs.RESULT),"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENTS(ResourceURIs.STUDENTS),"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENT(ResourceURIs.STUDENT),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSIONS_ONGOING(ResourceURIs.SESSIONS_ONGOING),"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION(ResourceURIs.SESSION),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_PUBLISH(ResourceURIs.SESSION_PUBLISH),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_REMIND_SUBMISSION(ResourceURIs.SESSION_REMIND_SUBMISSION),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_REMIND_RESULT(ResourceURIs.SESSION_REMIND_RESULT),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_STATS(ResourceURIs.SESSION_STATS),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_SUBMITTED_GIVER_SET(ResourceURIs.SESSION_SUBMITTED_GIVER_SET),"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSIONS(ResourceURIs.SESSIONS),"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    BIN_SESSION(ResourceURIs.BIN_SESSION),"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    QUESTIONS(ResourceURIs.QUESTIONS),"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    QUESTION_RECIPIENTS(ResourceURIs.QUESTION_RECIPIENTS),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESPONSE(ResourceURIs.RESPONSE),"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    RESPONSES(ResourceURIs.RESPONSES),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    HAS_RESPONSES(ResourceURIs.HAS_RESPONSES),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SUBMISSION_CONFIRMATION(ResourceURIs.SUBMISSION_CONFIRMATION),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    JOIN(ResourceURIs.JOIN),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    JOIN_REMIND(ResourceURIs.JOIN_REMIND),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TIMEZONE(ResourceURIs.TIMEZONE),"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    LOCAL_DATE_TIME(ResourceURIs.LOCAL_DATE_TIME),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    SESSION_LINKS_RECOVERY(ResourceURIs.SESSION_LINKS_RECOVERY),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    NATIONALITIES(ResourceURIs.NATIONALITIES),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENT_PROFILE_PICTURE(ResourceURIs.STUDENT_PROFILE_PICTURE),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENT_PROFILE(ResourceURIs.STUDENT_PROFILE),"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENTS_CSV(ResourceURIs.STUDENTS_CSV),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH(ResourceURIs.STUDENTS_AND_FEEDBACK_SESSION_DATA_SEARCH),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    COURSE_ENROLL_STUDENTS(ResourceURIs.COURSE_ENROLL_STUDENTS);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    //CHECKSTYLE.ON:JavadocVariable"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    private final String url;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    ResourceEndpoints(String s) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.url \u003d s;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    @JsonValue"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    public String getUrl() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        return url;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 72
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/endpoints/package-info.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Contains all API endpoints."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "package teammates.ui.webapi.endpoints;"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/ConfirmationResponse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * The output format of {@link teammates.ui.webapi.action.ConfirmFeedbackSessionSubmissionAction}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public class ConfirmationResponse extends ApiOutput {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private final ConfirmationResult result;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public ConfirmationResponse(ConfirmationResult result, String message) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.result \u003d result;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public ConfirmationResult getResult() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 22
    }
  },
  {
    "path": "src/main/java/teammates/ui/webapi/output/ConfirmationResult.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "package teammates.ui.webapi.output;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " * The result of the confirmation."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "madanalogy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "public enum ConfirmationResult {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * The submission has been confirmed successfully."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    SUCCESS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     * The submission has been confirmed but the confirmation email failed to send."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    SUCCESS_BUT_EMAIL_FAIL_TO_SEND"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 17
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/ActionFactoryTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.apache.http.client.methods.HttpGet;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.apache.http.client.methods.HttpPost;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.common.exception.ActionMappingException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.test.cases.BaseTestCase;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.test.driver.MockHttpServletRequest;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.ui.webapi.action.Action;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.ui.webapi.action.ActionFactory;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import teammates.ui.webapi.action.GetAuthInfoAction;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "hcwong"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "hcwong"
        },
        "content": " * SUT: {@link ActionFactory}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "hcwong"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "hcwong"
        },
        "content": "public class ActionFactoryTest extends BaseTestCase {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    public void testGetAction() throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ActionFactory actionFactory \u003d new ActionFactory();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ______TS(\"Action exists and is retrieved\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        MockHttpServletRequest existingActionServletRequest \u003d new MockHttpServletRequest("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                HttpGet.METHOD_NAME, Const.ResourceURIs.URI_PREFIX + Const.ResourceURIs.AUTH);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        existingActionServletRequest.addHeader(\"Backdoor-Key\", \"samplekey\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        Action existingAction \u003d actionFactory.getAction(existingActionServletRequest, HttpGet.METHOD_NAME);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertTrue(existingAction instanceof GetAuthInfoAction);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ______TS(\"Action does not exist and ActionMappingException is thrown\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        MockHttpServletRequest nonExistentActionServletRequest \u003d new MockHttpServletRequest("
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                HttpGet.METHOD_NAME, Const.ResourceURIs.URI_PREFIX + \"blahblahblah\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        nonExistentActionServletRequest.addHeader(\"Backdoor-Key\", \"samplekey\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ActionMappingException nonExistentActionException \u003d assertThrows(ActionMappingException.class,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                () -\u003e actionFactory.getAction(nonExistentActionServletRequest, HttpGet.METHOD_NAME));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertTrue(nonExistentActionException.getMessage()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                .equals(\"Resource with URI \" + Const.ResourceURIs.URI_PREFIX + \"blahblahblah\" + \" is not found.\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ______TS(\"Method does not exist on action and ActionMappingException is thrown\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        MockHttpServletRequest nonExistentMethodOnActionServletRequest \u003d new MockHttpServletRequest("
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                HttpGet.METHOD_NAME, Const.ResourceURIs.URI_PREFIX + Const.ResourceURIs.AUTH);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        nonExistentMethodOnActionServletRequest.addHeader(\"Backdoor-Key\", \"samplekey\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        ActionMappingException nonExistentMethodOnActionException \u003d assertThrows(ActionMappingException.class,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                () -\u003e actionFactory.getAction(nonExistentMethodOnActionServletRequest, HttpPost.METHOD_NAME));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        assertTrue(nonExistentMethodOnActionException.getMessage()"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                .equals(\"Method [\" + HttpPost.METHOD_NAME + \"] is not allowed for URI \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "                + Const.ResourceURIs.URI_PREFIX + Const.ResourceURIs.AUTH + \".\"));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "hcwong"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "hcwong": 53
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/BaseActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.Cookie;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import javax.servlet.http.Part;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpDelete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpGet;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPost;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.client.methods.HttpPut;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.BeforeMethod;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.DataBundle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.UserInfo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.UnauthorizedAccessException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.JsonUtils;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.cases.BaseComponentTestCase;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.MockPart;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.Action;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.CsvResult;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.ImageResult;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.request.BasicRequest;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": " * Base class for all action tests."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": " *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": " * @param \u003cT\u003e The action class being tested."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "public abstract class BaseActionTest\u003cT extends Action\u003e extends BaseComponentTestCase {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String GET \u003d HttpGet.METHOD_NAME;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String POST \u003d HttpPost.METHOD_NAME;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String PUT \u003d HttpPut.METHOD_NAME;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    protected static final String DELETE \u003d HttpDelete.METHOD_NAME;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    protected DataBundle typicalBundle \u003d getTypicalDataBundle();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract String getActionUri();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract String getRequestMethod();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with empty request body and empty multipart config."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(String... params) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(null, null, null, params);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request body."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(Object requestBody, String... params) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(JsonUtils.toJson(requestBody), params);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request body."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(String body, String... params) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(body, null, null, params);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request body and multipart config."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getAction(String body, Map\u003cString, Part\u003e parts, List\u003cCookie\u003e cookies, String... params) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "        return (T) gaeSimulation.getActionObject(getActionUri(), getRequestMethod(), body, parts, cookies, params);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with request multipart config."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getActionWithParts(String key, String filePath, String... params) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Part\u003e parts \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        parts.put(key, new MockPart(filePath));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(null, parts, null, params);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "     * Gets an action with list of cookies."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    protected T getActionWithCookie(List\u003cCookie\u003e cookies, String... params) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        return getAction(null, null, cookies, params);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    @BeforeMethod"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    public void beforeTestMethodSetup() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        prepareTestData();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract void testExecute() throws Exception;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    protected abstract void testAccessControl() throws Exception;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "     * Returns The {@code params} array with the {@code userId}"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "     *         (together with the parameter name) inserted at the beginning."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String[] addUserIdToParams(String userId, String[] params) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        list.add(Const.ParamsNames.USER_ID);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        list.add(userId);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        for (String s : params) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            list.add(s);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        return list.toArray(new String[0]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for logging in as various user"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as an admin."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsAdmin() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginAsAdmin(\"admin.user\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isAdmin);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as an unregistered user"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without any right)."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsUnregistered(String userId) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isStudent);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isInstructor);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as an instructor"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without admin rights or student rights)."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsInstructor(String userId) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isStudent);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isInstructor);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as a student"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without admin rights or instructor rights)."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsStudent(String userId) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isStudent);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isInstructor);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "     * Logs in the user to the GAE simulation environment as a student-instructor"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "     * (without admin rights)."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void loginAsStudentInstructor(String userId) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        UserInfo user \u003d gaeSimulation.loginUser(userId);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isStudent);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(user.isInstructor);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(user.isAdmin);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for testing access control"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u0027High-level\u0027 access-control tests: here it tests access control of an action for the full range of user types."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAnyUserCanAccess(String... params) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdmin(params);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAnyLoggedInUserCanAccess(String... params) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdmin(params);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyOnlyAdminCanAccess(String... params) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(params);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructors(params);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdmin(params);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyOnlyInstructorsCanAccess(String... params) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(params);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(params);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(params);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(params);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(params);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyOnlyInstructorsOfTheSameCourseCanAccess(String[] submissionParams) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(submissionParams);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(submissionParams);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(submissionParams);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructorsOfOtherCourses(submissionParams);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(submissionParams);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u0027Mid-level\u0027 access control tests: here it tests access control of an action for one user type."
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleWithoutLogin(String... params) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-logged-in users can access\");"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.logoutUser();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(params);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutLogin(String... params) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-logged-in users cannot access\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.logoutUser();"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForUnregisteredUsers(String... params) {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-registered users can access\");"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        String unregUserId \u003d \"unreg.user\";"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsUnregistered(unregUserId);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(params);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForUnregisteredUsers(String... params) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Non-registered users cannot access\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        String unregUserId \u003d \"unreg.user\";"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsUnregistered(unregUserId);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForAdmin(String... params) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Admin can access\");"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(params);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForAdmin(String... params) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Admin cannot access\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForStudents(String... params) {"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Students cannot access\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForInstructors(String... params) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructors cannot access\");"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForSpecificInstructor(InstructorAttributes instructor, String... params) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"A specific instructor cannot access the resource.\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor.googleId);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(params);"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForAdminToMasqueradeAsInstructor(String[] submissionParams) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"admin can access\");"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        //not checking for non-masquerade mode because admin may not be an instructor"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanMasquerade(instructor1OfCourse1.googleId, submissionParams);"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifySessionPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Session privilege cannot access\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutSubmitSessionInSectionsPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Submit-Session-In-Sections privilege cannot access\");"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutViewStudentInSectionsPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without View-Student-In-Sections privilege cannot access\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifyStudentPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Student privilege cannot access\");"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifyCoursePrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Course privilege cannot access\");"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifyInstructorPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Instructor privilege cannot access\");"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleWithoutModifySessionCommentInSectionsPrivilege(String[] submissionParams) {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"without Modify-Session-Comment-In-Sections privilege cannot access\");"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        gaeSimulation.loginAsInstructor(helperOfCourse1.googleId);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForInstructorsOfTheSameCourse(String[] submissionParams) {"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"course instructor can access\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes otherInstructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(submissionParams);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotMasquerade(student1InCourse1.googleId, submissionParams);"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotMasquerade(otherInstructor.googleId, submissionParams);"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyAccessibleForStudentsOfTheSameCourse(String[] submissionParams) {"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"course students can access\");"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(submissionParams);"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyInaccessibleForInstructorsOfOtherCourses(String[] submissionParams) {"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"other course instructor cannot access\");"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes otherInstructor \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(otherInstructor.googleId);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(submissionParams);"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "    // \u0027Low-level\u0027 access control tests: here it tests an action once with the given parameters."
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "    // These methods are not aware of the user type."
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is accessible to the logged in user."
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCanAccess(String... params) {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "        Action c \u003d getAction(params);"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "        c.checkAccessControl();"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void verifyCanAccess(BasicRequest request, String... params) {"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        Action c \u003d getAction(request, params);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        c.checkAccessControl();"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is not accessible to the user."
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCannotAccess(String... params) {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "        Action c \u003d getAction(params);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, c::checkAccessControl);"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void verifyCannotAccess(BasicRequest request, String... params) {"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        Action c \u003d getAction(request, params);"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, c::checkAccessControl);"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "     * accessible to the logged in user masquerading as another user with {@code userId}."
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCanMasquerade(String userId, String... params) {"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(addUserIdToParams(userId, params));"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@link Action} matching the {@code params} is not"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "     * accessible to the logged in user masquerading as another user with {@code userId}."
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyCannotMasquerade(String userId, String... params) {"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(UnauthorizedAccessException.class, () -\u003e getAction(addUserIdToParams(userId, params)));"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for parsing results"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the action and returns the result."
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAssumption: The action returns a {@link JsonResult}."
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "    protected JsonResult getJsonResult(Action a) {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "        return (JsonResult) a.execute();"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the action and returns the csv content."
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAssumption: The action returns a {@link CsvResult}."
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "    protected CsvResult getCsvResult(Action a) {"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "        return (CsvResult) a.execute();"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "     * Executes the action and returns the result."
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "     *"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "     * \u003cp\u003eAssumption: The action returns a {@link ImageResult}."
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "    protected ImageResult getImageResult(Action a) {"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "        return (ImageResult) a.execute();"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    // The next few methods are for verifying action results"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "     * Verifies that the {@code parameters} violates an assumption of the"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "     * matching {@link Action}. e.g., missing a compulsory parameter."
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyHttpParameterFailure(String... params) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "        Action c \u003d getAction(params);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e c.execute());"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyNoTasksAdded(Action action) {"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Integer\u003e tasksAdded \u003d action.getTaskQueuer().getNumberOfTasksAdded();"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(0, tasksAdded.keySet().size());"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifySpecifiedTasksAdded(Action action, String taskName, int taskCount) {"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "        Map\u003cString, Integer\u003e tasksAdded \u003d action.getTaskQueuer().getNumberOfTasksAdded();"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(taskCount, tasksAdded.get(taskName).intValue());"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyNoEmailsSent(Action action) {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        assertTrue(getEmailsSent(action).isEmpty());"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "    protected List\u003cEmailWrapper\u003e getEmailsSent(Action action) {"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "        return action.getEmailSender().getEmailsSent();"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void verifyNumberOfEmailsSent(Action action, int emailCount) {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(emailCount, action.getEmailSender().getEmailsSent().size());"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 12,
      "-": 521
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/BinCourseActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.logic.core.CoursesLogic;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.BinCourseAction;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.output.CourseData;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link BinCourseAction}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "public class BinCourseActionTest extends BaseActionTest\u003cBinCourseAction\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.BIN_COURSE;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        return PUT;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical case, 2 courses. Expect 1 to be binned and 1 to stay.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes courseToBeDeleted \u003d logic.getCourse(instructor1OfCourse1.getCourseId());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.createCourseAndInstructor(instructorId,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                CourseAttributes.builder(\"icdct.tpa.id1\")"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withName(\"New course\")"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withTimezone(ZoneId.of(\"UTC\")).build());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        BinCourseAction binCourseAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(binCourseAction);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseData courseData \u003d (CourseData) result.getOutput();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseData(courseData, courseToBeDeleted.getId(), courseToBeDeleted.getName(),"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                courseToBeDeleted.getTimeZone().getId());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        List\u003cCourseAttributes\u003e courseList \u003d logic.getCoursesForInstructor(instructorId);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(1, courseList.size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"icdct.tpa.id1\", courseList.get(0).getId());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(logic.getCourse(instructor1OfCourse1.courseId).deletedAt);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Masquerade mode, delete last course\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsAdmin();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"icdct.tpa.id1\","
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        binCourseAction \u003d getAction(addUserIdToParams(instructorId, submissionParams));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        result \u003d getJsonResult(binCourseAction);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        courseData \u003d (CourseData) result.getOutput();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseData(courseData, \"icdct.tpa.id1\", \"New course\", \"UTC\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        assertFalse(courseData.getDeletionTimestamp() \u003d\u003d 0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(logic.getCourse(\"icdct.tpa.id1\").deletedAt);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute_nonExistentCourse_shouldFail() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"fake-course\","
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNull(logic.getCourse(\"fake-course\"));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        EntityNotFoundException e \u003d assertThrows(EntityNotFoundException.class, () -\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                getAction(submissionParams).execute());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Trying to update non-existent Entity: \", e.getMessage());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute_courseAlreadyBin_shouldFail() throws Exception {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, instructor1OfCourse1.courseId,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.moveCourseToRecycleBin(instructor1OfCourse1.courseId);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseAttributes courseInformation \u003d logic.getCourse(instructor1OfCourse1.courseId);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertNotNull(courseInformation.deletedAt);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        BinCourseAction binCourseAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult result \u003d getJsonResult(binCourseAction);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseData courseData \u003d (CourseData) result.getOutput();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCourseData(courseData, courseInformation.getId(), courseInformation.getName(),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                courseInformation.getTimeZone().getId());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    private void verifyCourseData(CourseData data, String courseId, String courseName, String timeZone) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(data.getCourseId(), courseId);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(data.getCourseName(), courseName);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(data.getTimeZone(), timeZone);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        logic.createCourseAndInstructor(typicalBundle.instructors.get(\"instructor1OfCourse1\").googleId,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                CourseAttributes.builder(\"icdat.owncourse\")"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withName(\"New course\")"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withTimezone(ZoneId.of(\"UTC\")).build());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, \"icdat.owncourse\","
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutLogin(submissionParams);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForUnregisteredUsers(submissionParams);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForStudents(submissionParams);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleForInstructorsOfOtherCourses(submissionParams);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyInaccessibleWithoutModifyCoursePrivilege(submissionParams);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForInstructorsOfTheSameCourse(submissionParams);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyAccessibleForAdminToMasqueradeAsInstructor(submissionParams);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        // clean up"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        CoursesLogic.inst().deleteCourseCascade(\"icdat.owncourse\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 162
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/ConfirmFeedbackSessionSubmissionActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.CourseAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.EmailWrapper;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.TaskWrapper;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.ConfirmFeedbackSessionSubmissionAction;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.ui.webapi.output.ConfirmationResponse;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.Intent;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link ConfirmFeedbackSessionSubmissionAction}."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "public class ConfirmFeedbackSessionSubmissionActionTest extends BaseActionTest\u003cConfirmFeedbackSessionSubmissionAction\u003e {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes student1InCourse1;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes student4InCourse1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private StudentAttributes student1InCourse2;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes instructor1OfCourse1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes instructor2OfCourse1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    private InstructorAttributes instructor1OfCourse2;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseAttributes typicalCourse1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private CourseAttributes typicalCourse2;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes session1InCourse1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes session1InCourse2;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private FeedbackSessionAttributes awaitingSession;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private List\u003cFeedbackResponseAttributes\u003e allResponsesInSession1Course1;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.SUBMISSION_CONFIRMATION;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        return POST;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        student4InCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        student1InCourse2 \u003d typicalBundle.students.get(\"student1InCourse2\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor2OfCourse1 \u003d typicalBundle.instructors.get(\"instructor2OfCourse1\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        instructor1OfCourse2 \u003d typicalBundle.instructors.get(\"instructor1OfCourse2\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        typicalCourse1 \u003d typicalBundle.courses.get(\"typicalCourse1\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        typicalCourse2 \u003d typicalBundle.courses.get(\"typicalCourse2\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        session1InCourse1 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        session1InCourse2 \u003d typicalBundle.feedbackSessions.get(\"session1InCourse2\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        awaitingSession \u003d typicalBundle.feedbackSessions.get(\"awaiting.session\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response1ForQ1S1C1 \u003d typicalBundle.feedbackResponses.get(\"response1ForQ1S1C1\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response2ForQ1S1C1 \u003d typicalBundle.feedbackResponses.get(\"response2ForQ1S1C1\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response1ForQ2S1C1 \u003d typicalBundle.feedbackResponses.get(\"response1ForQ2S1C1\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response2ForQ2S1C1 \u003d typicalBundle.feedbackResponses.get(\"response2ForQ2S1C1\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response3ForQ2S1C1 \u003d typicalBundle.feedbackResponses.get(\"response3ForQ2S1C1\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes response1ForQ3S1C1 \u003d typicalBundle.feedbackResponses.get(\"response1ForQ3S1C1\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1 \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response1ForQ1S1C1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response2ForQ1S1C1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response1ForQ2S1C1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response2ForQ2S1C1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response3ForQ2S1C1);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        allResponsesInSession1Course1.add(response1ForQ3S1C1);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Not enough parameters\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, typicalCourse1.getId());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyHttpParameterFailure(Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with student intent\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentParams \u003d new String[] {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfirmFeedbackSessionSubmissionAction a \u003d getAction(studentParams);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        JsonResult r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        ConfirmationResponse cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify 1 email sent"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 1);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        EmailWrapper email \u003d a.getEmailSender().getEmailsSent().get(0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student1InCourse1.email, email.getRecipient());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        TaskWrapper taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student1InCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with student intent, not responded before\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student4InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes res : allResponsesInSession1Course1) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "            assertNotEquals(student4InCourse1.getEmail(), res.getGiver());"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentNotRespondedParams \u003d new String[] {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        a \u003d getAction(studentNotRespondedParams);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify 1 email sent"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 1);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        email \u003d a.getEmailSender().getEmailsSent().get(0);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student4InCourse1.email, email.getRecipient());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(student4InCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with instructor intent\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorParams \u003d new String[] {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"false\","
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "        a \u003d getAction(instructorParams);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 0);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(instructor1OfCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"false\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Typical success case with instructor intent, not responded before\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor2OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        for (FeedbackResponseAttributes res : allResponsesInSession1Course1) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "            assertNotEquals(instructor2OfCourse1.getEmail(), res.getGiver());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorNotRespondedParams \u003d new String[] {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"false\","
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "        a \u003d getAction(instructorNotRespondedParams);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "        r \u003d getJsonResult(a);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, r.getStatusCode());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        cr \u003d (ConfirmationResponse) r.getOutput();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"Submission confirmed\", cr.getMessage());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyNumberOfEmailsSent(a, 0);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        // verify update session\u0027s respondent list task added"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "        taskAdded \u003d a.getTaskQueuer().getTasksAdded().get(0);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(typicalCourse1.getId(), taskAdded.getParamMap().get(Const.ParamsNames.COURSE_ID)[0]);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                taskAdded.getParamMap().get(Const.ParamsNames.FEEDBACK_SESSION_NAME)[0]);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(instructor2OfCourse1.email, taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_EMAIL)[0]);"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_INSTRUCTOR)[0]);"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "        assertEquals(\"true\", taskAdded.getParamMap().get(Const.ParamsNames.RESPONDENT_IS_TO_BE_REMOVED)[0]);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Failed case with invalid intent\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] invalidIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(invalidIntentParams).execute());"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"preview mode, cannot access\");"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] previewParams \u003d new String[] {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.PREVIEWAS, student1InCourse1.email,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(previewParams);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"session not open for submission but in moderation mode, can access\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(awaitingSession.isOpened());"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] moderationParams \u003d new String[] {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, awaitingSession.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(moderationParams);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"session not open for submission, cannot access\");"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "        assertFalse(awaitingSession.isOpened());"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] sessionNotOpenSubmissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, awaitingSession.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(sessionNotOpenSubmissionParams);"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Student intends to submit feedback session in other course, should not be accessible\");"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse2.googleId);"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentSubmitSessionInOtherCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(EntityNotFoundException.class,"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "                () -\u003e getAction(studentSubmitSessionInOtherCourseParams).checkAccessControl());"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Student intends to submit feedback session in his course, should be accessible\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsStudent(student1InCourse1.googleId);"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] studentSubmitSessionInCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse1.getId(),"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse1.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(studentSubmitSessionInCourseParams);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructor intends to submit feedback session in other course, should not be accessible\");"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorSubmitSessionInOtherCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse2.getId(),"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse2.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCannotAccess(instructorSubmitSessionInOtherCourseParams);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Instructor intends to submit feedback session in his course, should be accessible\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse2.googleId);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] instructorSubmitSessionInCourseParams \u003d new String[] {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse2.getId(),"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse2.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "        verifyCanAccess(instructorSubmitSessionInCourseParams);"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "        ______TS(\"Unknown intent, should be accessible\");"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "        loginAsInstructor(instructor1OfCourse2.googleId);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] unknownIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.COURSE_ID, typicalCourse2.getId(),"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_NAME, session1InCourse2.getFeedbackSessionName(),"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.SEND_SUBMISSION_EMAIL, \"true\","
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(unknownIntentParams).checkAccessControl());"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 1,
      "-": 367
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/RestoreFeedbackSessionActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import org.apache.http.HttpStatus;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.common.exception.NullHttpParameterException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.action.JsonResult;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.RestoreFeedbackSessionAction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import teammates.ui.webapi.output.FeedbackSessionData;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link RestoreFeedbackSessionAction}."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class RestoreFeedbackSessionActionTest extends BaseActionTest\u003cRestoreFeedbackSessionAction\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final InstructorAttributes instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final FeedbackSessionAttributes firstFeedbackSession \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String instructorId \u003d instructor1OfCourse1.googleId;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String courseId \u003d instructor1OfCourse1.courseId;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String feedbackSessionName \u003d firstFeedbackSession.getFeedbackSessionName();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    private final String[] submissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Const.ParamsNames.COURSE_ID, courseId,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            Const.ParamsNames.FEEDBACK_SESSION_NAME, feedbackSessionName,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.BIN_SESSION;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return DELETE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // See test cases below."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_withSessionInBin_shouldRestoreSession() throws Exception {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        logic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        RestoreFeedbackSessionAction action \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        JsonResult result \u003d getJsonResult(action);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        FeedbackSessionData feedbackSessionMessage \u003d (FeedbackSessionData) result.getOutput();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Verify response"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(HttpStatus.SC_OK, result.getStatusCode());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(courseId, feedbackSessionMessage.getCourseId());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(feedbackSessionName, feedbackSessionMessage.getFeedbackSessionName());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        // Verify model"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertFalse(logic.getFeedbackSession(feedbackSessionName, courseId).isSessionDeleted());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_withSessionNotInBin_shouldFail() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        RestoreFeedbackSessionAction notFoundAction \u003d getAction(submissionParams);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        EntityNotFoundException notFoundException \u003d assertThrows(EntityNotFoundException.class, () -\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            getJsonResult(notFoundAction);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals(\"Feedback session is not in recycle bin\", notFoundException.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    protected void testExecute_withEmptyParameters_shouldFail() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        loginAsInstructor(instructorId);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        NullHttpParameterException emptyParamsException \u003d assertThrows(NullHttpParameterException.class, () -\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            RestoreFeedbackSessionAction emptyParamsAction \u003d getAction();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "            getJsonResult(emptyParamsAction);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                String.format(Const.StatusCodes.NULL_HTTP_PARAMETER, Const.ParamsNames.COURSE_ID),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "                emptyParamsException.getMessage()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        );"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        logic.moveFeedbackSessionToRecycleBin(feedbackSessionName, courseId);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyOnlyInstructorsCanAccess(submissionParams);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "        verifyInaccessibleWithoutModifySessionPrivilege(submissionParams);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 64,
      "-": 33
    }
  },
  {
    "path": "src/test/java/teammates/test/cases/webapi/UpdateFeedbackResponseActionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "package teammates.test.cases.webapi;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import org.testng.annotations.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.FeedbackParticipantType;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackQuestionAttributes;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackResponseAttributes;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.FeedbackSessionAttributes;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.InstructorAttributes;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.attributes.StudentAttributes;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackMcqQuestionDetails;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackMcqResponseDetails;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.datatransfer.questions.FeedbackQuestionType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.common.exception.EntityNotFoundException;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import teammates.common.exception.InvalidHttpParameterException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.exception.InvalidHttpRequestBodyException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.common.util.Const;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.test.driver.AssertHelper;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.action.UpdateFeedbackResponseAction;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.FeedbackResponseUpdateRequest;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import teammates.ui.webapi.request.Intent;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": " * SUT: {@link UpdateFeedbackResponseAction}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "public class UpdateFeedbackResponseActionTest extends BaseActionTest\u003cUpdateFeedbackResponseAction\u003e {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private StudentAttributes student1InCourse1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private InstructorAttributes instructor1OfCourse1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private FeedbackResponseAttributes student1ResponseToStudent1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private FeedbackResponseAttributes instructor1ResponseToAll;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getActionUri() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        return Const.ResourceURIs.RESPONSE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String getRequestMethod() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        return PUT;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void prepareTestData() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        removeAndRestoreTypicalDataBundle();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        student1InCourse1 \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        instructor1OfCourse1 \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String giverEmail \u003d student1InCourse1.getEmail();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String receiverEmail \u003d student1InCourse1.getEmail();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        student1ResponseToStudent1 \u003d logic.getFeedbackResponse(question.getId(),"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                giverEmail, receiverEmail);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question3 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), 3);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        instructor1ResponseToAll \u003d logic.getFeedbackResponse(question3.getId(),"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructor1OfCourse1.getEmail(), \"%GENERAL%\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testExecute() throws Exception {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        // TODO"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testExecute_missingIntent_httpParameterFailure() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"missing intent response parameters\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] missingIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyHttpParameterFailure(missingIntentParams);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testExecute_missingResponseId_httpParameterFailure() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"missing response id parameters\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] missingResponseIdParams \u003d new String[] {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyHttpParameterFailure(missingResponseIdParams);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_studentFeedbackSubmissionMcqGenerateOptionsForTeams_shouldValidateAnswer() throws Exception {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentAttributes \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a question"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqQuestionDetails feedbackMcqQuestionDetails \u003d new FeedbackMcqQuestionDetails();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes fqa \u003d logic.createFeedbackQuestion(FeedbackQuestionAttributes.builder()"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(fsa.getCourseId())"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(fsa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                .withNumberOfEntitiesToGiveFeedbackTo(2)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDescription(\"test\")"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionNumber(1)"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGiverType(FeedbackParticipantType.STUDENTS)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRecipientType(FeedbackParticipantType.STUDENTS)"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDetails(feedbackMcqQuestionDetails)"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowResponsesTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowGiverNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowRecipientNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a response"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqResponseDetails feedbackMcqResponseDetails \u003d new FeedbackMcqResponseDetails();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqResponseDetails.setAnswer(studentAttributes.getTeam());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "                        .builder(fqa.getId(), studentAttributes.getEmail(), studentAttributes.getEmail())"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiverSection(studentAttributes.getSection())"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipientSection(studentAttributes.getSection())"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(fqa.getCourseId())"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(fqa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseDetails(feedbackMcqResponseDetails)"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponse \u003d logic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(studentAttributes.getEmail());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, feedbackResponse.getId(),"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidHttpRequestBodyException e \u003d assertThrows(InvalidHttpRequestBodyException.class, () -\u003e {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            loginAsStudent(studentAttributes.getGoogleId());"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateFeedbackResponseAction a \u003d getAction(updateRequest, params);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "            getJsonResult(a);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.FeedbackQuestion.MCQ_ERROR_INVALID_OPTION, e.getMessage());"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    public void testExecute_instructorFeedbackSubmissionMcqGenerateOptionsForTeams_shouldValidateAnswer() throws Exception {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackSessionAttributes fsa \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorAttributes instructorAttributes \u003d typicalBundle.instructors.get(\"instructor1OfCourse1\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentAttributes studentAttributes \u003d typicalBundle.students.get(\"student1InCourse1\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a question"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqQuestionDetails feedbackMcqQuestionDetails \u003d new FeedbackMcqQuestionDetails();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqQuestionDetails.setGenerateOptionsFor(FeedbackParticipantType.TEAMS);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackQuestionAttributes fqa \u003d logic.createFeedbackQuestion(FeedbackQuestionAttributes.builder()"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "                .withCourseId(fsa.getCourseId())"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "                .withFeedbackSessionName(fsa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "                .withNumberOfEntitiesToGiveFeedbackTo(2)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDescription(\"test\")"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionNumber(1)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                .withGiverType(FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "                .withRecipientType(FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                .withQuestionDetails(feedbackMcqQuestionDetails)"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowResponsesTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowGiverNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                .withShowRecipientNameTo(new ArrayList\u003c\u003e())"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                .build());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        // create a response"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackMcqResponseDetails feedbackMcqResponseDetails \u003d new FeedbackMcqResponseDetails();"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackMcqResponseDetails.setAnswer(studentAttributes.getTeam());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        FeedbackResponseAttributes feedbackResponse \u003d"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "                FeedbackResponseAttributes"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "                        .builder(fqa.getId(), instructorAttributes.getEmail(), instructorAttributes.getEmail())"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withGiverSection(Const.DEFAULT_SECTION)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withRecipientSection(Const.DEFAULT_SECTION)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withCourseId(fqa.getCourseId())"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withFeedbackSessionName(fqa.getFeedbackSessionName())"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                        .withResponseDetails(feedbackMcqResponseDetails)"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "                        .build();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackResponse \u003d logic.createFeedbackResponse(feedbackResponse);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        // send update request"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructorAttributes.getEmail());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        String[] params \u003d {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, feedbackResponse.getId(),"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "        InvalidHttpRequestBodyException e \u003d assertThrows(InvalidHttpRequestBodyException.class, () -\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            loginAsInstructor(instructorAttributes.getGoogleId());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            UpdateFeedbackResponseAction a \u003d getAction(updateRequest, params);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            getJsonResult(a);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        AssertHelper.assertContains(Const.FeedbackQuestion.MCQ_ERROR_INVALID_OPTION, e.getMessage());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    private FeedbackResponseUpdateRequest getUpdateRequest(String recipientIdentifier) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d new FeedbackResponseUpdateRequest();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        updateRequest.setQuestionType(FeedbackQuestionType.MCQ);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        updateRequest.setRecipientIdentifier(recipientIdentifier);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackMcqResponseDetails newDetails \u003d new FeedbackMcqResponseDetails();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        newDetails.setAnswer(\"TEAM_NOT_EXIST\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        updateRequest.setResponseDetails(newDetails);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        return updateRequest;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    protected void testAccessControl() throws Exception {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        // See individual test cases below"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_wrongGiver_inaccessible() {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"wrong giver type\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] wrongGiverTypeParams \u003d new String[] {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(wrongGiverTypeParams);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_previewMode_inaccessible() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"preview mode, cannot access\");"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] previewParams \u003d new String[] {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.PREVIEWAS, instructor1OfCourse1.email,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(previewParams);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_responseSessionNotOpen_inaccessible() {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"response in session not open, cannot access\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes closedSession \u003d typicalBundle.feedbackSessions.get(\"closedSession\");"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question4 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                closedSession.getFeedbackSessionName(), closedSession.getCourseId(), 1);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes responseInClosedSession \u003d logic.getFeedbackResponse(question4.getId(),"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                instructor1OfCourse1.getEmail(), instructor1OfCourse1.getEmail());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(closedSession.isOpened());"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] sessionNotOpenParams \u003d new String[] {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, responseInClosedSession.getId(),"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(sessionNotOpenParams);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_containsQuestionNotForInstructor_inaccessible() {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Responses not visible to instructors, should not be accessible to an instructor\""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                + \" even with course edit permissions.\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student4inCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question2 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session2.getFeedbackSessionName(), session2.getCourseId(), 1);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes student4ResponseToTeam \u003d logic.getFeedbackResponse(question2.getId(),"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student4inCourse1.getEmail(), \"Team 1.2\");"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertFalse(logic.getFeedbackQuestion(student4ResponseToTeam.getFeedbackQuestionId())"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                .getShowResponsesTo().contains(FeedbackParticipantType.INSTRUCTORS));"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] invalidModeratedInstructorSubmissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student4ResponseToTeam.getId(),"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student4inCourse1.getEmail(),"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(invalidModeratedInstructorSubmissionParams);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_noFeedbackResponse_inaccessible() {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"non-existent feedback response\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNull(logic.getFeedbackResponse(\"randomNonExistId\"));"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] nonExistParams \u003d new String[] {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, \"randomNonExistId\","
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(EntityNotFoundException.class, () -\u003e getAction(nonExistParams).checkAccessControl());"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_unknownIntent_inaccessible() {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Unknown intent, should not be accessible\");"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] unknownIntentParams \u003d new String[] {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.FULL_DETAIL.toString(),"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertThrows(InvalidHttpParameterException.class, () -\u003e getAction(unknownIntentParams).checkAccessControl());"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_giverNotModeratedStudent_inaccessible() {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor moderates student\u0027s response, but response not given by moderated student, \""
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                + \"should not be accessible\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student2InCourse1 \u003d typicalBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student5InCourse1 \u003d typicalBundle.students.get(\"student5InCourse1\");"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session \u003d typicalBundle.feedbackSessions.get(\"session1InCourse1\");"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes testModerateQuestion \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session.getFeedbackSessionName(), session.getCourseId(), 2);"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes testModerateResponse \u003d logic.getFeedbackResponse(testModerateQuestion.getId(),"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student2InCourse1.getEmail(), student5InCourse1.getEmail());"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.googleId);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(testModerateResponse.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student1InCourse1.getEmail(), testModerateResponse.getGiver());"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor1OfCourse1.getEmail());"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] moderatedStudentSubmissionParams \u003d new String[] {"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, testModerateResponse.getId(),"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, moderatedStudentSubmissionParams);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessOtherStudent_inaccessible() throws Exception {"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access other person\u0027s response, should not be accessible\");"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student2InCourse1 \u003d typicalBundle.students.get(\"student2InCourse1\");"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student2InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.STUDENTS,"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(student1ResponseToStudent1.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student2InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOtherPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, studentAccessOtherPersonParams);"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessOtherTeam_inaccessible() {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access other team\u0027s response, should not be accessible\");"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student5InCourse1 \u003d typicalBundle.students.get(\"student5InCourse1\");"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student4inCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question2 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session2.getFeedbackSessionName(), session2.getCourseId(), 1);"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes student4ResponseToTeam \u003d logic.getFeedbackResponse(question2.getId(),"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student4inCourse1.getEmail(), \"Team 1.2\");"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student5InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(student4ResponseToTeam.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student5InCourse1.getTeam(), student4ResponseToTeam.getGiver());"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student5InCourse1.getEmail());"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOtherTeamParams \u003d new String[] {"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student4ResponseToTeam.getId(),"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, studentAccessOtherTeamParams);"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorAccessOtherGiver_inaccessible() {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor intends to access other person\u0027s response, should not be accessible\");"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes instructor2OfCourse1 \u003d typicalBundle.instructors.get(\"instructor2OfCourse1\");"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor2OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.SELF,"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(instructor1ResponseToAll.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(instructor2OfCourse1.getEmail(), instructor1ResponseToAll.getGiver());"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor2OfCourse1.getEmail());"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] instructorAccessOtherPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, instructorAccessOtherPersonParams);"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorAccessOwnResponse_accessible() {"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor intends to access own response, should be accessible\");"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(instructor1OfCourse1.getEmail(), instructor1ResponseToAll.getGiver());"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor1ResponseToAll.getRecipient());"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] instructorAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, instructorAccessOwnPersonParams);"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorAccessIntentStudentLoggedIn_inaccessible() {"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor intends to access own response, but logged in as student, should be inaccessible\");"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(instructor1OfCourse1.getEmail(), instructor1ResponseToAll.getGiver());"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(instructor1ResponseToAll.getRecipient());"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] instructorAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.INSTRUCTOR_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, instructor1ResponseToAll.getId(),"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, instructorAccessOwnPersonParams);"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessSameTeam_accessible() {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access same team\u0027s response, should be accessible\");"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        StudentAttributes student4inCourse1 \u003d typicalBundle.students.get(\"student4InCourse1\");"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackSessionAttributes session2 \u003d typicalBundle.feedbackSessions.get(\"session2InCourse1\");"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackQuestionAttributes question2 \u003d logic.getFeedbackQuestion("
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                session2.getFeedbackSessionName(), session2.getCourseId(), 1);"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseAttributes student4ResponseToTeam \u003d logic.getFeedbackResponse(question2.getId(),"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                student4inCourse1.getEmail(), \"Team 1.2\");"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(FeedbackParticipantType.TEAMS,"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                logic.getFeedbackQuestion(student4ResponseToTeam.getFeedbackQuestionId()).getGiverType());"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertNotEquals(student1InCourse1.getTeam(), student4ResponseToTeam.getGiver());"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student4ResponseToTeam.getRecipient());"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessSameTeamParams \u003d new String[] {"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student4ResponseToTeam.getId(),"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, studentAccessSameTeamParams);"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_studentAccessOwnResponse_accessible() {"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Student intends to access own response, should be accessible\");"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsStudent(student1InCourse1.getGoogleId());"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(student1InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, studentAccessOwnPersonParams);"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorSubmitStudentResponse_accessible() {"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor attempts to edit student\u0027s response with appropriate permission, should be accessible\");"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(instructor1OfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(student1InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCanAccess(updateRequest, studentAccessOwnPersonParams);"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    protected void testAccessControl_instructorSubmitStudentResponseNoPermission_inaccessible() {"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        ______TS(\"Instructor attempts to edit student\u0027s response, but without appropriate permission, \""
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                + \"should be inaccessible\");"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        InstructorAttributes helperOfCourse1 \u003d typicalBundle.instructors.get(\"helperOfCourse1\");"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        loginAsInstructor(helperOfCourse1.getGoogleId());"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        assertEquals(student1InCourse1.getEmail(), student1ResponseToStudent1.getGiver());"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        FeedbackResponseUpdateRequest updateRequest \u003d getUpdateRequest(student1ResponseToStudent1.getRecipient());"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        String[] studentAccessOwnPersonParams \u003d new String[] {"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.INTENT, Intent.STUDENT_SUBMISSION.toString(),"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_RESPONSE_ID, student1ResponseToStudent1.getId(),"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                Const.ParamsNames.FEEDBACK_SESSION_MODERATED_PERSON, student1InCourse1.getEmail(),"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        };"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        verifyCannotAccess(updateRequest, studentAccessOwnPersonParams);"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 416,
      "-": 151
    }
  },
  {
    "path": "src/web/app/components/question-edit-form/question-edit-form.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card\" xmlns\u003d\"http://www.w3.org/1999/html\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-header text-white question-header\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row align-items-center\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cstrong\u003eQuestion \u003cspan *ngIf\u003d\"!model.isEditable\"\u003e{{ model.questionNumber }}\u003c/span\u003e\u003c/strong\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cselect class\u003d\"form-control question-number-select\" [ngModel]\u003d\"model.questionNumber\" (ngModelChange)\u003d\"triggerModelChange(\u0027questionNumber\u0027, $event)\" *ngIf\u003d\"model.isEditable\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003coption *ngFor\u003d\"let i of range(numOfQuestions)\" [ngValue]\u003d\"i + 1\"\u003e{{ i + 1 }}\u003c/option\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/select\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        {{ model.questionType | questionTypeName }}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-7 text-right\" *ngIf\u003d\"!isDisplayOnly\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" *ngIf\u003d\"!model.isEditable\" (click)\u003d\"triggerModelChange(\u0027isEditable\u0027, true)\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Edit the existing question. Do remember to save the changes before moving on to editing another question.\"\u003e\u003ci class\u003d\"fas fa-pencil-alt\"\u003e\u003c/i\u003e Edit\u003c/button\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" *ngIf\u003d\"model.isEditable\" (click)\u003d\"saveQuestionHandler(saveModal)\" [disabled]\u003d\"model.isSaving\"\u003e\u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003e\u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Save\u003c/button\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" *ngIf\u003d\"model.isEditable\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Discard any unsaved edits and revert back to original question.\" (click)\u003d\"discardChangesHandler(discardModal)\"\u003e\u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e Discard\u003c/button\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-template #discardModal let-modal\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Any unsaved changes will be lost\u003c/h5\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              Are you sure you want to discard your unsaved edits?"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\" (click)\u003d\"deleteCurrentQuestionHandler(deleteModal)\"\u003e\u003ci class\u003d\"fas fa-trash\"\u003e\u003c/i\u003e Delete\u003c/button\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-template #deleteModal let-modal\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-header bg-danger\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-times-circle\"\u003e\u003c/i\u003e Warning: Deleted question cannot be recovered\u003c/h5\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "              Are you sure you want to delete this question?"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-danger\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                  (click)\u003d\"duplicateCurrentQuestionHandler()\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Make a copy of the existing question and add to the current feedback session.\" container\u003d\"body\"\u003e\u003ci class\u003d\"far fa-copy\"\u003e\u003c/i\u003e Duplicate\u003c/button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.ADD\"\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary btn-sm\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                  ngbTooltip\u003d\"Cancel adding new question. No new question will be added to the feedback session.\" container\u003d\"body\" (click)\u003d\"discardChangesHandler(discardNewQuestionModal)\"\u003e\u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e Cancel\u003c/button\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-template #discardNewQuestionModal let-modal\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Any unsaved changes will be lost\u003c/h5\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              Are you sure you want to discard this question?"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"background-color-light-blue\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row padding-15px align-items-center\"\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"question-basic-info\"\u003eQuestion\u003c/div\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-10\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctextarea class\u003d\"form-control\" [ngModel]\u003d\"model.questionBrief\" (ngModelChange)\u003d\"triggerModelChange(\u0027questionBrief\u0027, $event)\" [disabled]\u003d\"!model.isEditable\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                        placeholder\u003d\"A concise version of the question e.g. \u0026quot;How well did the team member communicate?\u0026quot;\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Please enter the question for users to give feedback about. e.g. What is the biggest weakness of the presented product?\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003e\u003c/textarea\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row padding-15px\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"question-basic-info\"\u003e[Optional]\u003cbr/\u003eDescription\u003c/div\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-10\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctm-rich-text-editor [richText]\u003d\"model.questionDescription\" (richTextChange)\u003d\"triggerModelChange(\u0027questionDescription\u0027, $event)\" [isDisabled]\u003d\"!model.isEditable\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                                   placeholderText\u003d\"More details about the question e.g. \u0026quot;In answering the question, do consider communications made informally within the team, and formal communications with the instructors and tutors.\u0026quot;\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                                   ngbTooltip\u003d\"Please enter the description of the question.\"\u003e\u003c/tm-rich-text-editor\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"padding-15px\"\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-text-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.TEXT\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-text-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-contribution-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONTRIB\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-contribution-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-mcq-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MCQ\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-mcq-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-msq-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.MSQ\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-msq-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-num-scale-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.NUMSCALE\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-num-scale-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-rank-options-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_OPTIONS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-rank-options-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-rank-recipients-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RANK_RECIPIENTS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-rank-recipients-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-rubric-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.RUBRIC\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-rubric-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-constsum-options-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_OPTIONS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-constsum-options-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctm-constsum-recipients-question-edit-details-form *ngIf\u003d\"model.questionType \u003d\u003d\u003d FeedbackQuestionType.CONSTSUM_RECIPIENTS\" [details]\u003d\"model.questionDetails\" (detailsChange)\u003d\"triggerModelChange(\u0027questionDetails\u0027, $event)\" [isEditable]\u003d\"model.isEditable\"\u003e\u003c/tm-constsum-recipients-question-edit-details-form\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"background-color-light-green margin-top-15px padding-15px\"\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cb class\u003d\"feedback-path-title\"\u003eFeedback Path\u003c/b\u003e (Who is giving feedback about whom?)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"!model.isUsingOtherFeedbackPath\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "            {{ model.giverType | giverTypeDescription }} will give feedback on \u003ci class\u003d\"fas fa-arrow-right\"\u003e\u003c/i\u003e {{ model.recipientType | recipientTypeDescription }}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cspan *ngIf\u003d\"model.isUsingOtherFeedbackPath\"\u003eCustom feedback path\u003c/span\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cul ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-header\"\u003eCommon feedback path combinations\u003c/li\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" *ngFor\u003d\"let path of this.commonFeedbackPaths | keyvalue\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv ngbDropdown #subMenu\u003d\"ngbDropdown\" placement\u003d\"right\" (mouseenter)\u003d\"subMenu.open()\" (mouseleave)\u003d\"subMenu.close()\"\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cspan ngbDropdownAnchor class\u003d\"float-right invisible\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ path.key | giverTypeDescription }} will give feedback on ... \u003ci class\u003d\"fas fa-caret-right\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cul ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cli class\u003d\"dropdown-item\" *ngFor\u003d\"let recipient of path.value\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "                    (click)\u003d\"changeGiverRecipientType(path.key, recipient)\"\u003e{{ recipient | recipientTypeDescription }}\u003c/li\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/ul\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/li\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-divider\"\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" (click)\u003d\"triggerModelChange(\u0027isUsingOtherFeedbackPath\u0027, true)\"\u003eCustom feedback path...\u003c/li\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ul\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row margin-top-15px\" *ngIf\u003d\"model.isUsingOtherFeedbackPath\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-6\"\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cstrong\u003eWho will give the feedback:\u003c/strong\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"model.giverType\" (ngModelChange)\u003d\"changeGiverRecipientType($event, model.recipientType)\" [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003coption *ngFor\u003d\"let path of this.allowedFeedbackPaths | keyvalue\" [ngValue]\u003d\"path.key\"\u003e{{ path.key | giverTypeDescription }}\u003c/option\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/select\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-6\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cstrong\u003eWho the feedback is about:\u003c/strong\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cselect class\u003d\"form-control\" [ngModel]\u003d\"model.recipientType\" (ngModelChange)\u003d\"changeGiverRecipientType(model.giverType, $event)\" [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003coption *ngFor\u003d\"let recipientType of this.allowedFeedbackPaths.get(model.giverType)\" [ngValue]\u003d\"recipientType\"\u003e{{ recipientType | recipientTypeDescription }}\u003c/option\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/select\u003e"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row margin-top-15px align-items-center\""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "           *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS\"\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"offset-1 col-4 text-right\"\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          The maximum number of {{ model.recipientType | lowercase }} each respondent should give feedback to:"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"input-group\"\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"input-group-prepend\"\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"input-group-text\"\u003e"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cinput type\u003d\"radio\" [name]\u003d\"model.feedbackQuestionId + \u0027numOfRecipients\u0027\" [ngModel]\u003d\"model.numberOfEntitiesToGiveFeedbackToSetting\""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "                       (ngModelChange)\u003d\"triggerModelChange(\u0027numberOfEntitiesToGiveFeedbackToSetting\u0027, $event)\""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "                       [value]\u003d\"NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM\""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "                       [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cinput type\u003d\"number\" min\u003d\"1\" class\u003d\"form-control\" [ngModel]\u003d\"model.customNumberOfEntitiesToGiveFeedbackTo\" (ngModelChange)\u003d\"triggerModelChange(\u0027customNumberOfEntitiesToGiveFeedbackTo\u0027, $event)\" [disabled]\u003d\"model.numberOfEntitiesToGiveFeedbackToSetting !\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM || !model.isEditable\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-2\"\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"form-check\"\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003clabel class\u003d\"form-check-label\"\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cinput class\u003d\"form-check-input\" type\u003d\"radio\" [name]\u003d\"model.feedbackQuestionId + \u0027numOfRecipients\u0027\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                     [ngModel]\u003d\"model.numberOfEntitiesToGiveFeedbackToSetting\" (ngModelChange)\u003d\"triggerModelChange(\u0027numberOfEntitiesToGiveFeedbackToSetting\u0027, $event)\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "                     [value]\u003d\"NumberOfEntitiesToGiveFeedbackToSetting.UNLIMITED\""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "                     [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "              Unlimited"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/label\u003e"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"margin-top-15px padding-15px\" [ngClass]\u003d\"{ \u0027background-color-light-green\u0027: !model.isQuestionHasResponses, \u0027alert alert-danger\u0027: model.isQuestionHasResponses }\"\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv *ngIf\u003d\"model.isQuestionHasResponses\"\u003e"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ch5\u003eChanging the visibility after collecting responses is not recommended.\u003c/h5\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp\u003eReason: The existing responses were submitted under the \u0027promise\u0027 of a certain visibility and changing the visibility later \u0027breaks\u0027 that promise.\u003c/p\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cb [ngClass]\u003d\"{ \u0027visibility-title\u0027: !model.isQuestionHasResponses }\"\u003eVisibility\u003c/b\u003e (Who can see the responses?)"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv ngbDropdown class\u003d\"margin-top-15px\"\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" ngbDropdownToggle [disabled]\u003d\"!model.isEditable\"\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"!model.isUsingOtherVisibilitySetting\"\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "            {{ model.commonVisibilitySettingName }}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/span\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cspan *ngIf\u003d\"model.isUsingOtherVisibilitySetting\"\u003eCustom visibility options\u003c/span\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cul ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cli class\u003d\"dropdown-header\"\u003eCommon visibility options\u003c/li\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" *ngFor\u003d\"let visibilityOption of commonFeedbackVisibilitySettings\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "              (click)\u003d\"applyCommonVisibilitySettings(visibilityOption)\"\u003e{{ visibilityOption.name }}\u003c/li\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli class\u003d\"dropdown-divider\" *ngIf\u003d\"isCustomFeedbackVisibilitySettingAllowed\"\u003e\u003c/li\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "          \u003cli class\u003d\"dropdown-item\" *ngIf\u003d\"isCustomFeedbackVisibilitySettingAllowed\" (click)\u003d\"triggerModelChange(\u0027isUsingOtherVisibilitySetting\u0027, true)\"\u003eCustom visibility options...\u003c/li\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ul\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctable class\u003d\"table margin-top-15px background-color-white table-striped\" *ngIf\u003d\"model.isUsingOtherVisibilitySetting\"\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cthead\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctr\u003e"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cth scope\u003d\"col\" class\u003d\"text-center\"\u003eUser/Group\u003c/th\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cth scope\u003d\"col\" class\u003d\"text-center\" *ngFor\u003d\"let visibilityControl of VisibilityControl | enumToArray\"\u003e{{ visibilityControl | visibilityControlName }}\u003c/th\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tr\u003e"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/thead\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctbody\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType)\"\u003e"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd [ngbTooltip]\u003d\"visibilityType | visibilityTypeDescription\" container\u003d\"body\"\u003e {{ visibilityType | visibilityTypeName }}\u003c/td\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd *ngFor\u003d\"let visibilityControl of VisibilityControl | enumToArray\" class\u003d\"text-center\"\u003e"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cinput type\u003d\"checkbox\""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                       (click)\u003d\"modifyVisibilityControl($event.target.checked, visibilityType, visibilityControl)\""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                       [checked]\u003d\"visibilityStateMachine.isVisible(visibilityType, visibilityControl)\""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                       [disabled]\u003d\"!visibilityStateMachine.isCellEditable(visibilityType, visibilityControl) || !model.isEditable\"\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tbody\u003e"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/table\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"margin-top-15px visibility-message\"\u003e"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        This is the visibility hint as seen by the feedback giver:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cul class\u003d\"text-muted background-color-warning\"\u003e"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli *ngIf\u003d\"model.recipientType \u003d\u003d\u003d FeedbackParticipantType.SELF\"\u003eYou can see your own feedback in the results page later on.\u003c/li\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cng-container *ngFor\u003d\"let visibilityType of FeedbackVisibilityType | enumToArray\"\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cli *ngIf\u003d\"visibilityStateMachine.isVisibilityTypeApplicable(visibilityType) \u0026\u0026 visibilityStateMachine.hasAnyVisibilityControl(visibilityType)\"\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ visibilityType | visibilityEntityName:model.recipientType:model.numberOfEntitiesToGiveFeedbackToSetting:model.customNumberOfEntitiesToGiveFeedbackTo }} {{ visibilityStateMachine.getVisibilityControlUnderVisibilityType(visibilityType) | visibilityCapability }}"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/li\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cli *ngIf\u003d\"!visibilityStateMachine.hasAnyVisibilityControlForAll()\"\u003eNo-one can see your responses\u003c/li\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ul\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row margin-top-15px\" *ngIf\u003d\"!isDisplayOnly\"\u003e"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-12 text-right\"\u003e"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-primary\" [disabled]\u003d\"!model.isEditable || model.isSaving\" (click)\u003d\"saveQuestionHandler(saveModal)\"\u003e"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctm-ajax-loading *ngIf\u003d\"model.isSaving\"\u003e\u003c/tm-ajax-loading\u003e"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.EDIT\"\u003eSave Changes\u003c/span\u003e"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"formMode \u003d\u003d\u003d QuestionEditFormMode.ADD\"\u003eSave Questions\u003c/span\u003e"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-template #saveModal let-modal\u003e"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"modal-header bg-danger\"\u003e"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch5 class\u003d\"modal-title text-white\"\u003e\u003ci class\u003d\"fas fa-times-circle\"\u003e\u003c/i\u003e Warning: Existing responses will be deleted by your action\u003c/h5\u003e"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/button\u003e"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp\u003eEditing some fields will result in \u003cb\u003eall existing responses for this question to be deleted.\u003c/b\u003e\u003c/p\u003e"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp\u003eAre you sure you want to continue?\u003c/p\u003e"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"button\" class\u003d\"btn btn-danger\" (click)\u003d\"modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-template\u003e"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 5,
      "-": 281
    }
  },
  {
    "path": "src/web/app/components/question-edit-form/question-edit-form.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { AjaxLoadingModule } from \u0027../ajax-loading/ajax-loading.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionEditDetailsFormModule,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../question-types/question-edit-details-form/question-edit-details-form.module\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { RichTextEditorModule } from \u0027../rich-text-editor/rich-text-editor.module\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeammatesCommonModule } from \u0027../teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { VisibilityMessagesModule } from \u0027../visibility-messages/visibility-messages.module\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { GiverTypeDescriptionPipe, RecipientTypeDescriptionPipe } from \u0027./feedback-path.pipe\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { QuestionEditFormComponent } from \u0027./question-edit-form.component\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  VisibilityControlNamePipe,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  VisibilityTypeDescriptionPipe,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  VisibilityTypeNamePipe,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./visibility-setting.pipe\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "import { mockTinyMceUuid } from \u0027../../../test-helpers/mock-tinymce-uuid\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027QuestionEditFormComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: QuestionEditFormComponent;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cQuestionEditFormComponent\u003e;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  mockTinyMceUuid();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        QuestionEditFormComponent,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        GiverTypeDescriptionPipe,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        RecipientTypeDescriptionPipe,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityControlNamePipe,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityTypeDescriptionPipe,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityTypeNamePipe,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        FormsModule,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        AjaxLoadingModule,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        RichTextEditorModule,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        QuestionEditDetailsFormModule,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbModule,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        VisibilityMessagesModule,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(QuestionEditFormComponent);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  it(\u0027should snap with default view\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  });"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 8,
      "-": 58
    }
  },
  {
    "path": "src/web/app/page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cnav class\u003d\"navbar navbar-expand-lg navbar-dark fixed-top\" (tmClickOutside)\u003d\"isCollapsed \u003d true\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ca routerLink\u003d\"/web\" (click)\u003d\"isCollapsed \u003d true\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cimg src\u003d\"assets/images/teammateslogo.png\" alt\u003d\"TEAMMATES [Logo]\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/a\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton class\u003d\"navbar-toggler d-lg-none\" type\u003d\"button\" (click)\u003d\"toggleCollapse()\" [attr.aria-expanded]\u003d\"!isCollapsed\" aria-label\u003d\"Toggle navigation\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"navbar-toggler-icon\"\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"collapse navbar-collapse\" [ngbCollapse]\u003d\"isCollapsed\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cul class\u003d\"nav navbar-nav mr-auto\" *ngIf\u003d\"isValidUser\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-template ngFor let-navItem [ngForOf]\u003d\"navItems\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli *ngIf\u003d\"navItem.children\" class\u003d\"nav-item dropdown\" ngbDropdown\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"nav-link dropdown-toggle\" data-toggle\u003d\"dropdown\" ngbDropdownToggle\u003e{{ navItem.display }}\u003c/a\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"dropdown-menu\" ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ca *ngFor\u003d\"let childItem of navItem.children\" class\u003d\"dropdown-item\" [routerLink]\u003d\"childItem.url\" (click)\u003d\"toggleCollapse()\"\u003e{{ childItem.display}}\u003c/a\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli *ngIf\u003d\"!navItem.children\" class\u003d\"nav-item\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"nav-link\" [routerLink]\u003d\"navItem.url\" (click)\u003d\"toggleCollapse()\"\u003e{{ navItem.display }}\u003c/a\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/li\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ul\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cul class\u003d\"nav navbar-nav mr-auto\" *ngIf\u003d\"!isValidUser\"\u003e\u003c/ul\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cul class\u003d\"nav navbar-nav pull-right\" *ngIf\u003d\"!hideAuthInfo \u0026\u0026 !isFetchingAuthDetails\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cli class\u003d\"nav-item dropdown\" ngbDropdown placement\u003d\"bottom-right\" *ngIf\u003d\"!user\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"nav-link dropdown-toggle\" data-toggle\u003d\"dropdown\" ngbDropdownToggle\u003eLogin\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003cdiv class\u003d\"dropdown-menu-right\" ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" id\u003d\"student-login-btn\" [href]\u003d\"studentLoginUrl\"\u003eStudent Login\u003c/a\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" id\u003d\"instructor-login-btn\" [href]\u003d\"instructorLoginUrl\"\u003eInstructor Login\u003c/a\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/li\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cli class\u003d\"nav-item dropdown\" ngbDropdown placement\u003d\"bottom-right\" *ngIf\u003d\"user\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ca class\u003d\"nav-link dropdown-toggle\" data-toggle\u003d\"dropdown\" ngbDropdownToggle\u003e{{ user }}\u003c/a\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003cdiv class\u003d\"dropdown-menu-right\" ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" routerLink\u003d\"/web/student\" *ngIf\u003d\"isStudent\"\u003eTo student pages\u003c/a\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" routerLink\u003d\"/web/instructor\" *ngIf\u003d\"isInstructor\"\u003eTo instructor pages\u003c/a\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" routerLink\u003d\"/web/admin\" *ngIf\u003d\"isAdmin\"\u003eTo admin pages\u003c/a\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"dropdown-divider\" *ngIf\u003d\"isStudent || isInstructor || isAdmin\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ca class\u003d\"dropdown-item\" id\u003d\"logout-btn\" [href]\u003d\"logoutUrl\"\u003eLog Out\u003c/a\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/li\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ul\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/nav\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-loader-bar\u003e\u003c/tm-loader-bar\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-loading-spinner *ngIf\u003d\"isFetchingAuthDetails\"\u003e\u003c/tm-loading-spinner\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"!isFetchingAuthDetails\" id\u003d\"main-content\" class\u003d\"container main-content\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"isUnsupportedBrowser\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e\u0026nbsp;You are currently using {{ browser }}. This web browser is not officially supported by TEAMMATES."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      In case this web browser does not display the webpage correctly you may wish to view it in the following supported browsers:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003col\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eMicrosoft Internet Explorer {{ minimumVersions[\u0027IE\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eChrome {{ minimumVersions[\u0027Chrome\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eFirefox {{ minimumVersions[\u0027Firefox\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cli\u003eSafari {{ minimumVersions[\u0027Safari\u0027] }}+\u003c/li\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ol\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"!(isNetworkOnline$ | async)\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-wifi\"\u003e\u003c/i\u003e\u0026nbsp;You are not connected to the internet."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"isCookieDisabled\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-danger\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-ban\"\u003e\u003c/i\u003e\u0026nbsp;You are currently not enabling cookies in your browser. TEAMMATES requires cookies in order to work effectively."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"!isValidUser\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isStudent || isInstructor || isAdmin\"\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"alert alert-light col-sm-4 offset-sm-4\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cimg src\u003d\"assets/images/angry.png\" style\u003d\"float: left; height: 90px; margin: 0 10px 10px 0;\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ch5 style\u003d\"padding: 30px 0 20px 0\"\u003eYou are not authorized to view this page.\u003c/h5\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003chr\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cp style\u003d\"text-align: center\"\u003eLogout and return to main page.\u003c/p\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"!(isStudent || isInstructor || isAdmin)\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"alert alert-danger col-sm-8 offset-sm-2\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"align-left\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ch5 style\u003d\"text-align: center;\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e\u0026nbsp;Ooops! Your Google account is not known to TEAMMATES\u003c/h5\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp style\u003d\"text-align: center\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "              To access a course on TEAMMATES, you need to wait until an instructor adds you to that course. As a confirmation, TEAMMATES will send you instructions on how to access that particular course."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/p\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003chr\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            If you \u0027joined\u0027 the course in TEAMMATES using a Google account before, but cannot login anymore, these are the possible reasons:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003col\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cli\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                You used a different Google account to access TEAMMATES in the past. In that case, you need to use the same Google account to access TEAMMATES again. Logout and re-login using the other Google account. If you don\u0027t remember which Google account you used previously, email us from the same email account to which you receive TEAMMATES emails."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/li\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cli\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                You changed the primary email from a non-Gmail address to a Gmail address recently. In that case,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca routerLink\u003d\"/web/front/contact\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "                  email us"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                so that we can reconfigure your account to use the new Gmail address."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/li\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cli\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                You joined this course just a few seconds ago and your data may be still in the process of propagating through our servers. In that case, please try this same page in a few minutes."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/li\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/ol\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch1 *ngIf\u003d\"pageTitle \u0026\u0026 isValidUser\"\u003e{{ pageTitle }}\u003c/h1\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003crouter-outlet *ngIf\u003d\"isValidUser\"\u003e\u003c/router-outlet\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cfooter\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"container footer text-nowrap\"\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-4 col-md-4 text-left\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-bolt\"\u003e\u003c/i\u003e\u003ca routerLink\u003d\"/web/front/home\"\u003e TEAMMATES\u003c/a\u003e V{{ version }}"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-4 col-md-4 text-center\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cspan *ngIf\u003d\"institute\"\u003e\u003ci class\u003d\"fas fa-university\"\u003e\u003c/i\u003e for {{ institute }}\u003c/span\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-4 col-md-4 text-right\"\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"far fa-comments\"\u003e\u003c/i\u003e Send \u003ca routerLink\u003d\"/web/front/contact\" target\u003d\"_blank\"\u003eFeedback\u003c/a\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/footer\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 128
    }
  },
  {
    "path": "src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, JoinState, Student, StudentProfile } from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { SearchStudentsTable } from \u0027../../../pages-instructor/instructor-search-page/instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorHelpStudentsSectionComponent } from \u0027./instructor-help-students-section.component\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-example-box\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "class ExampleBoxStubComponent {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-instructor-search-bar\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "class InstructorSearchBarStubComponent {}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-instructor-course-student-edit-page\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "class InstructorCourseStudentEditPageStubComponent { @Input() isEnabled?: boolean; }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-result-table\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentResultTableStubComponent {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentTables: SearchStudentsTable[] \u003d [];"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-profile\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentProfileStubComponent {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    shortName: \u0027\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    institute: \u0027\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    nationality: \u0027\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    gender: Gender.FEMALE,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-course-related-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "class CourseRelatedInfoStubComponent {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() student: Student \u003d {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-more-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "class MoreInfoStubComponent {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() moreInfoText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027InstructorHelpStudentsSectionComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: InstructorHelpStudentsSectionComponent;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cInstructorHelpStudentsSectionComponent\u003e;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorHelpStudentsSectionComponent,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        ExampleBoxStubComponent,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorSearchBarStubComponent,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseStudentEditPageStubComponent,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentResultTableStubComponent,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileStubComponent,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRelatedInfoStubComponent,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "        MoreInfoStubComponent,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbModule,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(InstructorHelpStudentsSectionComponent);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 2,
      "-": 82
    }
  },
  {
    "path": "src/web/app/pages-help/instructor-help-page/instructor-help-students-section/instructor-help-students-section.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, JoinState, Student, StudentProfile } from \u0027../../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { SearchStudentsTable } from \u0027../../../pages-instructor/instructor-search-page/instructor-search-page.component\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorHelpSectionComponent } from \u0027../instructor-help-section.component\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": " * Students Section of the Instructor Help Page."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-help-students-section\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-help-students-section.component.html\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-help-students-section.component.scss\u0027],"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorHelpStudentsSectionComponent extends InstructorHelpSectionComponent implements OnInit {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly supportEmail: string \u003d environment.supportEmail;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleStudentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    shortName: \u0027Alice\u0027,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    institute: \u0027National University of Singapore\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    nationality: \u0027American\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    gender: Gender.FEMALE,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    moreInfo: \u0027Hi I am Alice Betsy! I am from Colorado, America. I am a programming and gaming enthusiast. \u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      + \u0027Aspiring to become a Software Architect in a well reputed organization.\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleStudentAttributes: Student \u003d {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027test.exa-demo\u0027,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027Betsy\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027Alice is a transfer student.\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleSingleStudentResultTables: SearchStudentsTable[] \u003d [{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027Course name appears here\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    sections: [{"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      students: [{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        status: JoinState.JOINED,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      }],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }],"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  readonly exampleMultipleStudentResultTables: SearchStudentsTable[] \u003d [{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027Course name appears here\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    sections: ["
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section A\u0027,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Alice Betsy\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027alice@email.com\u0027,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Jean Grey\u0027,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027jean@email.com\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team A\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section B\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Oliver Gates\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027oliver@email.com\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team B\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Thora Parker\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027thora@email.com\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team B\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName: \u0027Section C\u0027,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection: true,"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent: true,"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        students: ["
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "          {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027Jack Wayne\u0027,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027jack@email.com\u0027,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            status: JoinState.JOINED,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            team: \u0027Team C\u0027,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          },"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        ],"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    ],"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    super();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 2,
      "-": 114
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch1\u003eCourse Details\u003c/h1\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body fill-plain\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eCourse ID:\u003c/label\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.course.courseId}}\u003c/p\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eCourse name:\u003c/label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\" id\u003d\"coursename\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.course.courseName}}\u003c/p\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eSections:\u003c/label\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.stats.sectionsTotal}}\u003c/p\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eTeams:\u003c/label\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.stats.teamsTotal}}\u003c/p\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003clabel class\u003d\"col-sm-3 text-right\"\u003eTotal students:\u003c/label\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cp class\u003d\"form-control-static\"\u003e{{courseDetails.stats.studentsTotal}}\u003c/p\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-group row\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-sm-3 control-label text-right\"\u003eInstructors:\u003c/label\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv *ngFor\u003d\"let instructor of instructors\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "            {{instructor.role | instructorRoleName}}: {{instructor.name}} ({{instructor.email}})"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv *ngIf\u003d\"sections.length \u003e 0\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"text-center\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"openModal(remindStudentsModal)\" value\u003d\"Remind Students to Join\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fa fa-envelope\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              Remind Students to Join"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-primary\" (click)\u003d\"downloadAllStudentsFromCourse(courseDetails.course.courseId)\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fa fa-download\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "              Download Student List"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton type\u003d\"button\" class\u003d\"btn btn-danger\" (click)\u003d\"openModal(deleteAllStudentsModal)\" value\u003d\"Delete All Students\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fa fa-trash\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete All Students"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cspan\u003eNon-English characters not displayed properly in the downloaded file?"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cspan class\u003d\"btn-link\" (click)\u003d\"openModal(studentTableModal); loadStudentsListCsv(courseDetails.course.courseId)\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                  Click here."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/span\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/span\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngIf\u003d\"sections.length \u003d\u003d\u003d 0, else studentListTable\" class\u003d\"alert alert-warning\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ci class\u003d\"fa fa-exclamation-circle text-muted\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    There are no students in this course. Click"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ca routerLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseDetails.course.courseId}\"\u003ehere\u003c/a\u003e to enroll students."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #studentListTable class\u003d\"card border border-primary mb-4\"\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body p-0\"\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header text-dark-blue bg-light-blue font-weight-bold\"\u003e[{{courseDetails.course.courseId}}]\u003c/div\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-body p-0\"\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003ctm-student-list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            [courseId]\u003d\"courseDetails.course.courseId\" [sections]\u003d\"sections\" [useGrayHeading]\u003d\"true\" [enableRemindButton]\u003d\"true\""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            (removeStudentFromCourseEvent)\u003d\"removeStudentFromCourse($event)\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        \u003e\u003c/tm-student-list\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #remindStudentsModal let-modal\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-header alert-info\"\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fa fa-info-circle fa-2x\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch4 class\u003d\"modal-title\"\u003eConfirm sending join requests\u003c/h4\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"modal.dismiss()\"\u003e\u0026times;\u003c/button\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "      Usually, there is no need to use this feature because TEAMMATES sends an automatic invite to students at the opening"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "      time of each session. Send a join request to all yet-to-join students in {{courseDetails.course.courseId}} anyway?"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-cancel btn-lg btn-default\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-ok btn-lg btn-danger\" (click)\u003d\"remindAllStudentsFromCourse(courseDetails.course.courseId); modal.dismiss()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #deleteAllStudentsModal let-modal\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-header alert-danger\"\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fa fa-times-circle fa-2x\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch4 class\u003d\"modal-title\"\u003eConfirm Deletion\u003c/h4\u003e"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"modal.dismiss()\"\u003e\u0026times;\u003c/button\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      Are you sure you want to remove all students from the course {{courseDetails.course.courseId}}?"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbr\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-cancel btn-lg btn-default\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"modal-btn-ok btn-lg btn-danger\" (click)\u003d\"deleteAllStudentsFromCourse(courseDetails.course.courseId); modal.dismiss()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-template #studentTableModal let-modal\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-header\"\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        Tips: \u003cspan class\u003d\"btn-link\" (click)\u003d\"copyContent(courseStudentListAsCsv)\"\u003eClick here\u003c/span\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        to copy the table, then \u003ckbd\u003eCtrl + V\u003c/kbd\u003e or \u003ckbd\u003e⌘ + V\u003c/kbd\u003e to PASTE to your Excel Workbook."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/span\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"close\" aria-label\u003d\"Close\" (click)\u003d\"modal.dismiss(\u0027Cross click\u0027)\"\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cspan aria-hidden\u003d\"true\"\u003e\u0026times;\u003c/span\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctm-ajax-preload *ngIf\u003d\"loading\"\u003e\u003c/tm-ajax-preload\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv [innerHTML]\u003d\"convertToHtmlTable(courseStudentListAsCsv)\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cb\u003e{{ isAjaxSuccess ? \u0027\u0027 : \u0027There was an error loading data. Please try again.\u0027 }}\u003c/b\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 4,
      "-": 131
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-details-page/instructor-course-details-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { saveAs } from \u0027file-saver\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { ClipboardService } from \u0027ngx-clipboard\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructor,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructors,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListSectionData, StudentListStudentData } from \u0027../student-list/student-list-section-data\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseStats {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  sectionsTotal: number;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  teamsTotal: number;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  studentsTotal: number;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseDetailsBundle {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  stats: CourseStats;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentIndexedData {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  [key: string]: Student[];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor course details page."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-course-details-page\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-course-details-page.component.html\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-course-details-page.component.scss\u0027],"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCourseDetailsPageComponent implements OnInit {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  courseDetails: CourseDetailsBundle \u003d {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    course: {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: \u0027\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      creationTimestamp: 0,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      deletionTimestamp: 0,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    stats: {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionsTotal: 0,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      teamsTotal: 0,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      studentsTotal: 0,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  instructors: Instructor[] \u003d [];"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  sections: StudentListSectionData[] \u003d [];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  courseStudentListAsCsv: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  loading: boolean \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  isAjaxSuccess: boolean \u003d true;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute, private router: Router,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              private clipboardService: ClipboardService,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal, private navigationService: NavigationService,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService) { }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourseDetails(queryParams.courseid);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the course\u0027s details based on the given course ID."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourseDetails(courseid: string): void {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCourseName(courseid);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadInstructors(courseid);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadStudents(courseid);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the name of the course"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadCourseName(courseid: string): void {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsInstructor(courseid).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseDetails.course \u003d course;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the instructors in the course"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadInstructors(courseid: string): void {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: any \u003d { courseid, intent: Intent.FULL_DETAIL };"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructors\u0027, paramMap).subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "      this.instructors \u003d instructors.instructors;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the students in the course"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadStudents(courseid: string): void {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourse(courseid).subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        const term: string \u003d x.sectionName;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        return acc;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      }, {});"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      const teams: Set\u003cstring\u003e \u003d new Set();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      students.students.forEach((student: Student) \u003d\u003e teams.add(student.teamName));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseDetails.stats \u003d {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionsTotal: Object.keys(sections).length,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        teamsTotal: teams.size,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsTotal: students.students.length,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      Object.keys(sections).forEach((key: string) \u003d\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        const studentsInSection: Student[] \u003d sections[key];"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        const data: StudentListStudentData[] \u003d [];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        studentsInSection.forEach((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "          const studentData: StudentListStudentData \u003d {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "            name: student.name,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "            status: student.joinState,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            email: student.email,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            team: student.teamName,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          data.push(studentData);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadPrivilege(courseid, key, data);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads privilege of an instructor for a specified course and section."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  private loadPrivilege(courseid: string, sectionName: string, students: StudentListStudentData[]): void {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionname: sectionName,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      const sectionData: StudentListSectionData \u003d {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        students,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sections.push(sectionData);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "   * Automatically copy the text content provided."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "  copyContent(text: string): void {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    this.clipboardService.copyFromContent(text);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the modal for different buttons and link."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "   * Delete all the students in a course."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteAllStudentsFromCourse(courseId: string): void {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.delete(\u0027/students\u0027, paramsMap)"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadCourseDetails(courseId);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "   * Download all the students from a course."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  downloadAllStudentsFromCourse(courseId: string): void {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "    const filename: string \u003d `${courseId.concat(\u0027_studentList\u0027)}.csv`;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "    let blob: any;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "    // Calling REST API only the first time to load the downloadable data"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.loading) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "      blob \u003d new Blob([this.courseStudentListAsCsv], { type: \u0027text/csv\u0027 });"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      saveAs(blob, filename);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "      this.httpRequestService.get(\u0027/students/csv\u0027, paramsMap, \u0027text\u0027)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: string) \u003d\u003e {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          blob \u003d new Blob([resp], { type: \u0027text/csv\u0027 });"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "          saveAs(blob, filename);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          this.courseStudentListAsCsv \u003d resp;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "          this.loading \u003d false;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "   * Load the student list in csv table format"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentsListCsv(courseId: string): void {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d true;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "    // Calls the REST API once only when student list is not loaded"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.courseStudentListAsCsv !\u003d\u003d \u0027\u0027) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loading \u003d false;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/students/csv\u0027, paramsMap, \u0027text\u0027)"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: string) \u003d\u003e {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseStudentListAsCsv \u003d resp;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isAjaxSuccess \u003d false;"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loading \u003d false;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "   * Remind all yet to join students in a course."
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "  remindAllStudentsFromCourse(courseId: string): void {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.remindUnregisteredStudentsForJoin(courseId).subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      this.navigationService.navigateWithSuccessMessagePreservingParams(this.router,"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027/web/instructor/courses/details\u0027, resp.message);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts a csv string to a html table string for displaying."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "  convertToHtmlTable(str: string): string {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    let result: string \u003d \u0027\u003ctable class\u003d\\\"table table-bordered table-striped table-sm\\\"\u003e\u0027;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "    let rowData: string[];"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "    const lines: string[] \u003d str.split(/\\r?\\n/);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "    lines.forEach("
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        (line: string) \u003d\u003e {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "          rowData \u003d this.getTableData(line);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "          if (rowData.filter((s: string) \u003d\u003e s !\u003d\u003d \u0027\u0027).length \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "          result \u003d result.concat(\u0027\u003ctr\u003e\u0027);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "          for (const td of rowData) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "            result \u003d result.concat(`\u003ctd\u003e${td}\u003c/td\u003e`);"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "          result \u003d result.concat(\u0027\u003c/tr\u003e\u0027);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    return result.concat(\u0027\u003c/table\u003e\u0027);"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "   * Obtain a string without quotations."
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "  getTableData(line: string): string[] {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "    const output: string[] \u003d [];"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "    let inquote: boolean \u003d false;"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "    let buffer: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    const data: string[] \u003d line.split(\u0027\u0027);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 0; i \u003c data.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      if (data[i] \u003d\u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "        if (i + 1 \u003c data.length \u0026\u0026 data[i + 1] \u003d\u003d\u003d \u0027\"\u0027) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "          i +\u003d 1;"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "          inquote \u003d !inquote;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "      if (data[i] \u003d\u003d\u003d \u0027,\u0027) {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "        if (inquote) {"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "          buffer \u003d buffer.concat(data[i]);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "          output.push(buffer);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "          buffer \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "        buffer \u003d buffer.concat(data[i]);"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "    output.push(buffer.trim());"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Removes the student from course."
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  removeStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    this.courseService.removeStudentFromCourse(this.courseDetails.course.courseId, studentEmail).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.statusMessageService"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          .showSuccessMessage(`Student is successfully deleted from course \"${this.courseDetails.course.courseId}\"`);"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.sections.forEach("
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        (section: StudentListSectionData) \u003d\u003e {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          section.students \u003d section.students.filter("
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            (student: StudentListStudentData) \u003d\u003e student.email !\u003d\u003d studentEmail);"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "        });"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    });"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  }"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 17,
      "-": 332
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light top-padded\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-header bg-primary text-white\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cstrong\u003eCourse:\u003c/strong\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"float-sm-right\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-light btn-sm btn-course\" ngbTooltip\u003d\"Edit course name\" placement\u003d\"top-right\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "              [disabled]\u003d\"!currInstructorCoursePrivilege.canModifyCourse\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "              *ngIf\u003d\"!isEditingCourse\" (click)\u003d\"this.isEditingCourse \u003d true\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ci class\u003d\"fa fa-pen\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        Edit"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cbutton *ngIf\u003d\"isEditingCourse\" class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              ngbTooltip\u003d\"Cancel editing course details\" placement\u003d\"top-right\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              (click)\u003d\"cancelEditingCourse()\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "              \u003ci class\u003d\"fa fa-times\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        Cancel"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e\u0026nbsp;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton class\u003d\"btn btn-light btn-sm btn-course\" ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "              [disabled]\u003d\"!currInstructorCoursePrivilege.canModifyCourse\" (click)\u003d\"deleteCourse()\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ci class\u003d\"fa fa-trash\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        Delete"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/button\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body fill-plain\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-row form-group\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-sm-3\"\u003eCourse ID:\u003c/label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-3\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cinput class\u003d\"col-xs-12 form-control\" maxlength\u003d\"40\" tabindex\u003d\"1\" [(ngModel)]\u003d\"course.courseId\" disabled\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-row form-group\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-sm-3\"\u003eCourse Name:\u003c/label\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-9\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cinput class\u003d\"form-control\" ngbTooltip\u003d\"The name of the course, e.g. Software Engineering.\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                 maxlength\u003d\"64\" tabindex\u003d\"2\" [(ngModel)]\u003d\"course.courseName\" [disabled]\u003d\"!isEditingCourse\"\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-row form-group\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003clabel class\u003d\"col-xs-12 col-sm-3\"\u003eTime Zone:\u003c/label\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-xs-12 col-sm-9\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"input-group\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cselect class\u003d\"form-control\" ngbTooltip\u003d\"The time zone for the course. You should not need to change this as it is auto-detected based on your"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              device settings. TEAMMATES automatically adjusts to match the current time offset in your area, including clock changes due to daylight saving time.\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              [(ngModel)]\u003d\"course.timeZone\" [disabled]\u003d\"!isEditingCourse\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003coption *ngFor\u003d\"let timezone of timezones\" [value]\u003d\"timezone\"\u003e{{ timezone }}\u003c/option\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/select\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan class\u003d\"input-group-btn\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-primary\" type\u003dbutton [disabled]\u003d\"!isEditingCourse\" (click)\u003d\"detectTimezone()\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "                Auto-Detect"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        \u003cdiv class\u003d\" col-sm-12 text-center\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-primary\" type\u003d\"button\" (click)\u003d\"onSaveCourse()\" *ngIf\u003d\"isEditingCourse\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "            Save Changes"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/button\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"right top-padded\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ca class\u003d\"small\" href\u003d\"/web/instructor/help#course-instructor-access\" rel\u003d\"noopener noreferrer\" target\u003d\"_blank\"\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ci class\u003d\"fa fa-info-circle\" aria-hidden\u003d\"true\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    More about configuring access permissions"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/a\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-container *ngFor\u003d\"let panelDetail of instructorDetailPanels; let i \u003d index\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-instructor-edit-panel [editMode]\u003d\"EditMode.EDIT\" [(instructor)]\u003d\"panelDetail.editPanel\" [instructorIndex]\u003d\"i\""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "                            [currInstructorCoursePrivilege]\u003d\"currInstructorCoursePrivilege\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                            (viewRolePrivilegeModel)\u003d\"viewRolePrivilegeModel($event)\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                            (deleteInstructor)\u003d\"deleteInstructor(i)\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                            (saveInstructor)\u003d\"saveInstructor(i)\" (cancelEditing)\u003d\"cancelEditingInstructor(i)\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                            (sendRemindJoinEmail)\u003d\"resendReminderEmail(i)\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                            [allSections]\u003d\"this.allSections\" [allSessions]\u003d\"this.allSessions\"\u003e\u003c/tm-instructor-edit-panel\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbr/\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-container\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"text-center\" *ngIf\u003d\"!isAddingNewInstructor\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton class\u003d\"btn btn-primary\" tabindex\u003d\"6\" type\u003d\"button\" (click)\u003d\"isAddingNewInstructor \u003d true\"\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    Add New Instructor"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"isAddingNewInstructor\"\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-instructor-edit-panel [editMode]\u003d\"EditMode.ADD\" [(instructor)]\u003d\"newInstructorPanel\" [instructorIndex]\u003d\"instructorDetailPanels.length\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                            [currInstructorCoursePrivilege]\u003d\"currInstructorCoursePrivilege\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                            (viewRolePrivilegeModel)\u003d\"viewRolePrivilegeModel($event)\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                            (saveInstructor)\u003d\"addNewInstructor()\" (cancelEditing)\u003d\"isAddingNewInstructor \u003d false;\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                            [allSections]\u003d\"this.allSections\" [allSessions]\u003d\"this.allSessions\"\u003e\u003c/tm-instructor-edit-panel\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 7,
      "-": 86
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-edit-page/instructor-course-edit-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { concatAll, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthService } from \u0027../../../services/auth.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  AuthInfo,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructor,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPermissionRole,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructors,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  JoinState,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorCreateRequest, InstructorPrivilegeUpdateRequest, Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorOverallPermission,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorSectionLevelPermission, InstructorSessionLevelPermission,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./custom-privilege-setting-panel/custom-privilege-setting-panel.component\u0027;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  DeleteInstructorConfirmModalComponent,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./delete-instructor-confirm-model/delete-instructor-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  EditMode, InstructorEditPanel,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./instructor-edit-panel/instructor-edit-panel.component\u0027;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  ResendInvitationEmailModalComponent,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./resend-invitation-email-modal/resend-invitation-email-modal.component\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  ViewRolePrivilegesModalComponent,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./view-role-privileges-modal/view-role-privileges-modal.component\u0027;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "interface InstructorEditPanelDetail {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  originalInstructor: Instructor;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  editPanel: InstructorEditPanel;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor course edit page."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-course-edit-page\u0027,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-course-edit-page.component.html\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-course-edit-page.component.scss\u0027],"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCourseEditPageComponent implements OnInit {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  EditMode: typeof EditMode \u003d EditMode;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  timezones: string[] \u003d [];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  isEditingCourse: boolean \u003d false;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course \u003d {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    creationTimestamp: 0,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    deletionTimestamp: 0,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  originalCourse: Course \u003d {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    creationTimestamp: 0,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    deletionTimestamp: 0,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  };"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  currInstructorGoogleId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  currInstructorCoursePrivilege: InstructorPrivilege \u003d {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifyCourse: true,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifySession: true,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifyStudent: true,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifyInstructor: true,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    canViewStudentInSections: true,"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    canModifySessionCommentsInSections: true,"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    canViewSessionInSections: true,"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    canSubmitSessionInSections: true,"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorDetailPanels: InstructorEditPanelDetail[] \u003d [];"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  isAddingNewInstructor: boolean \u003d false;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  newInstructorPanel: InstructorEditPanel \u003d {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "    googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    permission: {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      privilege: {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifyCourse: false,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifySession: false,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifyStudent: false,"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifyInstructor: false,"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        canViewStudentInSections: false,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "        canModifySessionCommentsInSections: false,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "        canViewSessionInSections: false,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        canSubmitSessionInSections: false,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionLevel: [],"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    },"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    isEditing: true,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  // for fine-grain permission setting"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  allSections: string[] \u003d [];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  allSessions: string[] \u003d [];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "              private navigationService: NavigationService,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "              private feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "              private modalService: NgbModal) { }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourseInfo();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCurrInstructorInfo();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      // load all section and session name"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      forkJoin("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          this.studentService.getStudentsFromCourse(this.courseId),"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionsService.getFeedbackSessionsForInstructor(this.courseId),"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      ).subscribe((vals: any[]) \u003d\u003e {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "        const students: Students \u003d vals[0] as Students;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        const sessions: FeedbackSessions \u003d vals[1] as FeedbackSessions;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        this.allSections \u003d"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "            Array.from(new Set(students.students.map((value: Student) \u003d\u003e value.sectionName)));"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "        this.allSessions \u003d"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            sessions.feedbackSessions.map((session: FeedbackSession) \u003d\u003e session.feedbackSessionName);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        this.loadCourseInstructors();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezones \u003d Object.keys(this.timezoneService.getTzOffsets());"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "   * Replaces the timezone value with the detected timezone."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "  detectTimezone(): void {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    this.course.timeZone \u003d moment.tz.guess();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the course being edited."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourseInfo(): void {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsInstructor(this.courseId).subscribe((resp: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "      this.course \u003d resp;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.originalCourse \u003d Object.assign({}, resp);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the information of the current logged-in instructor."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCurrInstructorInfo(): void {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    // privilege"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currInstructorCoursePrivilege \u003d resp;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    // login credential"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authService.getAuthUser().subscribe((res: AuthInfo) \u003d\u003e {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      this.currInstructorGoogleId \u003d res.user \u003d\u003d\u003d undefined ? \u0027\u0027 : res.user.id;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the current course and redirects to \u0027Courses\u0027 page if action is successful."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCourse(): void {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.binCourse(this.courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      this.navigationService.navigateWithSuccessMessage(this.router, \u0027/web/instructor/courses\u0027,"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the updated course details."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "  onSaveCourse(): void {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.updateCourse(this.courseId, {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: this.course.courseName,"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: this.course.timeZone,"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((resp: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027The course has been edited.\u0027);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "      this.isEditingCourse \u003d false;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "      this.course \u003d resp;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.originalCourse \u003d Object.assign({}, resp);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Cancels editing the course details."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  cancelEditingCourse(): void {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.course \u003d Object.assign({}, this.originalCourse);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.isEditingCourse \u003d false;"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads all instructors in the course."
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourseInstructors(): void {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: Intent.FULL_DETAIL,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructors\u0027, paramMap)"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetailPanels \u003d resp.instructors.map((i: Instructor) \u003d\u003e ({"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "            originalInstructor: Object.assign({}, i),"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "            editPanel: this.getInstructorEditPanelModel(i),"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "          }));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetailPanels.forEach((panel: InstructorEditPanelDetail) \u003d\u003e {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadPermissionForInstructor(panel.originalInstructor, panel.editPanel.permission);"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the default edit panel model of an instructor."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "  getInstructorEditPanelModel(i: Instructor): InstructorEditPanel {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    return {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "      googleId: i.googleId,"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: i.courseId,"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      email: i.email,"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "      isDisplayedToStudents: i.isDisplayedToStudents,"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "      displayedToStudentsAs: i.displayedToStudentsAs,"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "      name: i.name,"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      role: i.role,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: i.joinState,"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "      permission: {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "        privilege: {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyCourse: true,"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySession: true,"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyStudent: true,"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyInstructor: true,"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewStudentInSections: true,"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySessionCommentsInSections: true,"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewSessionInSections: true,"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "          canSubmitSessionInSections: true,"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevel: [],"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      isEditing: false,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "   * Shows the model of details permission for a role."
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "  viewRolePrivilegeModel(role: InstructorPermissionRole): void {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(ViewRolePrivilegesModalComponent);"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {}, () \u003d\u003e {});"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "      instructorrole: role,"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.instructorPrivilege \u003d resp;"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "   * Cancels editing an instructor."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "  cancelEditingInstructor(index: number): void {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    panelDetail.editPanel \u003d this.getInstructorEditPanelModel(panelDetail.originalInstructor);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves instructor at index."
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "  saveInstructor(index: number): void {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: panelDetail.originalInstructor.courseId,"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    const reqBody: InstructorCreateRequest \u003d {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "      id: panelDetail.originalInstructor.joinState \u003d\u003d\u003d JoinState.JOINED"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "          ? panelDetail.originalInstructor.googleId : undefined,"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "      name: panelDetail.editPanel.name,"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "      email: panelDetail.originalInstructor.joinState \u003d\u003d\u003d JoinState.JOINED"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "          ? panelDetail.editPanel.email : panelDetail.originalInstructor.email,"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "      role: panelDetail.editPanel.role,"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "      displayName: panelDetail.editPanel.displayedToStudentsAs,"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "      isDisplayedToStudent: panelDetail.editPanel.isDisplayedToStudents,"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.put(\u0027/instructor\u0027, paramsMap, reqBody)"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: Instructor) \u003d\u003e {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "          panelDetail.originalInstructor \u003d Object.assign({}, resp);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "          const permission: InstructorOverallPermission \u003d panelDetail.editPanel.permission;"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "          panelDetail.editPanel \u003d this.getInstructorEditPanelModel(resp);"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "          panelDetail.editPanel.permission \u003d permission;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updatePrivilegeForInstructor(panelDetail.originalInstructor, panelDetail.editPanel.permission);"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(`The instructor ${resp.name} has been updated.`);"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    panelDetail.editPanel.isEditing \u003d false;"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes instructor at index."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteInstructor(index: number): void {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(DeleteInstructorConfirmModalComponent);"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.instructorToDelete \u003d panelDetail.originalInstructor;"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.isDeletingSelf \u003d panelDetail.originalInstructor.googleId \u003d\u003d\u003d this.currInstructorGoogleId;"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: panelDetail.originalInstructor.courseId,"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "        instructoremail: panelDetail.originalInstructor.email,"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "      this.httpRequestService.delete(\u0027/instructor\u0027, paramsMap)"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            if (panelDetail.originalInstructor.googleId \u003d\u003d\u003d this.currInstructorGoogleId) {"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "              this.navigationService.navigateWithSuccessMessage("
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.router, \u0027/web/instructor/courses\u0027, \u0027Instructor is successfully deleted.\u0027);"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "              this.instructorDetailPanels.splice(index, 1);"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "              this.statusMessageService.showSuccessMessage(\u0027Instructor is successfully deleted.\u0027);"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "   * Re-sends an invitation email to an instructor in the course."
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "  resendReminderEmail(index: number): void {"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "    const panelDetail: InstructorEditPanelDetail \u003d this.instructorDetailPanels[index];"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(ResendInvitationEmailModalComponent);"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.instructorToResend \u003d panelDetail.originalInstructor;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "          .remindInstructorForJoin(panelDetail.originalInstructor.courseId, panelDetail.originalInstructor.email)"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "   * Adds new instructor."
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "  addNewInstructor(): void {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "    const reqBody: InstructorCreateRequest \u003d {"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "      name: this.newInstructorPanel.name,"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "      email: this.newInstructorPanel.email,"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "      role: this.newInstructorPanel.role,"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "      displayName: this.newInstructorPanel.displayedToStudentsAs,"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "      isDisplayedToStudent: this.newInstructorPanel.isDisplayedToStudents,"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.post(\u0027/instructor\u0027, paramsMap, reqBody)"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((resp: Instructor) \u003d\u003e {"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "          const newDetailPanels: InstructorEditPanelDetail \u003d {"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "            originalInstructor: Object.assign({}, resp),"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "            editPanel: this.getInstructorEditPanelModel(resp),"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "          newDetailPanels.editPanel.permission \u003d this.newInstructorPanel.permission;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetailPanels.push(newDetailPanels);"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(`\"The instructor ${resp.name} has been added successfully."
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "          An email containing how to \u0027join\u0027 this course will be sent to ${resp.email} in a few minutes.\"`);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "          this.updatePrivilegeForInstructor(newDetailPanels.originalInstructor, newDetailPanels.editPanel.permission);"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isAddingNewInstructor \u003d false;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": "          this.newInstructorPanel \u003d {"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "            courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "            email: \u0027\u0027,"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "            isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "            displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "            name: \u0027\u0027,"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "            role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "            joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "            permission: {"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "              privilege: {"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifyCourse: true,"
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifySession: true,"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifyStudent: true,"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifyInstructor: true,"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                canViewStudentInSections: true,"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                canModifySessionCommentsInSections: true,"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "                canViewSessionInSections: true,"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                canSubmitSessionInSections: true,"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel: [],"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            isEditing: true,"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads permission for instructor."
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPermissionForInstructor(instructor: Instructor, permission: InstructorOverallPermission): void {"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "    if (instructor.role !\u003d\u003d InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_CUSTOM) {"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "    // only need to load for custom role."
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "    const param: any \u003d {"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: instructor.courseId,"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "      instructoremail: instructor.email,"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "    const requests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "    requests.push(this.httpRequestService.get(\u0027/instructor/privilege\u0027, param)"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyCourse \u003d resp.canModifyCourse;"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifySession \u003d resp.canModifySession;"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyStudent \u003d resp.canModifyStudent;"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifyInstructor \u003d resp.canModifyInstructor;"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "          permission.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    this.allSections.forEach((sectionName: string) \u003d\u003e {"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "      const sectionLevelPermission: InstructorSectionLevelPermission \u003d {"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionNames: [sectionName],"
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        privilege: {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyCourse: false,"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySession: false,"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyStudent: false,"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifyInstructor: false,"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewStudentInSections: false,"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySessionCommentsInSections: false,"
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewSessionInSections: false,"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "          canSubmitSessionInSections: false,"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "        sessionLevel: [],"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel.push(sectionLevelPermission);"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": "      requests.push(this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "        ...param,"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionname: sectionName,"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "      }).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevelPermission.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "      })));"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "      this.allSessions.forEach((sessionName: string) \u003d\u003e {"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "        requests.push(this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "          ...param,"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionname: sectionName,"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": "          fsname: sessionName,"
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "        }).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevelPermission.sessionLevel.push({"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionName,"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "            privilege: {"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifyCourse: false,"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifySession: false,"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifyStudent: false,"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifyInstructor: false,"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "              canViewStudentInSections: false,"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "              canModifySessionCommentsInSections: resp.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "              canViewSessionInSections: resp.canViewSessionInSections,"
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "              canSubmitSessionInSections: resp.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "            },"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    // get all permission"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(requests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel \u003d permission.sectionLevel"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "          .filter((sectionLevelPermission: InstructorSectionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "            // discard section level permission that is consistent with the overall permission"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canViewStudentInSections"
      },
      {
        "lineNumber": 556,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canViewStudentInSections) {"
      },
      {
        "lineNumber": 557,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 558,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 559,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canModifySessionCommentsInSections"
      },
      {
        "lineNumber": 560,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canModifySessionCommentsInSections) {"
      },
      {
        "lineNumber": 561,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 562,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 563,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canViewSessionInSections"
      },
      {
        "lineNumber": 564,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canViewSessionInSections) {"
      },
      {
        "lineNumber": 565,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 566,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 567,
        "author": {
          "gitId": "-"
        },
        "content": "            if (sectionLevelPermission.privilege.canSubmitSessionInSections"
      },
      {
        "lineNumber": 568,
        "author": {
          "gitId": "-"
        },
        "content": "                !\u003d\u003d permission.privilege.canSubmitSessionInSections) {"
      },
      {
        "lineNumber": 569,
        "author": {
          "gitId": "-"
        },
        "content": "              return true;"
      },
      {
        "lineNumber": 570,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 571,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 572,
        "author": {
          "gitId": "-"
        },
        "content": "            return sectionLevelPermission.sessionLevel"
      },
      {
        "lineNumber": 573,
        "author": {
          "gitId": "-"
        },
        "content": "                .some((sessionLevelPermission: InstructorSessionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 574,
        "author": {
          "gitId": "-"
        },
        "content": "                  return sectionLevelPermission.privilege.canModifySessionCommentsInSections"
      },
      {
        "lineNumber": 575,
        "author": {
          "gitId": "-"
        },
        "content": "                      !\u003d\u003d sessionLevelPermission.privilege.canModifySessionCommentsInSections ||"
      },
      {
        "lineNumber": 576,
        "author": {
          "gitId": "-"
        },
        "content": "                      sectionLevelPermission.privilege.canViewSessionInSections"
      },
      {
        "lineNumber": 577,
        "author": {
          "gitId": "-"
        },
        "content": "                      !\u003d\u003d sessionLevelPermission.privilege.canViewSessionInSections ||"
      },
      {
        "lineNumber": 578,
        "author": {
          "gitId": "-"
        },
        "content": "                      sectionLevelPermission.privilege.canSubmitSessionInSections"
      },
      {
        "lineNumber": 579,
        "author": {
          "gitId": "-"
        },
        "content": "                      !\u003d\u003d sessionLevelPermission.privilege.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 580,
        "author": {
          "gitId": "-"
        },
        "content": "                });"
      },
      {
        "lineNumber": 581,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 582,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 583,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel.forEach((sectionLevel: InstructorSectionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 584,
        "author": {
          "gitId": "-"
        },
        "content": "        if (sectionLevel.sessionLevel.every((sessionLevel: InstructorSessionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 585,
        "author": {
          "gitId": "-"
        },
        "content": "          return sectionLevel.privilege.canModifySessionCommentsInSections"
      },
      {
        "lineNumber": 586,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003d\u003d\u003d sessionLevel.privilege.canModifySessionCommentsInSections \u0026\u0026"
      },
      {
        "lineNumber": 587,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canViewSessionInSections"
      },
      {
        "lineNumber": 588,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003d\u003d\u003d sessionLevel.privilege.canViewSessionInSections \u0026\u0026"
      },
      {
        "lineNumber": 589,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionLevel.privilege.canSubmitSessionInSections"
      },
      {
        "lineNumber": 590,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003d\u003d\u003d sessionLevel.privilege.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 591,
        "author": {
          "gitId": "-"
        },
        "content": "        })) {"
      },
      {
        "lineNumber": 592,
        "author": {
          "gitId": "-"
        },
        "content": "          // session level is consistent with the section level, we can remove it."
      },
      {
        "lineNumber": 593,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevel.sessionLevel \u003d [];"
      },
      {
        "lineNumber": 594,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 595,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 596,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 597,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 598,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 599,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 600,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 601,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 602,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates privilege for instructor"
      },
      {
        "lineNumber": 603,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 604,
        "author": {
          "gitId": "-"
        },
        "content": "  updatePrivilegeForInstructor(instructor: Instructor, permission: InstructorOverallPermission): void {"
      },
      {
        "lineNumber": 605,
        "author": {
          "gitId": "-"
        },
        "content": "    if (instructor.role !\u003d\u003d InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_CUSTOM) {"
      },
      {
        "lineNumber": 606,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 607,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 608,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 609,
        "author": {
          "gitId": "-"
        },
        "content": "    // only need to update for custom role."
      },
      {
        "lineNumber": 610,
        "author": {
          "gitId": "-"
        },
        "content": "    const param: any \u003d {"
      },
      {
        "lineNumber": 611,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: instructor.courseId,"
      },
      {
        "lineNumber": 612,
        "author": {
          "gitId": "-"
        },
        "content": "      instructoremail: instructor.email,"
      },
      {
        "lineNumber": 613,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 614,
        "author": {
          "gitId": "-"
        },
        "content": "    const requests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 615,
        "author": {
          "gitId": "-"
        },
        "content": "    requests.push(this.httpRequestService.put(\u0027/instructor/privilege\u0027, param, {"
      },
      {
        "lineNumber": 616,
        "author": {
          "gitId": "-"
        },
        "content": "      canModifyCourse: permission.privilege.canModifyCourse,"
      },
      {
        "lineNumber": 617,
        "author": {
          "gitId": "-"
        },
        "content": "      canModifySession: permission.privilege.canModifySession,"
      },
      {
        "lineNumber": 618,
        "author": {
          "gitId": "-"
        },
        "content": "      canModifyStudent: permission.privilege.canModifyStudent,"
      },
      {
        "lineNumber": 619,
        "author": {
          "gitId": "-"
        },
        "content": "      canModifyInstructor: permission.privilege.canModifyInstructor,"
      },
      {
        "lineNumber": 620,
        "author": {
          "gitId": "-"
        },
        "content": "      canViewStudentInSections: permission.privilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 621,
        "author": {
          "gitId": "-"
        },
        "content": "      canModifySessionCommentsInSections: permission.privilege.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 622,
        "author": {
          "gitId": "-"
        },
        "content": "      canViewSessionInSections: permission.privilege.canViewSessionInSections,"
      },
      {
        "lineNumber": 623,
        "author": {
          "gitId": "-"
        },
        "content": "      canSubmitSessionInSections: permission.privilege.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 624,
        "author": {
          "gitId": "-"
        },
        "content": "    } as InstructorPrivilegeUpdateRequest).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 625,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canModifyCourse \u003d resp.canModifyCourse;"
      },
      {
        "lineNumber": 626,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canModifySession \u003d resp.canModifySession;"
      },
      {
        "lineNumber": 627,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canModifyStudent \u003d resp.canModifyStudent;"
      },
      {
        "lineNumber": 628,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canModifyInstructor \u003d resp.canModifyInstructor;"
      },
      {
        "lineNumber": 629,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 630,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 631,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 632,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 633,
        "author": {
          "gitId": "-"
        },
        "content": "    })));"
      },
      {
        "lineNumber": 634,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 635,
        "author": {
          "gitId": "-"
        },
        "content": "    permission.sectionLevel.forEach((sectionLevel: InstructorSectionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 636,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionLevel.sectionNames.forEach((sectionName: string) \u003d\u003e {"
      },
      {
        "lineNumber": 637,
        "author": {
          "gitId": "-"
        },
        "content": "        requests.push(this.httpRequestService.put(\u0027/instructor/privilege\u0027, param, {"
      },
      {
        "lineNumber": 638,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionName,"
      },
      {
        "lineNumber": 639,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 640,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewStudentInSections: sectionLevel.privilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 641,
        "author": {
          "gitId": "-"
        },
        "content": "          canModifySessionCommentsInSections: sectionLevel.privilege.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 642,
        "author": {
          "gitId": "-"
        },
        "content": "          canViewSessionInSections: sectionLevel.privilege.canViewSessionInSections,"
      },
      {
        "lineNumber": 643,
        "author": {
          "gitId": "-"
        },
        "content": "          canSubmitSessionInSections: sectionLevel.privilege.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 644,
        "author": {
          "gitId": "-"
        },
        "content": "        } as InstructorPrivilegeUpdateRequest).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 645,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevel.privilege.canViewStudentInSections \u003d resp.canViewStudentInSections;"
      },
      {
        "lineNumber": 646,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevel.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 647,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevel.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 648,
        "author": {
          "gitId": "-"
        },
        "content": "          sectionLevel.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 649,
        "author": {
          "gitId": "-"
        },
        "content": "        })));"
      },
      {
        "lineNumber": 650,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 651,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionLevel.sessionLevel.forEach((sessionLevel: InstructorSessionLevelPermission) \u003d\u003e {"
      },
      {
        "lineNumber": 652,
        "author": {
          "gitId": "-"
        },
        "content": "          requests.push(this.httpRequestService.put(\u0027/instructor/privilege\u0027, param, {"
      },
      {
        "lineNumber": 653,
        "author": {
          "gitId": "-"
        },
        "content": "            sectionName,"
      },
      {
        "lineNumber": 654,
        "author": {
          "gitId": "-"
        },
        "content": "            feedbackSessionName: sessionLevel.sessionName,"
      },
      {
        "lineNumber": 655,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 656,
        "author": {
          "gitId": "-"
        },
        "content": "            canModifySessionCommentsInSections: sessionLevel.privilege.canModifySessionCommentsInSections,"
      },
      {
        "lineNumber": 657,
        "author": {
          "gitId": "-"
        },
        "content": "            canViewSessionInSections: sessionLevel.privilege.canViewSessionInSections,"
      },
      {
        "lineNumber": 658,
        "author": {
          "gitId": "-"
        },
        "content": "            canSubmitSessionInSections: sessionLevel.privilege.canSubmitSessionInSections,"
      },
      {
        "lineNumber": 659,
        "author": {
          "gitId": "-"
        },
        "content": "          } as InstructorPrivilegeUpdateRequest).pipe(tap((resp: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 660,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionLevel.privilege.canModifySessionCommentsInSections \u003d resp.canModifySessionCommentsInSections;"
      },
      {
        "lineNumber": 661,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionLevel.privilege.canViewSessionInSections \u003d resp.canViewSessionInSections;"
      },
      {
        "lineNumber": 662,
        "author": {
          "gitId": "-"
        },
        "content": "            sessionLevel.privilege.canSubmitSessionInSections \u003d resp.canSubmitSessionInSections;"
      },
      {
        "lineNumber": 663,
        "author": {
          "gitId": "-"
        },
        "content": "          })));"
      },
      {
        "lineNumber": 664,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 665,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 666,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 667,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 668,
        "author": {
          "gitId": "-"
        },
        "content": "    of(...requests).pipe(concatAll()).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 669,
        "author": {
          "gitId": "-"
        },
        "content": "      // privileges updated"
      },
      {
        "lineNumber": 670,
        "author": {
          "gitId": "-"
        },
        "content": "      // filter out empty permission setting"
      },
      {
        "lineNumber": 671,
        "author": {
          "gitId": "-"
        },
        "content": "      permission.sectionLevel \u003d permission.sectionLevel.filter("
      },
      {
        "lineNumber": 672,
        "author": {
          "gitId": "-"
        },
        "content": "          (sectionLevel: InstructorSectionLevelPermission) \u003d\u003e sectionLevel.sectionNames.length !\u003d\u003d 0);"
      },
      {
        "lineNumber": 673,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 674,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 675,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 676,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 677,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 13,
      "-": 664
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-course-student-details-page/instructor-course-student-details-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, JoinState, Student, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorCourseStudentDetailsPageComponent,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./instructor-course-student-details-page.component\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-profile\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentProfileStubComponent {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile | undefined;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() photoUrl: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() hideMoreInfo: boolean \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-course-related-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "class CourseRelatedInfoStubComponent {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() student: Student \u003d {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-more-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "class MoreInfoStubComponent {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() moreInfoText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027InstructorCourseStudentDetailsPageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: InstructorCourseStudentDetailsPageComponent;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cInstructorCourseStudentDetailsPageComponent\u003e;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorCourseStudentDetailsPageComponent,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileStubComponent,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        CourseRelatedInfoStubComponent,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        MoreInfoStubComponent,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(InstructorCourseStudentDetailsPageComponent);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with populated student\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u0027studentEmail@email.com\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027firstName\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      lastName: \u0027lastName\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      comments: \u0027This is a comment\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      teamName: \u0027myTeam\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionName: \u0027mySection\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    component.studentProfile \u003d {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027name\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      shortName: \u0027shortName\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u0027profileEmail@email.com\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      institute: \u0027NUS\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      nationality: \u0027Indian\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      gender: Gender.MALE,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "      moreInfo: \u0027I have more info here\u0027,"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 94
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"isAddNewCourseFormExpanded \u003d true\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "          [disabled]\u003d\"isAddNewCourseFormExpanded\"\u003e\u003ci class\u003d\"fas fa-plus\"\u003e\u003c/i\u003e Add New Course"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/button\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\" [hidden]\u003d\"!isAddNewCourseFormExpanded\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ctm-add-course-form (courseAdded)\u003d\"loadInstructorCourses()\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                      (closeCourseFormEvent)\u003d\"isAddNewCourseFormExpanded \u003d false\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003e\u003c/tm-add-course-form\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctable class\u003d\"table table-striped table-bordered margin-0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cthead\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr class\u003d\"bg-primary text-white\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_ID)\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            Course ID"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.COURSE_ID\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_ID \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.COURSE_NAME)\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            Course Name"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.COURSE_NAME\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.COURSE_NAME \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"sortable-header\" (click)\u003d\"sortCoursesEvent(SortBy.CREATION_DATE)\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "            Creation Date"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy !\u003d\u003d SortBy.CREATION_DATE\"\u003e\u003ci class\u003d\"fas fa-sort\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.CREATION_DATE \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.DESC\"\u003e\u003ci class\u003d\"fas fa-sort-down\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"tableSortBy \u003d\u003d\u003d SortBy.CREATION_DATE \u0026\u0026 tableSortOrder \u003d\u003d\u003d SortOrder.ASC\"\u003e\u003ci class\u003d\"fas fa-sort-up\"\u003e\u003c/i\u003e\u003c/span\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/th\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eSections\u003c/th\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTeams\u003c/th\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTotal Students\u003c/th\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eTotal Unregistered\u003c/th\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/thead\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctbody\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr *ngFor\u003d\"let course of activeCourses\"\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseId}}\u003c/td\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].sections }}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].teams }}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].students }}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"!courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ca (click)\u003d\"getCourseStats(course.course.courseId)\" [routerLink]\u003d\"\"\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "                show"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/a\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan *ngIf\u003d\"courseStats[course.course.courseId]\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "              {{ courseStats[course.course.courseId].unregistered }}"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd class\u003d\"text-center actions-cell\"\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyStudent\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Enroll student into the course\""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/enroll\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "              Enroll"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyStudent\"\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              Enroll"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"View, edit and send invitation emails to the students in the course\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/details\""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              View"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Edit Course information and instructor list\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "                routerLink\u003d\"/web/instructor/courses/edit\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "                [queryParams]\u003d\"{courseid: course.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "              Edit"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" (click)\u003d\"changeArchiveStatus(course.course.courseId, true)\""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "                access it from the \u0027Courses\u0027 tab)\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "              Archive"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.course.courseId)\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tbody\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctr *ngIf\u003d\"!activeCourses.length\"\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctd\u003e\u003c/td\u003e"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tr\u003e"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/table\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cp *ngIf\u003d\"!activeCourses.length\"\u003eNo records found.\u003c/p\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"course-section\" *ngIf\u003d\"archivedCourses.length\"\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cspan class\u003d\"fa fa-file-archive\"\u003e\u003c/span\u003e Archived Courses"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/h2\u003e"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"table-responsive\"\u003e"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ctable class\u003d\"table table-striped table-bordered margin-0\"\u003e"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cthead\u003e"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr class\u003d\"bg-info text-white\"\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCourse ID\u003c/th\u003e"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCourse Name\u003c/th\u003e"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth\u003eCreation Date\u003c/th\u003e"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/thead\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctbody\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctr *ngFor\u003d\"let course of archivedCourses\"\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseId}}\u003c/td\u003e"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd container\u003d\"body\" ngbTooltip\u003d\"{{course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027}}\"\u003e"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "            {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctd class\u003d\"text-center\"\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" (click)\u003d\"changeArchiveStatus(course.course.courseId, false)\"\u003e"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "              Unarchive"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" (click)\u003d\"onDelete(course.course.courseId)\""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "                ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "              Delete"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/td\u003e"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/tr\u003e"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/tbody\u003e"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/table\u003e"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row course-section margin-top-30px\" *ngIf\u003d\"softDeletedCourses.length\"\u003e"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "   \u003ch2 class\u003d\"text-muted\"\u003e"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan class\u003d\"fa fa-trash-alt\"\u003e\u003c/span\u003e Deleted Courses"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h2\u003e"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card bg-light top-padded\"\u003e"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header bg-secondary recycle-bin-header\" (click)\u003d\"isRecycleBinExpanded \u003d !isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"row align-items-center\"\u003e"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-white\"\u003e"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cb\u003eRecycle Bin\u003c/b\u003e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-6 text-right bin-header-button\"\u003e"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"canRestoreAll\" (click)\u003d\"$event.stopPropagation(); onRestoreAll()\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "                    ngbTooltip\u003d\"Restore all deleted courses and their corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!canRestoreAll\"\u003e"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-check\"\u003e\u003c/i\u003e Restore All"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm text-danger\" *ngIf\u003d\"canDeleteAll\" (click)\u003d\"$event.stopPropagation(); onDeleteAll()\""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "                    ngbTooltip\u003d\"Permanently delete all courses and their corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton class\u003d\"btn btn-light btn-sm disabled text-danger\" *ngIf\u003d\"!canDeleteAll\"\u003e"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e Delete All"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/button\u003e"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-down text-white\" *ngIf\u003d\"!isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-up text-white\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      \u003cdiv class\u003d\"card-body recycle-bin-body table-responsive\" *ngIf\u003d\"isRecycleBinExpanded\"\u003e"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ctable class\u003d\"table table-responsive-lg table-striped table-bordered recycle-bin-table\"\u003e"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cthead\u003e"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr class\u003d\"background-color-medium-gray text-color-gray\"\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCourse ID\u003c/th\u003e"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCourse Name\u003c/th\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eCreation Date\u003c/th\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth\u003eDeletion Date\u003c/th\u003e"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cth class\u003d\"text-center\"\u003eAction(s)\u003c/th\u003e"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/thead\u003e"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctbody\u003e"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ctr *ngFor\u003d\"let course of softDeletedCourses\"\u003e"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{course.course.courseId}}\u003c/td\u003e"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd\u003e{{course.course.courseName}}\u003c/td\u003e"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.course.creationTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "                {{course.course.creationTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd container\u003d\"body\" [ngbTooltip]\u003d\"course.course.deletionTimestamp | date:\u0027EEE, dd MMM yyyy, h:mma\u0027\"\u003e"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "                {{course.course.deletionTimestamp | date:\u0027d MMM yyyy\u0027}}"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ctd class\u003d\"text-center actions-cell\"\u003e"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click)\u003d\"onRestore(course.course.courseId)\""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Restore the deleted course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "                  Restore"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "                  Restore"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm\" *ngIf\u003d\"course.canModifyCourse\" style\u003d\"color: red;\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "                        (click)\u003d\"onDeletePermanently(course.course.courseId)\""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "                        ngbTooltip\u003d\"Permanently delete the course and its corresponding students and sessions\"\u003e"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "                  Delete Permanently"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cbutton class\u003d\"btn btn-light btn-sm disabled\" *ngIf\u003d\"!course.canModifyCourse\""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "                        style\u003d\"color: red;\"\u003e"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "                  Delete Permanently"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/button\u003e"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/td\u003e"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/tr\u003e"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tbody\u003e"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/table\u003e"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 1,
      "-": 257
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-courses-page/instructor-courses-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  CourseArchive,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  JoinState,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  MessageOutput,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  Students,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  CoursePermanentDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./course-permanent-deletion-confirm-modal/course-permanent-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  CourseSoftDeletionConfirmModalComponent,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./course-soft-deletion-confirm-modal/course-soft-deletion-confirm-modal.component\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "interface CourseModel {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyCourse: boolean;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  canModifyStudent: boolean;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Sort criteria for the courses table."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SortBy {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * Nothing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  NONE,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   * Course ID."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  COURSE_ID,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   * Course Name."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  COURSE_NAME,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creation Date."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  CREATION_DATE,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": " * Sort order for the courses table."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "export enum SortOrder {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * Descending sort order."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  DESC,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   * Ascending sort order"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  ASC,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor courses list page."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-courses-page\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-courses-page.component.html\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-courses-page.component.scss\u0027],"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorCoursesPageComponent implements OnInit {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  activeCourses: CourseModel[] \u003d [];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  archivedCourses: CourseModel[] \u003d [];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  softDeletedCourses: CourseModel[] \u003d [];"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  courseStats: { [key: string]: { [key: string]: number } } \u003d {};"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  isRecycleBinExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  canDeleteAll: boolean \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  canRestoreAll: boolean \u003d true;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  isAddNewCourseFormExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "              private modalService: NgbModal) { }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      if (queryParams.isAddNewCourse) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isAddNewCourseFormExpanded \u003d queryParams.isAddNewCourse;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads instructor courses required for this page."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  loadInstructorCourses(): void {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    this.activeCourses \u003d [];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    this.archivedCourses \u003d [];"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    this.softDeletedCourses \u003d [];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027).subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: course.courseId,"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "        }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "          const canModifyCourse: boolean \u003d instructorPrivilege.canModifyCourse;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "          const canModifyStudent: boolean \u003d instructorPrivilege.canModifyStudent;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const activeCourse: CourseModel \u003d Object.assign({}, { course, canModifyCourse, canModifyStudent });"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "          this.activeCourses.push(activeCourse);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (error: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(error.error.message);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027archived\u0027).subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: course.courseId,"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "          const canModifyCourse: boolean \u003d instructorPrivilege.canModifyCourse;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const canModifyStudent: boolean \u003d instructorPrivilege.canModifyStudent;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const archivedCourse: CourseModel \u003d Object.assign({}, { course, canModifyCourse, canModifyStudent });"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          this.archivedCourses.push(archivedCourse);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (error: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(error.error.message);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027softDeleted\u0027).subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: course.courseId,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "        }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          const canModifyCourse: boolean \u003d instructorPrivilege.canModifyCourse;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const canModifyStudent: boolean \u003d instructorPrivilege.canModifyStudent;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "          const softDeletedCourse: CourseModel \u003d Object.assign({}, { course, canModifyCourse, canModifyStudent });"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "          this.softDeletedCourses.push(softDeletedCourse);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!softDeletedCourse.canModifyCourse) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "            this.canDeleteAll \u003d false;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "            this.canRestoreAll \u003d false;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (error: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(error.error.message);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "   * Constructs the url for course stats from the given course id."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseStats(courseId: string): void {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourse(courseId).subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseStats[courseId] \u003d {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "        sections: (new Set(students.students.map((value: Student) \u003d\u003e value.sectionName))).size,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "        teams: (new Set(students.students.map((value: Student) \u003d\u003e value.teamName))).size,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "        students: students.students.length,"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "        unregistered: students.students.filter((value: Student) \u003d\u003e value.joinState \u003d\u003d\u003d JoinState.NOT_JOINED)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "          .length,"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "   * Changes the status of an archived course."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "  changeArchiveStatus(courseId: string, toArchive: boolean): void {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.changeArchiveStatus(courseId, {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      archiveStatus: toArchive,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courseArchive: CourseArchive) \u003d\u003e {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "      if (courseArchive.isArchived) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.changeModelFromActiveToArchived(courseId);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(`The course ${courseId} has been archived."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "          It will not appear on the home page anymore.`);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.changeModelFromArchivedToActive(courseId);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027The course has been unarchived.\u0027);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Moves a course model from active courses list to archived list."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * This is to reduce the need to refresh the entire list of courses multiple times."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  changeModelFromActiveToArchived(courseId: string): void {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    const courseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.activeCourses \u003d this.removeCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    if (courseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.archivedCourses.push(courseToBeRemoved);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Moves a course model from archived courses list to active list."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * This is to reduce the need to refresh the entire list of courses multiple times."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  changeModelFromArchivedToActive(courseId: string): void {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    const courseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.archivedCourses \u003d this.removeCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    if (courseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.activeCourses.push(courseToBeRemoved);"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.activeCourses.sort(this.sortBy(this.tableSortBy));"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Finds and returns a course from the target course list."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  findCourse(targetList: CourseModel[], courseId: string): CourseModel | undefined {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    return targetList.find((model: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      return model.course.courseId \u003d\u003d\u003d courseId;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    });"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Removes a course from the target course list and returns the result list."
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  removeCourse(targetList: CourseModel[], courseId: string): CourseModel[] {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    return targetList.filter((model: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      return model.course.courseId !\u003d\u003d courseId;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    });"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves an active/archived course to Recycle Bin."
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "  onDelete(courseId: string): void {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CourseSoftDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.moveCourseToRecycleBin(courseId, course.deletionTimestamp);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * Moves an active/archived course to Recycle Bin."
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   * This is to reduce the need to refresh the entire list of courses multiple times."
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "   */"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  moveCourseToRecycleBin(courseId: string, deletionTimeStamp: number): void {"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    const activeCourseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.activeCourses \u003d this.removeCourse(this.activeCourses, courseId);"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    if (activeCourseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      activeCourseToBeRemoved.course.deletionTimestamp \u003d deletionTimeStamp;"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.softDeletedCourses.push(activeCourseToBeRemoved);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      const archivedCourseToBeRemoved: CourseModel | undefined \u003d this.findCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.archivedCourses \u003d this.removeCourse(this.archivedCourses, courseId);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      if (archivedCourseToBeRemoved !\u003d\u003d undefined) {"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        archivedCourseToBeRemoved.course.deletionTimestamp \u003d deletionTimeStamp;"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.softDeletedCourses.push(archivedCourseToBeRemoved);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    }"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "  }"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "niqiukun"
        },
        "content": ""
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "   * Permanently deletes a soft-deleted course in Recycle Bin."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "  onDeletePermanently(courseId: string): void {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CoursePermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.courseId \u003d courseId;"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseService.deleteCourse(courseId).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.removeCourse(this.softDeletedCourses, courseId);"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(`The course ${courseId} has been permanently deleted.`);"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores a soft-deleted course from Recycle Bin."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "  onRestore(courseId: string): void {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseId) {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Course ${courseId} is not found!`);"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.delete(\u0027/bin/course\u0027, paramMap).subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(resp.message);"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "   * Permanently deletes all soft-deleted courses in Recycle Bin."
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "  onDeleteAll(): void {"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "    const modalRef: NgbModalRef \u003d this.modalService.open(CoursePermanentDeletionConfirmModalComponent);"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.componentInstance.isDeleteAll \u003d true;"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    modalRef.result.then(() \u003d\u003e {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "      const deleteRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.softDeletedCourses.forEach((courseToDelete: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "        deleteRequests.push(this.courseService.deleteCourse(courseToDelete.course.courseId));"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "      forkJoin(deleteRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        this.softDeletedCourses \u003d [];"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(\u0027All courses have been permanently deleted.\u0027);"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "    }, () \u003d\u003e {});"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restores all soft-deleted courses from Recycle Bin."
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "  onRestoreAll(): void {"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": "    const restoreRequests: Observable\u003cMessageOutput\u003e[] \u003d [];"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    this.softDeletedCourses.forEach((courseToRestore: CourseModel) \u003d\u003e {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "      restoreRequests.push(this.courseService.restoreCourse(courseToRestore.course.courseId));"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(restoreRequests).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructorCourses();"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(\u0027All courses have been restored.\u0027);"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the courses table"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "  sortCoursesEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortBy \u003d by;"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortOrder \u003d"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "    this.activeCourses.sort(this.sortBy(by));"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a function to determine the order of sort"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": "  sortBy(by: SortBy):"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      ((a: CourseModel , b: CourseModel) \u003d\u003e number) {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "    return (a: CourseModel, b: CourseModel): number \u003d\u003e {"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_ID:"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseId ? a.course.courseId : \u0027\u0027;"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseId ? b.course.courseId : \u0027\u0027;"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_NAME:"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseName;"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseName;"
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.CREATION_DATE:"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.creationTimestamp.toString();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.creationTimestamp.toString();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.ASC) {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "        return strA.localeCompare(strB);"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC) {"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "        return strB.localeCompare(strA);"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 81,
      "-": 350
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1\u003eHome\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card bg-light mb-4\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"form-group\"\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"input-group\"\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cinput type\u003d\"text\" class\u003d\"form-control\" [(ngModel)]\u003d\"studentSearchkey\" (keyup.enter)\u003d\"search()\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "               placeholder\u003d\"e.g. Charles Shultz, charles@gmail.com\"\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"input-group-append\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-primary\" (click)\u003d\"search()\"\u003eSearch\u003c/button\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-template #noCourseMessage class\u003d\"bg-light-blue\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cng-container *ngIf\u003d\"hasCoursesLoaded\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    New to TEAMMATES? You may wish to have a look at our \u003ca routerLink\u003d\"/web/front/help/instructor\"\u003eGetting Started Guide\u003c/a\u003e."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    A video tour is also available in our \u003ca routerLink\u003d\"/web\"\u003ehome page\u003c/a\u003e."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-template\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "\u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-4\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ca routerLink\u003d\"/web/instructor/courses\" class\u003d\"btn btn-primary text-white\" [queryParams]\u003d\"{isAddNewCourse: true}\"\u003eAdd New Course\u003c/a\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-8\" *ngIf\u003d\"courseTabModels.length \u003e 0\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"float-right\"\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ch5 class\u003d\"d-inline\"\u003e\u003cstrong\u003e Sort By: \u003c/strong\u003e\u003c/h5\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"btn-group\" data-toggle\u003d\"buttons\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_ID)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_ID)\"\u003eCourse ID\u003c/button\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_NAME)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_NAME)\"\u003eCourse Name\u003c/button\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-light\" [disabled]\u003d\"isSelectedForSorting(SortBy.COURSE_CREATION_DATE)\" (click)\u003d\"sortCoursesBy(SortBy.COURSE_CREATION_DATE)\"\u003eCreation Date\u003c/button\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv *ngIf\u003d\"courseTabModels.length \u003e 0; else noCourseMessage\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card margin-bottom-15px\" *ngFor\u003d\"let courseTabModel of courseTabModels; let idx \u003d index\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-header bg-primary text-white course-tab-header\" (click)\u003d\"courseTabModel.isTabExpanded \u003d handleClick($event, courseTabModel); this.loadFeedbackSessions(courseTabModel);\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-6\"\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cb\u003e[{{ courseTabModel.course.courseId }}]: {{ courseTabModel.course.courseName }}\u003c/b\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"col-sm-6\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"float-right\" *ngIf\u003d\"courseTabModel.isAjaxSuccess; else errorLoadingFeedbackSessions\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Students \u003c/button\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyStudent\"\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "                     ngbTooltip\u003d\"Enroll student into the course\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "                     routerLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Enroll"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-info btn-sm dropdown-item\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"View, edit and send invitation emails to the students in the course\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\"/web/instructor/courses/details\" [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Instructors \u003c/button\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu \u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Edit course information and instructor list\""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Sessions \u003c/button\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Add a feedback session for the course\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/sessions\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e Add"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cspan ngbDropdown class\u003d\"padding-right-10px\"\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cbutton class\u003d\"btn btn-light btn-sm\" ngbDropdownToggle\u003e Course \u003c/button\u003e"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv ngbDropdownMenu\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Archive the course so that it will not be shown in the home page any more (you can still access it from the \u0027Courses\u0027 tab)\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                   (click)\u003d\"openModal(courseArchiveModal); $event.stopPropagation()\"\u003e Archive"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                   ngbTooltip\u003d\"Edit course information and instructor list\""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                   routerLink\u003d\u0027/web/instructor/courses/edit\u0027 [queryParams]\u003d\"{courseid: courseTabModel.course.courseId}\"\u003e View / Edit"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/a\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003cng-container *ngIf\u003d\"courseTabModel.instructorPrivilege.canModifyCourse\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003ca class\u003d\"btn btn-light btn-sm dropdown-item\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                     ngbTooltip\u003d\"Delete the course and its corresponding students and sessions\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                     (click)\u003d\"openModal(courseDeleteModal); $event.stopPropagation()\"\u003e Delete"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "                  \u003c/a\u003e"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/span\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-down\" *ngIf\u003d\"!courseTabModel.isTabExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003ci class\u003d\"fas fa-chevron-up\" *ngIf\u003d\"courseTabModel.isTabExpanded\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #errorLoadingFeedbackSessions\u003e"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "      Error loading feedback sessions. Click here to retry."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #courseDeleteModal let-modal\u003e"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-header bg-warning\"\u003e"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Warning: Confirm moving course to Recycle Bin \u003c/h5\u003e"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "        Are you sure you want to delete the course: {{courseTabModel.course.courseId}}?"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "        This action can be reverted by going to the \"Courses\" tab and restoring the desired course(s)."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"deleteCourse(courseTabModel.course.courseId); modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cng-template #courseArchiveModal let-modal\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-header bg-info\"\u003e"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch5 class\u003d\"modal-title\"\u003e\u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Confirm archiving course \u003c/h5\u003e"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"close\" (click)\u003d\"modal.dismiss()\"\u003e"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ci class\u003d\"fas fa-times\"\u003e\u003c/i\u003e"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-body\"\u003e"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        Are you sure you want to archive {{courseTabModel.course.courseId}}?"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "        This action can be reverted by going to the \"Courses\" tab and unarchiving the desired course(s)."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"modal-footer\"\u003e"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-light\" (click)\u003d\"modal.dismiss()\"\u003eNo, cancel the operation\u003c/button\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton type\u003d\"button\" class\u003d\"btn btn-warning\" (click)\u003d\"archiveCourse(courseTabModel.course.courseId); modal.close()\"\u003eYes\u003c/button\u003e"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card-body padding-0\" *ngIf\u003d\"courseTabModel.isTabExpanded\"\u003e"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ctm-sessions-table"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "          [sessionsTableRowModels]\u003d\"courseTabModel.sessionsTableRowModels\" [sessionsTableRowModelsSortBy]\u003d\"courseTabModel.sessionsTableRowModelsSortBy\""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          [sessionsTableRowModelsSortOrder]\u003d\"courseTabModel.sessionsTableRowModelsSortOrder\" [courseCandidates]\u003d\"courseCandidates\""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          [headerColorScheme]\u003d\"SessionsTableHeaderColorScheme.WHITE\" [columnsToShow]\u003d\"[ SessionsTableColumn.START_DATE, SessionsTableColumn.END_DATE ]\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          (sortSessionsTableRowModelsEvent)\u003d\"sortSessionsTableRowModelsEvent(idx, $event)\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "          (loadResponseRateEvent)\u003d\"loadResponseRateEventHandler(idx, $event)\" (editSessionEvent)\u003d\"editSessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          (moveSessionToRecycleBinEvent)\u003d\"moveSessionToRecycleBinEventHandler(idx, $event)\" (copySessionEvent)\u003d\"copySessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          (submitSessionAsInstructorEvent)\u003d\"submitSessionAsInstructorEventHandler(idx, $event)\" (viewSessionResultEvent)\u003d\"viewSessionResultEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "          (publishSessionEvent)\u003d\"publishSessionEventHandler(idx, $event)\" (unpublishSessionEvent)\u003d\"unpublishSessionEventHandler(idx, $event)\""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "          (resendResultsLinkToStudentsEvent)\u003d\"resendResultsLinkToStudentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          (sendRemindersToStudentsEvent)\u003d\"sendRemindersToStudentsEventHandler(courseTabModel.sessionsTableRowModels[$event])\"\u003e\u003c/tm-sessions-table\u003e"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 1,
      "-": 157
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-home-page/instructor-home-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackQuestionsService } from \u0027../../../services/feedback-questions.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  CourseArchive,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  InstructorPrivilege,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "import { DEFAULT_INSTRUCTOR_PRIVILEGE } from \u0027../../../types/instructor-privilege\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  CopySessionResult,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableRowModel,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/sessions-table/sessions-table-model\u0027;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorSessionModalPageComponent } from \u0027../instructor-session-modal-page.component\u0027;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseTabModel {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorPrivilege: InstructorPrivilege;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModels: SessionsTableRowModel[];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortBy: SortBy;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  sessionsTableRowModelsSortOrder: SortOrder;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  hasPopulated: boolean;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  isAjaxSuccess: boolean;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  isTabExpanded: boolean;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor home page."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-home-page\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-home-page.component.html\u0027,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-home-page.component.scss\u0027],"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorHomePageComponent extends InstructorSessionModalPageComponent implements OnInit {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  private static readonly coursesToLoad: number \u003d 3;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableColumn: typeof SessionsTableColumn \u003d SessionsTableColumn;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  SessionsTableHeaderColorScheme: typeof SessionsTableHeaderColorScheme \u003d SessionsTableHeaderColorScheme;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  studentSearchkey: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorCoursesSortBy: SortBy \u003d SortBy.COURSE_CREATION_DATE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  // data"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  courseTabModels: CourseTabModel[] \u003d [];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "  hasCoursesLoaded: boolean \u003d false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(router: Router,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "              statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "              navigationService: NavigationService,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionsService: FeedbackQuestionsService,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "              modalService: NgbModal,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "              studentService: StudentService,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "              private loadingBarService: LoadingBarService) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    super(router, httpRequestService, statusMessageService, navigationService,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        feedbackSessionsService, feedbackQuestionsService, modalService, studentService);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    // need timezone data for moment()"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCourses();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a list of courses belong to current user."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  get courseCandidates(): Course[] {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.courseTabModels.map((m: CourseTabModel) \u003d\u003e m.course);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles click events on the course tab model."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "  handleClick(event: Event, courseTabModel: CourseTabModel): boolean {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    if (event.target \u0026\u0026"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        !(event.target as HTMLElement).className.includes(\u0027dropdown-toggle\u0027)) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "      return !courseTabModel.isTabExpanded;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    return courseTabModel.isTabExpanded;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "   * Redirect to the search page and query the search"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "  search(): void {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    this.router.navigate([\u0027web/instructor/search\u0027], {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      queryParams: { studentSearchkey: this.studentSearchkey },"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the modal for different buttons and link."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "   * Archives the entire course from the instructor"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  archiveCourse(courseId: string): void {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.changeArchiveStatus(courseId, {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      archiveStatus: true,"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((courseArchive: CourseArchive) \u003d\u003e {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.courseTabModels \u003d this.courseTabModels.filter((model: CourseTabModel) \u003d\u003e {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return model.course.courseId !\u003d\u003d courseId;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      });"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage(`The course ${courseArchive.courseId} has been archived."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "          You can retrieve it from the Courses page.`);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the entire course from the instructor"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCourse(courseId: string): void {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.binCourse(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      this.courseTabModels \u003d this.courseTabModels.filter((model: CourseTabModel) \u003d\u003e {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "        return model.course.courseId !\u003d\u003d courseId;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "niqiukun"
        },
        "content": "      });"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "          `The course ${course.courseId} has been deleted. You can restore it from the Recycle Bin manually.`);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses of current instructor."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourses(): void {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseTabModels \u003d [];"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingBarService.showLoadingBar();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/courses\u0027, {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "    }).pipe(finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadingBarService.hideLoadingBar();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "      this.hasCoursesLoaded \u003d true;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "    })).subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "      courses.courses.forEach((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "        const model: CourseTabModel \u003d {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "          course,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "          instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "          sessionsTableRowModels: [],"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "          isTabExpanded: false,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "          isAjaxSuccess: true,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "          hasPopulated: false,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "          sessionsTableRowModelsSortBy: SortBy.NONE,"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "          sessionsTableRowModelsSortOrder: SortOrder.ASC,"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "        this.courseTabModels.push(model);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "        this.updateCourseInstructorPrivilege(model);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      this.sortCoursesBy(this.instructorCoursesSortBy);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates the instructor privilege in {@code CourseTabModel}."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  updateCourseInstructorPrivilege(model: CourseTabModel): void {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: model.course.courseId,"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "      model.instructorPrivilege \u003d instructorPrivilege;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the feedback session in the course."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSessions(model: CourseTabModel): void {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!model.hasPopulated) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackSessionsService.getFeedbackSessionsForInstructor(model.course.courseId)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "          .subscribe((response: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            response.feedbackSessions.forEach((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "              const m: SessionsTableRowModel \u003d {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                feedbackSession,"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                responseRate: \u0027\u0027,"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "                isLoadingResponseRate: false,"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                instructorPrivilege: DEFAULT_INSTRUCTOR_PRIVILEGE,"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "              };"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "              model.sessionsTableRowModels.push(m);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "              this.updateInstructorPrivilege(m);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "            model.hasPopulated \u003d true;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "            if (!model.isAjaxSuccess) {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "              model.isAjaxSuccess \u003d true;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "          }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "            model.isAjaxSuccess \u003d false;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks the option selected to sort courses."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  isSelectedForSorting(by: SortBy): boolean {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.instructorCoursesSortBy \u003d\u003d\u003d by;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the courses according to selected option."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  sortCoursesBy(by: SortBy): void {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    this.instructorCoursesSortBy \u003d by;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this.courseTabModels.length \u003e 1) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseTabModels.sort(this.sortPanelsBy(by));"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadLatestCourses();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads and expand the latest number of courses."
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "  loadLatestCourses(): void {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "    for (let i: number \u003d 0; i \u003c this.courseTabModels.length; i +\u003d 1) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "      if (i \u003e\u003d InstructorHomePageComponent.coursesToLoad) {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseTabModels[i].isTabExpanded \u003d true;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackSessions(this.courseTabModels[i]);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the panels of courses in order."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "  sortPanelsBy(by: SortBy):"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "      ((a: { course: Course }, b: { course: Course }) \u003d\u003e number) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "    return ((a: { course: Course }, b: { course: Course }): number \u003d\u003e {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_NAME:"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseName;"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseName;"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_ID:"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.course.courseId;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.course.courseId;"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.COURSE_CREATION_DATE:"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d String(a.course.creationTimestamp);"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d String(b.course.creationTimestamp);"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "      return strA.localeCompare(strB);"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the list of feedback session row."
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "  sortSessionsTableRowModelsEvent(tabIndex: number, by: SortBy): void {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "    const tab: CourseTabModel \u003d this.courseTabModels[tabIndex];"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModelsSortBy \u003d by;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "    // reverse the sort order"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModelsSortOrder \u003d"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "        tab.sessionsTableRowModelsSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    tab.sessionsTableRowModels.sort(this.sortModelsBy(by, tab.sessionsTableRowModelsSortOrder));"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads response rate of a feedback session."
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "  loadResponseRateEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadResponseRate(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "  editSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "   * Moves the feedback session to the recycle bin."
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "  moveSessionToRecycleBinEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "    const model: SessionsTableRowModel \u003d this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex];"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: model.feedbackSession.courseId,"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: model.feedbackSession.feedbackSessionName,"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.put(\u0027/bin/session\u0027, paramMap)"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "          this.courseTabModels[tabIndex].sessionsTableRowModels.splice("
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "              this.courseTabModels[tabIndex].sessionsTableRowModels.indexOf(model), 1);"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "              \"The feedback session has been deleted. You can restore it from the \u0027Sessions\u0027 tab.\");"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": "   * Edits the feedback session."
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "  copySessionEventHandler(tabIndex: number, result: CopySessionResult): void {"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "    this.copySession(this.courseTabModels[tabIndex].sessionsTableRowModels[result.sessionToCopyRowIndex], result);"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the feedback session as instructor."
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "  submitSessionAsInstructorEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "    this.submitSessionAsInstructor(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "   * Views the result of a feedback session."
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "  viewSessionResultEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    this.viewSessionResult(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "   * Publishes a feedback session."
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "  publishSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "    this.publishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "   * Unpublishes a feedback session."
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "  unpublishSessionEventHandler(tabIndex: number, rowIndex: number): void {"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "    this.unpublishSession(this.courseTabModels[tabIndex].sessionsTableRowModels[rowIndex]);"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "niqiukun": 6,
      "-": 365
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ch1\u003eStudent List\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cp\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "  This page gives the student details for all your courses. Expand the cards below to view your students."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "  Use the \u003ca routerLink\u003d\"/web/instructor/search\"\u003esearch function\u003c/a\u003e if you need to filter for a specific"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  student."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/p\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "\u003chr/\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cng-container\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv *ngFor\u003d\"let courseTab of courseTabList\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-header justify-content-between course-card-header\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        (click)\u003d\"toggleCard(courseTab)\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cdiv class\u003d\"row course-card-content\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-11\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003ch5\u003e\u003ci class\u003d\"fas fa-chalkboard-teacher\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "                style\u003d\"color: white\"\u003e\u003c/i\u003e\u0026nbsp;[{{courseTab.course.courseId}}]: {{courseTab.course.courseName}}\u003c/h5\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"col-sm-1\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton *ngIf\u003d\"!courseTab.hasTabExpanded\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "              class\u003d\"btn float-right\"\u003e\u003ci class\u003d\"fas fa-chevron-circle-down fa-lg\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "              style\u003d\"color: white;\"\u003e\u003c/i\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cbutton *ngIf\u003d\"courseTab.hasTabExpanded\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "              class\u003d\"btn float-right\"\u003e\u003ci class\u003d\"fas fa-chevron-circle-up fa-lg\" style\u003d\"color: white;\"\u003e\u003c/i\u003e\u003c/button\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"card-body\" *ngIf\u003d\"courseTab.hasTabExpanded\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cng-container *ngIf\u003d\"courseTab.stats.numOfStudents \u003e 0, else noStudentsTemplate\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cdiv class\u003d\"card-deck\" *ngIf\u003d\"courseTab.stats\"\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch2 class\u003d\"card-title\"\u003e{{courseTab.stats.numOfStudents}}\u003c/h2\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch4 class\u003d\"card-text\"\u003eStudents\u003c/h4\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch2 class\u003d\"card-title\"\u003e{{courseTab.stats.numOfSections}}\u003c/h2\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch4 class\u003d\"card-text\"\u003eSections\u003c/h4\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003cdiv class\u003d\"card\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch2 class\u003d\"card-title\"\u003e{{courseTab.stats.numOfTeams}}\u003c/h2\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "                \u003ch4 class\u003d\"card-text\"\u003eTeams\u003c/h4\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "              \u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "            \u003c/div\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003chr/\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbutton class\u003d\"btn btn-success\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "            routerLink\u003d\"/web/instructor/courses/enroll\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "            [queryParams]\u003d\"{courseid: courseTab.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "          Enroll Students"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/button\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003ctm-student-list"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "          [courseId]\u003d\"courseTab.course.courseId\""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "          [sections]\u003d\"courseTab.studentListSectionDataList\" [useGrayHeading]\u003d\"false\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          [enableRemindButton]\u003d\"true\""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          (removeStudentFromCourseEvent)\u003d\"removeStudentFromCourse(courseTab, $event)\"\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "          \u003c/tm-student-list\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/ng-container\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/div\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cng-template #noStudentsTemplate\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003ch4\u003eThere are no students in this course.\u003c/h4\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003cbutton class\u003d\"btn btn-success\" routerLink\u003d\"/web/instructor/courses/enroll\" [queryParams]\u003d\"{courseid: courseTab.course.courseId}\"\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "          Enroll Students"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003c/button\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/ng-template\u003e"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/ng-container\u003e"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 79
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-list-page/instructor-student-list-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { Course, Courses, InstructorPrivilege, Student, Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentListSectionData, StudentListStudentData } from \u0027../student-list/student-list-section-data\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "interface Statistic {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfStudents: number;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfSections: number;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  numOfTeams: number;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentIndexedData {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  [key: string]: Student[];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "interface CourseTab {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  studentListSectionDataList: StudentListSectionData[];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  hasTabExpanded: boolean;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  hasStudentLoaded: boolean;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  stats: Statistic;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor student list page."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-student-list-page\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-student-list-page.component.html\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-student-list-page.component.scss\u0027],"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorStudentListPageComponent implements OnInit {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  courseTabList: CourseTab[] \u003d [];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              private loadingBarService: LoadingBarService) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadCourses();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads courses of current instructor."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourses(): void {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingBarService.showLoadingBar();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getAllCoursesAsInstructor(\u0027active\u0027)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "        .pipe(finalize(() \u003d\u003e this.loadingBarService.hideLoadingBar()))"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((courses: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "          courses.courses.forEach((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "            const courseTab: CourseTab \u003d {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "              course,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "              studentListSectionDataList: [],"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "              hasTabExpanded: false,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "              hasStudentLoaded: false,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "              stats: {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "                numOfSections: 0,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                numOfStudents: 0,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                numOfTeams: 0,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "              },"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "            this.courseTabList.push(courseTab);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "   * Toggles specific card and loads students if needed"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  toggleCard(courseTab: CourseTab): void {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "    courseTab.hasTabExpanded \u003d !courseTab.hasTabExpanded;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!courseTab.hasStudentLoaded) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudents(courseTab);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      courseTab.hasStudentLoaded \u003d true;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads students of a specified course."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudents(courseTab: CourseTab): void {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourse(courseTab.course.courseId)"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "          const sections: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            const term: string \u003d x.sectionName;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "            (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            return acc;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "          }, {});"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          const teams: StudentIndexedData \u003d students.students.reduce((acc: StudentIndexedData, x: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            const term: string \u003d x.teamName;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            (acc[term] \u003d acc[term] || []).push(x);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "            return acc;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "          }, {});"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          courseTab.stats \u003d {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfStudents: students.students.length,"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfSections: Object.keys(sections).length,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "            numOfTeams: Object.keys(teams).length,"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "          Object.keys(sections).forEach((key: string) \u003d\u003e {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "            const studentsInSection: Student[] \u003d sections[key];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "            const data: StudentListStudentData[] \u003d [];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "            studentsInSection.forEach((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "              const studentData: StudentListStudentData \u003d {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "                name : student.name,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "                status : student.joinState,"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "                email : student.email,"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "                team : student.teamName,"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "              };"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "              data.push(studentData);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadPrivilege(courseTab, key, data);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e { this.statusMessageService.showErrorMessage(resp.error.message); });"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads privilege of an instructor for a specified course and section."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPrivilege(courseTab: CourseTab, sectionName: string, students: StudentListStudentData[]): void {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/instructor/privilege\u0027, {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseTab.course.courseId,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionname: sectionName,"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((instructorPrivilege: InstructorPrivilege) \u003d\u003e {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "      const sectionData: StudentListSectionData \u003d {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "        sectionName,"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "        students,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToViewStudentInSection : instructorPrivilege.canViewStudentInSections,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "        isAllowedToModifyStudent : instructorPrivilege.canModifyStudent,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "      courseTab.studentListSectionDataList.push(sectionData);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Removes the student from course."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  removeStudentFromCourse(courseTab: CourseTab, studentEmail: string): void {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    this.courseService.removeStudentFromCourse(courseTab.course.courseId, studentEmail).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.statusMessageService"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          .showSuccessMessage(`Student is successfully deleted from course \"${courseTab.course.courseId}\"`);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      courseTab.studentListSectionDataList.forEach("
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          (section: StudentListSectionData) \u003d\u003e {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "            section.students \u003d section.students.filter("
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "                (student: StudentListStudentData) \u003d\u003e student.email !\u003d\u003d studentEmail);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "          });"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    });"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 17,
      "-": 155
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModule } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "hcwong"
        },
        "content": "import { Gender, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { InstructorStudentRecordsPageComponent } from \u0027./instructor-student-records-page.component\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-student-profile\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "class StudentProfileStubComponent {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile | undefined;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() photoUrl: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() hideMoreInfo: boolean \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({ selector: \u0027tm-more-info\u0027, template: \u0027\u0027 })"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "class MoreInfoStubComponent {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() moreInfoText: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027InstructorStudentRecordsPageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: InstructorStudentRecordsPageComponent;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cInstructorStudentRecordsPageComponent\u003e;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        InstructorStudentRecordsPageComponent,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfileStubComponent,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        MoreInfoStubComponent,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        NgbModule,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          provide: ActivatedRoute,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          useValue: {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            queryParams: of({ courseid: \u0027su1337\u0027, studentemail: \u0027punk@punk.com\u0027 }),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          },"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "hcwong"
        },
        "content": "        },"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(InstructorStudentRecordsPageComponent);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  it(\u0027should snap with populated fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    const studentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      name: \u0027John Doe\u0027,"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      shortName: \u0027JD\u0027,"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      email: \u0027jd@jd.com\u0027,"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      institute: \u0027Area51\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      nationality: \u0027Antarctican\u0027,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      gender: Gender.OTHER,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    };"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    component.studentProfile \u003d studentProfile;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    component.courseId \u003d \u0027su1337\u0027;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  });"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "hcwong"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  it(\u0027should output a correctly formatted url string\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "hcwong"
        },
        "content": "    expect(component.photoUrl)"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "hcwong"
        },
        "content": "      .toEqual(\u0027http://localhost:8080/webapi/student/profilePic?courseid\u003dsu1337\u0026studentemail\u003dpunk@punk.com\u0027);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  });"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "-": 52,
      "hcwong": 37
    }
  },
  {
    "path": "src/web/app/pages-instructor/instructor-student-records-page/instructor-student-records-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027../../../services/student-profile.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { Gender, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "interface Session {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  isCollapsed: boolean;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " * Instructor student records page."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-instructor-student-records-page\u0027,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./instructor-student-records-page.component.html\u0027,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./instructor-student-records-page.component.scss\u0027],"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "export class InstructorStudentRecordsPageComponent implements OnInit {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  studentEmail: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  studentProfile: StudentProfile \u003d {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    shortName: \u0027\u0027,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    institute: \u0027\u0027,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    nationality: \u0027\u0027,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    gender: Gender.OTHER,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  sessions: Session[] \u003d [];"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  photoUrl: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentProfileService: StudentProfileService) { }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      this.studentEmail \u003d queryParams.studentemail;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudentRecords();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      this.photoUrl"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "hcwong"
        },
        "content": "          \u003d `${environment.backendUrl}/webapi/student/profilePic?`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "hcwong"
        },
        "content": "            + `courseid\u003d${this.courseId}\u0026studentemail\u003d${this.studentEmail}`;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the student\u0027s records based on the given course ID and email."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentRecords(): void {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentProfileService.getStudentProfile(this.studentEmail, this.courseId).subscribe((resp: StudentProfile) \u003d\u003e {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      this.studentProfile \u003d resp;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 63,
      "hcwong": 2
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-list/student-list.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "import {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  Component, DoCheck, EventEmitter, Input, IterableDiffer, IterableDiffers, OnInit, Output,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "} from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { NavigationService } from \u0027../../../services/navigation.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { JoinState, MessageOutput } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { JoinStatePipe } from \u0027./join-state.pipe\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  StudentListSectionData,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  StudentListStudentData,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./student-list-section-data\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": " * Flattened data which contains details about a student and their section."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * The data is flattened to allow sorting of the table."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "interface FlatStudentListData {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  name: string;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  email: string;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  status: JoinState;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  team: string;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  photoUrl?: string;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  sectionName: string;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  isAllowedToViewStudentInSection: boolean;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  isAllowedToModifyStudent: boolean;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Sort criteria for the students table."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "enum SortBy {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "   * Nothing."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  NONE,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   * Section Name."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  SECTION_NAME,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   * Team name."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  TEAM_NAME,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   * Student Name."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  STUDENT_NAME,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   * Status."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  STATUS,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * Email."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  EMAIL,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": " * Sort order for the students table."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "enum SortOrder {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   * Descending sort order."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  DESC,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "   * Ascending sort order"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  ASC,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": " * A table displaying a list of students from a course, with buttons to view/edit/delete students etc."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-list\u0027,"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-list.component.html\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-list.component.scss\u0027],"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentListComponent implements OnInit, DoCheck {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() useGrayHeading: boolean \u003d true;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() listOfStudentsToHide: string[] \u003d [];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() isHideTableHead: boolean \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() enableRemindButton: boolean \u003d false;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  // The input sections data from parent."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() sections: StudentListSectionData[] \u003d [];"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  @Output() removeStudentFromCourseEvent: EventEmitter\u003cstring\u003e \u003d new EventEmitter();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "  // The flattened students list derived from the sections list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  // The sections data is flattened to allow sorting of the list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  students: FlatStudentListData[] \u003d [];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortOrder: SortOrder \u003d SortOrder.ASC;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  tableSortBy: SortBy \u003d SortBy.NONE;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  SortBy: typeof SortBy \u003d SortBy;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  SortOrder: typeof SortOrder \u003d SortOrder;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  JoinState: typeof JoinState \u003d  JoinState;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  private readonly _differ: IterableDiffer\u003cany\u003e;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private router: Router,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "              private navigationService: NavigationService,"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "              private differs: IterableDiffers) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    this._differ \u003d this.differs.find(this.sections).create();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  ngDoCheck(): void {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    if (this._differ) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "      const changes: any \u003d this._differ.diff(this.sections);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "      if (changes) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "        this.students \u003d this.mapStudentsFromSectionData(this.sections);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "   * Flatten section data."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  mapStudentsFromSectionData(sections: StudentListSectionData[]): FlatStudentListData[] {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    const students: FlatStudentListData[] \u003d [];"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "    sections.forEach((section: StudentListSectionData) \u003d\u003e"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        section.students.forEach((student: StudentListStudentData) \u003d\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            students.push({"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "              name: student.name,"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "              email: student.email,"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "              status: student.status,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "              team: student.team,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "              photoUrl: student.photoUrl,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "              sectionName: section.sectionName,"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "              isAllowedToModifyStudent: section.isAllowedToModifyStudent,"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "              isAllowedToViewStudentInSection: section.isAllowedToViewStudentInSection,"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "        ),"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "    return students;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns whether this course are divided into sections"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "  hasSection(): boolean {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "    return (this.students.some((student: FlatStudentListData) \u003d\u003e"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        student.sectionName !\u003d\u003d \u0027None\u0027));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "   * Function to be passed to ngFor, so that students in the list is tracked by email"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  trackByFn(_index: number, item: FlatStudentListData): any {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "    return item.email;"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "   * Load the profile picture of a student"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPhoto(student: FlatStudentListData): void {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    student.photoUrl \u003d"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "        `${environment.backendUrl}/webapi/student/profilePic?courseid\u003d${this.courseId}\u0026studentemail\u003d${student.email}`;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(student: FlatStudentListData): void {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    student.photoUrl \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "   * Open the student delete confirmation modal."
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  openModal(content: any): void {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(content);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "   * Remind the student from course."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "  remindStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.remindStudentForJoin(this.courseId, studentEmail)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "      .subscribe((resp: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        this.navigationService.navigateWithSuccessMessage(this.router,"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "            `/web/instructor/courses/details?courseid\u003d${this.courseId}`, resp.message);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "   * Removes the student from course."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "  removeStudentFromCourse(studentEmail: string): void {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    this.removeStudentFromCourseEvent.emit(studentEmail);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "   * Determines which row in the studentTable should be hidden."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "  isStudentToHide(studentEmail: string): boolean {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.listOfStudentsToHide.indexOf(studentEmail) \u003e -1;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the student list"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "  sortStudentListEvent(by: SortBy): void {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortBy \u003d by;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "    this.tableSortOrder \u003d"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC ? SortOrder.ASC : SortOrder.DESC;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "    this.students.sort(this.sortBy(by));"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "   * Returns a function to determine the order of sort"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": "  sortBy(by: SortBy):"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "      ((a: FlatStudentListData , b: FlatStudentListData) \u003d\u003e number) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "    const joinStatePipe: JoinStatePipe \u003d new JoinStatePipe();"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "    return (a: FlatStudentListData, b: FlatStudentListData): number \u003d\u003e {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "      let strA: string;"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      let strB: string;"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (by) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.SECTION_NAME:"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.sectionName;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.sectionName;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.STUDENT_NAME:"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.name;"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.name;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.TEAM_NAME:"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.team;"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.team;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.EMAIL:"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d a.email;"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d b.email;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "        case SortBy.STATUS:"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d joinStatePipe.transform(a.status);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d joinStatePipe.transform(b.status);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "          strA \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": "          strB \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.ASC) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": "        return strA.localeCompare(strB);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.tableSortOrder \u003d\u003d\u003d SortOrder.DESC) {"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "        return strB.localeCompare(strA);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "      return 0;"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 6,
      "-": 273
    }
  },
  {
    "path": "src/web/app/pages-instructor/student-profile/student-profile.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * A table displaying a details from a student\u0027s profile and a modal to view the more info field."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-profile\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-profile.component.html\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-profile.component.scss\u0027],"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentProfileComponent implements OnInit {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  Gender: typeof Gender \u003d Gender; // enum"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() photoUrl: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  @Input() studentProfile: StudentProfile | undefined;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor() { }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(): void {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    this.photoUrl \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 28
    }
  },
  {
    "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.html",
    "fileType": "html",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003cdiv class\u003d\"bg-light\" *ngIf\u003d\"moderatedPerson\"\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center text-break\"\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch5\u003eYou are moderating responses for"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.STUDENT_SUBMISSION\"\u003estudent\u003c/span\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_SUBMISSION\"\u003einstructor\u003c/span\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "      {{ personName }} ({{ moderatedPerson }})"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" *ngIf\u003d\"!isModerationHintExpanded\" (click)\u003d\"isModerationHintExpanded \u003d true\"\u003e[More]\u003c/button\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cbutton type\u003d\"button\" class\u003d\"btn btn-link\" *ngIf\u003d\"isModerationHintExpanded\" (click)\u003d\"isModerationHintExpanded \u003d false\"\u003e[Less]\u003c/button\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h5\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv *ngIf\u003d\"isModerationHintExpanded\" class\u003d\"text-left\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cp\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "        The page below resembles the submission page as seen by the respondent {{ personName }} ({{ moderatedPerson }})."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        You can use it to moderate responses submitted by the respondent or submit responses on behalf of the respondent."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/p\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cp\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "        Note that due to visibility settings, questions that are not supposed to show responses to instructors (i.e you) are not shown in the page below."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003c/p\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003cdiv class\u003d\"bg-light\" *ngIf\u003d\"previewAsPerson\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "hcwong"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center text-break\"\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003ch4\u003ePreviewing Session as"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.STUDENT_SUBMISSION\"\u003estudent\u003c/span\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cspan *ngIf\u003d\"intent \u003d\u003d\u003d Intent.INSTRUCTOR_SUBMISSION\"\u003einstructor\u003c/span\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      {{ personName }} ({{ previewAsPerson }})"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/h4\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "hcwong"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"regKey\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      You are submitting feedback as {{ personName }}. You may submit feedback for sessions that are currently open and view results without logging in. To access other features you need to"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ca href\u003d\"#\" (click)\u003d\"joinCourseForUnregisteredStudent(); $event.preventDefault()\"\u003elogin using a Google account\u003c/a\u003e (recommended)."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"feedbackSessionSubmissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN\"\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12\"\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-primary\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003ci class\u003d\"fas fa-exclamation-circle\"\u003e\u003c/i\u003e Note that you can use the Submit button to save responses already entered, and continue to answer remaining questions after that. You may also edit your submission any number of times before the closing time of this session."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"card card-plain\"\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"card-body\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eCourse ID:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ courseId }}\u003c/div\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eSession:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ feedbackSessionName }}\u003c/div\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eOpening time:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ formattedSessionOpeningTime }}\u003c/div\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eClosing time:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\"\u003e{{ formattedSessionClosingTime }}\u003c/div\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"row\"\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-2 text-right\"\u003e\u003cb\u003eInstructions:\u003c/b\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      \u003cdiv class\u003d\"col-5\" [innerHTML]\u003d\"feedbackSessionInstructions | safeHtml\"\u003e\u003c/div\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbr/\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "\u003ctm-question-submission-form *ngFor\u003d\"let questionSubmissionForm of questionSubmissionForms; let i \u003d index; trackBy: trackQuestionSubmissionFormByFn\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                             [attr.id]\u003d\"questionSubmissionForm.feedbackQuestionId\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                             [(formModel)]\u003d\"questionSubmissionForms[i]\" [formMode]\u003d\"getQuestionSubmissionFormMode(questionSubmissionForm)\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                             [isDisabled]\u003d\"isSubmissionFormsDisabled\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "\u003e\u003c/tm-question-submission-form\u003e"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cbr/\u003e"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"!hasAnyResponseToSubmit\"\u003e"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center\"\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cdiv class\u003d\"alert alert-info\" role\u003d\"alert\"\u003e"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      There are no questions for you to answer here!"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003c/div\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "\u003cdiv class\u003d\"row\" *ngIf\u003d\"hasAnyResponseToSubmit\"\u003e"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center\"\u003e"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003clabel\u003e\u003cinput type\u003d\"checkbox\" [(ngModel)]\u003d\"shouldSendConfirmationEmail\" [disabled]\u003d\"isSubmissionFormsDisabled\"\u003e Send me a confirmation email\u003c/label\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003cdiv class\u003d\"col-12 text-center\"\u003e"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003cbutton type\u003d\"submit\" class\u003d\"btn btn-primary\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "            ngbTooltip\u003d\"You can save your responses at any time and come back later to continue.\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "            (click)\u003d\"saveFeedbackResponses()\" [disabled]\u003d\"isSavingResponses || isSubmissionFormsDisabled\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "    \u003e\u003ctm-ajax-loading *ngIf\u003d\"isSavingResponses\"\u003e\u003c/tm-ajax-loading\u003eSubmit Feedback\u003c/button\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  \u003c/div\u003e"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "\u003c/div\u003e"
      }
    ],
    "authorContributionMap": {
      "-": 95,
      "hcwong": 6
    }
  },
  {
    "path": "src/web/app/pages-session/session-submission-page/session-submission-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { DOCUMENT } from \u0027@angular/common\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { AfterViewInit, Component, Inject, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import moment from \u0027moment-timezone\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { PageScrollService } from \u0027ngx-page-scroll-core\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable, of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { catchError, finalize, switchMap, tap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackResponsesService } from \u0027../../../services/feedback-responses.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027../../../services/http-request.service\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  ConfirmationResponse,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  ConfirmationResult,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackParticipantType,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestion,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionRecipient,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackQuestionRecipients,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponse,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  Instructor,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  NumberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  Student,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "import { Intent } from \u0027../../../types/api-request\u0027;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponseRecipient,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackResponseRecipientSubmissionFormModel,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionSubmissionFormMode,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  QuestionSubmissionFormModel,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../components/question-submission-form/question-submission-form-model\u0027;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionClosedModalComponent,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-closed-modal/feedback-session-closed-modal.component\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionClosingSoonModalComponent,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-closing-soon-modal/feedback-session-closing-soon-modal.component\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionDeletedModalComponent,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-deleted-modal/feedback-session-deleted-modal.component\u0027;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionNotOpenModalComponent,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./feedback-session-not-open-modal/feedback-session-not-open-modal.component\u0027;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  SavingCompleteModalComponent,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./saving-complete-modal/saving-complete-modal.component\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "interface FeedbackQuestionsResponse {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  questions: FeedbackQuestion[];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "interface FeedbackResponsesResponse {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  responses: FeedbackResponse[];"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": " * Feedback session submission page."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-session-submission-page\u0027,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./session-submission-page.component.html\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./session-submission-page.component.scss\u0027],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "export class SessionSubmissionPageComponent implements OnInit, AfterViewInit {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  // enum"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus: typeof FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  Intent: typeof Intent \u003d Intent;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  courseId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  regKey: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  moderatedPerson: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  previewAsPerson: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "  // the name of the person involved"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  // (e.g. the student name for unregistered student, the name of instructor being moderated)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  personName: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  formattedSessionOpeningTime: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "  formattedSessionClosingTime: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionInstructions: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessionSubmissionStatus: FeedbackSessionSubmissionStatus \u003d FeedbackSessionSubmissionStatus.OPEN;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "  intent: Intent \u003d Intent.STUDENT_SUBMISSION;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  questionSubmissionForms: QuestionSubmissionFormModel[] \u003d [];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  shouldSendConfirmationEmail: boolean \u003d true;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  isSavingResponses: boolean \u003d false;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  isSubmissionFormsDisabled: boolean \u003d false;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  isModerationHintExpanded: boolean \u003d false;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "  moderatedQuestionId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute, private router: Router, private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "              private httpRequestService: HttpRequestService, private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "              private feedbackResponsesService: FeedbackResponsesService, private modalService: NgbModal,"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "              private pageScrollService: PageScrollService, @Inject(DOCUMENT) private document: any) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion(); // import timezone service to load timezone data"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.data.pipe("
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "        tap((data: any) \u003d\u003e {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "          this.intent \u003d data.intent;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap(() \u003d\u003e this.route.queryParams),"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "      this.courseId \u003d queryParams.courseid;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      this.feedbackSessionName \u003d queryParams.fsname;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "      this.regKey \u003d queryParams.key ? queryParams.key : \u0027\u0027;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      this.moderatedPerson \u003d queryParams.moderatedperson ? queryParams.moderatedperson : \u0027\u0027;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "      this.previewAsPerson \u003d queryParams.previewas ? queryParams.previewas : \u0027\u0027;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      this.moderatedQuestionId \u003d queryParams.moderatedquestionId ? queryParams.moderatedquestionId : \u0027\u0027;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.previewAsPerson) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "        // disable submission in the preview mode"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isSubmissionFormsDisabled \u003d true;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadPersonName();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadFeedbackSession();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  ngAfterViewInit(): void {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    setTimeout(() \u003d\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      this.pageScrollService.scroll({"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "        document: this.document,"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollTarget: `#${this.moderatedQuestionId}`,"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollOffset: 70,"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    }, 500);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the name of the person invovled in the submission."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "  loadPersonName(): void {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (this.intent) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "      case Intent.STUDENT_SUBMISSION:"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "        const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: this.courseId,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "          key: this.regKey,"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "          studentemail: this.moderatedPerson || this.previewAsPerson,"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        };"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/student\u0027, paramMap)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "            .subscribe((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "              this.personName \u003d student.name;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "      case Intent.INSTRUCTOR_SUBMISSION:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "        this.httpRequestService.get(\u0027/instructor\u0027, {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": "          courseid: this.courseId,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "          fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "          intent: this.intent,"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          key: this.regKey,"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "          moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "          previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "        }).subscribe((instructor: Instructor) \u003d\u003e {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "          this.personName \u003d instructor.name;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        break;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   * Redirects to join course link for unregistered student."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "  joinCourseForUnregisteredStudent(): void {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    this.router.navigateByUrl(`/web/join?entitytype\u003dstudent\u0026key\u003d${this.regKey}`);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the feedback session information."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackSession(): void {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "      previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "    const TIME_FORMAT: string \u003d \u0027ddd, DD MMM, YYYY, hh:mm A zz\u0027;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/session\u0027, paramMap)"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((feedbackSession: FeedbackSession) \u003d\u003e {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionInstructions \u003d feedbackSession.instructions;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "          this.formattedSessionOpeningTime \u003d"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "              moment(feedbackSession.submissionStartTimestamp)"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "                  .tz(feedbackSession.timeZone).format(TIME_FORMAT);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "          const submissionEndTime: any \u003d moment(feedbackSession.submissionEndTimestamp);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "-"
        },
        "content": "          this.formattedSessionClosingTime \u003d submissionEndTime"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "              .tz(feedbackSession.timeZone).format(TIME_FORMAT);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "          this.feedbackSessionSubmissionStatus \u003d feedbackSession.submissionStatus;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          // don\u0027t show alert modal in moderation"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "          if (!this.moderatedPerson) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "            switch (feedbackSession.submissionStatus) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN:"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "                this.isSubmissionFormsDisabled \u003d true;"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "                this.modalService.open(FeedbackSessionNotOpenModalComponent);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.OPEN:"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "                // closing in 15 minutes"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "                if (moment.utc().add(15, \u0027minutes\u0027).isAfter(submissionEndTime)) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.modalService.open(FeedbackSessionClosingSoonModalComponent);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.CLOSED:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "                this.isSubmissionFormsDisabled \u003d true;"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "                this.modalService.open(FeedbackSessionClosedModalComponent);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": "              case FeedbackSessionSubmissionStatus.GRACE_PERIOD:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "              default:"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "-"
        },
        "content": "          this.loadFeedbackQuestions();"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "-"
        },
        "content": "          if (resp.status \u003d\u003d\u003d 404) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "-"
        },
        "content": "            this.modalService.open(FeedbackSessionDeletedModalComponent);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads feedback questions to submit."
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackQuestions(): void {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: this.courseId,"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "-"
        },
        "content": "      fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "-"
        },
        "content": "      previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/questions\u0027, paramMap)"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackQuestionsResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "          response.questions.forEach((feedbackQuestion: FeedbackQuestion) \u003d\u003e {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": "            const model: QuestionSubmissionFormModel \u003d {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "-"
        },
        "content": "              feedbackQuestionId: feedbackQuestion.feedbackQuestionId,"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "              questionNumber: feedbackQuestion.questionNumber,"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": "              questionBrief: feedbackQuestion.questionBrief,"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDescription: feedbackQuestion.questionDescription,"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "              giverType: feedbackQuestion.giverType,"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientType: feedbackQuestion.recipientType,"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientList: [],"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientSubmissionForms: [],"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "-"
        },
        "content": "              questionType: feedbackQuestion.questionType,"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "-"
        },
        "content": "              questionDetails: feedbackQuestion.questionDetails,"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "-"
        },
        "content": "              numberOfEntitiesToGiveFeedbackToSetting: feedbackQuestion.numberOfEntitiesToGiveFeedbackToSetting,"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "-"
        },
        "content": "              customNumberOfEntitiesToGiveFeedbackTo: feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "-"
        },
        "content": "                  ? feedbackQuestion.customNumberOfEntitiesToGiveFeedbackTo : 0,"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "-"
        },
        "content": "              showGiverNameTo: feedbackQuestion.showGiverNameTo,"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "-"
        },
        "content": "              showRecipientNameTo: feedbackQuestion.showRecipientNameTo,"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "-"
        },
        "content": "              showResponsesTo: feedbackQuestion.showResponsesTo,"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "-"
        },
        "content": "            };"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "-"
        },
        "content": "            this.questionSubmissionForms.push(model);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadFeedbackQuestionRecipientsForQuestion(model);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "-"
        },
        "content": "   * Tracks the question submission form by feedback question id."
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "   * @see https://angular.io/api/common/NgForOf#properties"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "  trackQuestionSubmissionFormByFn(_: any, item: QuestionSubmissionFormModel): any {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "-"
        },
        "content": "    return item.feedbackQuestionId;"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the feedback question recipients for the question."
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackQuestionRecipientsForQuestion(model: QuestionSubmissionFormModel): void {"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "-"
        },
        "content": "      questionid: model.feedbackQuestionId,"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "-"
        },
        "content": "      previewas: this.previewAsPerson,"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/question/recipients\u0027, paramMap)"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: FeedbackQuestionRecipients) \u003d\u003e {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "-"
        },
        "content": "          response.recipients.forEach((recipient: FeedbackQuestionRecipient) \u003d\u003e {"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "-"
        },
        "content": "            model.recipientList.push({"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientIdentifier: recipient.identifier,"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "-"
        },
        "content": "              recipientName: recipient.name,"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "-"
        },
        "content": "          if (this.previewAsPerson) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "-"
        },
        "content": "            // don\u0027t load responses in preview mode"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "-"
        },
        "content": "            // generate a list of empty response box"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "-"
        },
        "content": "            model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "-"
        },
        "content": "              model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "-"
        },
        "content": "                recipientIdentifier:"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "-"
        },
        "content": "                        ? \u0027\u0027 : recipient.recipientIdentifier,"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "-"
        },
        "content": "                responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "-"
        },
        "content": "                responseId: \u0027\u0027,"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "-"
        },
        "content": "              });"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "-"
        },
        "content": "            this.loadFeedbackResponses(model);"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the form mode of the question submission form."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "-"
        },
        "content": "  getQuestionSubmissionFormMode(model: QuestionSubmissionFormModel): QuestionSubmissionFormMode {"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "-"
        },
        "content": "    const isNumberOfEntitiesToGiveFeedbackToSettingLimited: boolean"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "-"
        },
        "content": "        \u003d (model.recipientType \u003d\u003d\u003d FeedbackParticipantType.STUDENTS"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "-"
        },
        "content": "        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.TEAMS"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "-"
        },
        "content": "        || model.recipientType \u003d\u003d\u003d FeedbackParticipantType.INSTRUCTORS)"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 model.numberOfEntitiesToGiveFeedbackToSetting \u003d\u003d\u003d NumberOfEntitiesToGiveFeedbackToSetting.CUSTOM"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0026\u0026 model.recipientList.length \u003e model.customNumberOfEntitiesToGiveFeedbackTo;"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "-"
        },
        "content": "    return isNumberOfEntitiesToGiveFeedbackToSettingLimited"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "-"
        },
        "content": "        ? QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT : QuestionSubmissionFormMode.FIXED_RECIPIENT;"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the responses of the feedback question to {@recipientSubmissionForms} in the model."
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "-"
        },
        "content": "  loadFeedbackResponses(model: QuestionSubmissionFormModel): void {"
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "-"
        },
        "content": "      questionid: model.feedbackQuestionId,"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "-"
        },
        "content": "      intent: this.intent,"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "-"
        },
        "content": "      key: this.regKey,"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "-"
        },
        "content": "      moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "-"
        },
        "content": "    this.httpRequestService.get(\u0027/responses\u0027, paramMap).subscribe((existingResponses: FeedbackResponsesResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "-"
        },
        "content": "      // if student does not have any responses (i.e. first time answering), then enable sending of confirmation email"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "      this.shouldSendConfirmationEmail \u003d this.shouldSendConfirmationEmail \u0026\u0026 existingResponses.responses.length \u003d\u003d\u003d 0;"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FIXED_RECIPIENT) {"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "-"
        },
        "content": "        // need to generate a full list of submission forms"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "-"
        },
        "content": "        model.recipientList.forEach((recipient: FeedbackResponseRecipient) \u003d\u003e {"
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "-"
        },
        "content": "          const matchedExistingResponse: FeedbackResponse | undefined \u003d"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "-"
        },
        "content": "              existingResponses.responses.find("
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "-"
        },
        "content": "                  (response: FeedbackResponse) \u003d\u003e response.recipientIdentifier \u003d\u003d\u003d recipient.recipientIdentifier);"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "-"
        },
        "content": "          model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientIdentifier: recipient.recipientIdentifier,"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "-"
        },
        "content": "            responseDetails: matchedExistingResponse"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "-"
        },
        "content": "                ? matchedExistingResponse.responseDetails"
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "-"
        },
        "content": "                : this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "-"
        },
        "content": "            responseId: matchedExistingResponse ? matchedExistingResponse.feedbackResponseId : \u0027\u0027,"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "-"
        },
        "content": "      if (this.getQuestionSubmissionFormMode(model) \u003d\u003d\u003d QuestionSubmissionFormMode.FLEXIBLE_RECIPIENT) {"
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "-"
        },
        "content": "        // need to generate limited number of submission forms"
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "-"
        },
        "content": "        let numberOfRecipientSubmissionFormsNeeded: number \u003d"
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "-"
        },
        "content": "            model.customNumberOfEntitiesToGiveFeedbackTo - existingResponses.responses.length;"
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "-"
        },
        "content": "        existingResponses.responses.forEach((response: FeedbackResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "-"
        },
        "content": "          model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientIdentifier: response.recipientIdentifier,"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "-"
        },
        "content": "            responseDetails: response.responseDetails,"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "-"
        },
        "content": "            responseId: response.feedbackResponseId,"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "-"
        },
        "content": "        // generate empty submission forms"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "-"
        },
        "content": "        while (numberOfRecipientSubmissionFormsNeeded \u003e 0) {"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "-"
        },
        "content": "          model.recipientSubmissionForms.push({"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "-"
        },
        "content": "            recipientIdentifier: \u0027\u0027,"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "-"
        },
        "content": "            responseDetails: this.feedbackResponsesService.getDefaultFeedbackResponseDetails(model.questionType),"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "-"
        },
        "content": "            responseId: \u0027\u0027,"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "-"
        },
        "content": "          numberOfRecipientSubmissionFormsNeeded -\u003d 1;"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e this.statusMessageService.showErrorMessage(resp.error.message));"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks whether there is any submission forms in the current page."
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "-"
        },
        "content": "  get hasAnyResponseToSubmit(): boolean {"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.questionSubmissionForms"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "-"
        },
        "content": "        .some((model: QuestionSubmissionFormModel) \u003d\u003e model.recipientSubmissionForms.length !\u003d\u003d 0);"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves all feedback response."
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "-"
        },
        "content": "   * \u003cp\u003eAll empty feedback response will be deleted; For non-empty responses, update/create them if necessary."
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "-"
        },
        "content": "  saveFeedbackResponses(): void {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "-"
        },
        "content": "    const notYetAnsweredQuestions: Set\u003cnumber\u003e \u003d new Set();"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "-"
        },
        "content": "    const failToSaveQuestions: Set\u003cnumber\u003e \u003d new Set();"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "-"
        },
        "content": "    const savingRequests: Observable\u003cany\u003e[] \u003d [];"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "-"
        },
        "content": "    this.questionSubmissionForms.forEach((questionSubmissionFormModel: QuestionSubmissionFormModel) \u003d\u003e {"
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "-"
        },
        "content": "      let isQuestionFullyAnswered: boolean \u003d true;"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "-"
        },
        "content": "      questionSubmissionFormModel.recipientSubmissionForms"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "-"
        },
        "content": "          .forEach((recipientSubmissionFormModel: FeedbackResponseRecipientSubmissionFormModel) \u003d\u003e {"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "-"
        },
        "content": "            const isFeedbackResponseDetailsEmpty: boolean \u003d"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "-"
        },
        "content": "                this.feedbackResponsesService.isFeedbackResponseDetailsEmpty("
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "-"
        },
        "content": "                    questionSubmissionFormModel.questionType, recipientSubmissionFormModel.responseDetails);"
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "-"
        },
        "content": "            isQuestionFullyAnswered \u003d isQuestionFullyAnswered \u0026\u0026 !isFeedbackResponseDetailsEmpty;"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipientSubmissionFormModel.responseId !\u003d\u003d \u0027\u0027 \u0026\u0026 isFeedbackResponseDetailsEmpty) {"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "-"
        },
        "content": "              // existing response but empty details -\u003e delete response"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "-"
        },
        "content": "              savingRequests.push(this.httpRequestService.delete(\u0027/response\u0027, {"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "-"
        },
        "content": "                responseid: recipientSubmissionFormModel.responseId,"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "-"
        },
        "content": "                intent: this.intent,"
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "-"
        },
        "content": "                key: this.regKey,"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "-"
        },
        "content": "                moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "-"
        },
        "content": "              }).pipe("
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "-"
        },
        "content": "                  tap(() \u003d\u003e {"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "-"
        },
        "content": "                    recipientSubmissionFormModel.responseId \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "-"
        },
        "content": "                  }),"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "-"
        },
        "content": "                  catchError((error: any) \u003d\u003e {"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.statusMessageService.showErrorMessage((error as ErrorMessageOutput).error.message);"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "-"
        },
        "content": "                    failToSaveQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "-"
        },
        "content": "                    return of(error);"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "-"
        },
        "content": "                  }),"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "-"
        },
        "content": "              ));"
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipientSubmissionFormModel.responseId !\u003d\u003d \u0027\u0027 \u0026\u0026 !isFeedbackResponseDetailsEmpty) {"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "-"
        },
        "content": "              // existing response and details is not empty -\u003e update response"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "-"
        },
        "content": "              savingRequests.push("
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.feedbackResponsesService.updateFeedbackResponse(recipientSubmissionFormModel.responseId, {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "-"
        },
        "content": "                    intent: this.intent,"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "-"
        },
        "content": "                    key: this.regKey,"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "-"
        },
        "content": "                    moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "-"
        },
        "content": "                  }, {"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "-"
        },
        "content": "                    recipientIdentifier: recipientSubmissionFormModel.recipientIdentifier,"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "-"
        },
        "content": "                    questionType: questionSubmissionFormModel.questionType,"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseDetails: recipientSubmissionFormModel.responseDetails,"
      },
      {
        "lineNumber": 457,
        "author": {
          "gitId": "-"
        },
        "content": "                  }).pipe("
      },
      {
        "lineNumber": 458,
        "author": {
          "gitId": "-"
        },
        "content": "                      tap((resp: FeedbackResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 459,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseId \u003d resp.feedbackResponseId;"
      },
      {
        "lineNumber": 460,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseDetails \u003d resp.responseDetails;"
      },
      {
        "lineNumber": 461,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.recipientIdentifier \u003d resp.recipientIdentifier;"
      },
      {
        "lineNumber": 462,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 463,
        "author": {
          "gitId": "-"
        },
        "content": "                      catchError((error: any) \u003d\u003e {"
      },
      {
        "lineNumber": 464,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.statusMessageService.showErrorMessage((error as ErrorMessageOutput).error.message);"
      },
      {
        "lineNumber": 465,
        "author": {
          "gitId": "-"
        },
        "content": "                        failToSaveQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 466,
        "author": {
          "gitId": "-"
        },
        "content": "                        return of(error);"
      },
      {
        "lineNumber": 467,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 468,
        "author": {
          "gitId": "-"
        },
        "content": "                  ));"
      },
      {
        "lineNumber": 469,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 470,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 471,
        "author": {
          "gitId": "-"
        },
        "content": "            if (recipientSubmissionFormModel.responseId \u003d\u003d\u003d \u0027\u0027 \u0026\u0026 !isFeedbackResponseDetailsEmpty) {"
      },
      {
        "lineNumber": 472,
        "author": {
          "gitId": "-"
        },
        "content": "              // new response and the details is not empty -\u003e create response"
      },
      {
        "lineNumber": 473,
        "author": {
          "gitId": "-"
        },
        "content": "              savingRequests.push("
      },
      {
        "lineNumber": 474,
        "author": {
          "gitId": "-"
        },
        "content": "                  this.feedbackResponsesService.createFeedbackResponse(questionSubmissionFormModel.feedbackQuestionId, {"
      },
      {
        "lineNumber": 475,
        "author": {
          "gitId": "-"
        },
        "content": "                    intent: this.intent,"
      },
      {
        "lineNumber": 476,
        "author": {
          "gitId": "-"
        },
        "content": "                    key: this.regKey,"
      },
      {
        "lineNumber": 477,
        "author": {
          "gitId": "-"
        },
        "content": "                    moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 478,
        "author": {
          "gitId": "-"
        },
        "content": "                  }, {"
      },
      {
        "lineNumber": 479,
        "author": {
          "gitId": "-"
        },
        "content": "                    recipientIdentifier: recipientSubmissionFormModel.recipientIdentifier,"
      },
      {
        "lineNumber": 480,
        "author": {
          "gitId": "-"
        },
        "content": "                    questionType: questionSubmissionFormModel.questionType,"
      },
      {
        "lineNumber": 481,
        "author": {
          "gitId": "-"
        },
        "content": "                    responseDetails: recipientSubmissionFormModel.responseDetails,"
      },
      {
        "lineNumber": 482,
        "author": {
          "gitId": "-"
        },
        "content": "                  }).pipe("
      },
      {
        "lineNumber": 483,
        "author": {
          "gitId": "-"
        },
        "content": "                      tap((resp: FeedbackResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 484,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseId \u003d resp.feedbackResponseId;"
      },
      {
        "lineNumber": 485,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.responseDetails \u003d resp.responseDetails;"
      },
      {
        "lineNumber": 486,
        "author": {
          "gitId": "-"
        },
        "content": "                        recipientSubmissionFormModel.recipientIdentifier \u003d resp.recipientIdentifier;"
      },
      {
        "lineNumber": 487,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 488,
        "author": {
          "gitId": "-"
        },
        "content": "                      catchError((error: any) \u003d\u003e {"
      },
      {
        "lineNumber": 489,
        "author": {
          "gitId": "-"
        },
        "content": "                        this.statusMessageService.showErrorMessage((error as ErrorMessageOutput).error.message);"
      },
      {
        "lineNumber": 490,
        "author": {
          "gitId": "-"
        },
        "content": "                        failToSaveQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 491,
        "author": {
          "gitId": "-"
        },
        "content": "                        return of(error);"
      },
      {
        "lineNumber": 492,
        "author": {
          "gitId": "-"
        },
        "content": "                      }),"
      },
      {
        "lineNumber": 493,
        "author": {
          "gitId": "-"
        },
        "content": "                  ));"
      },
      {
        "lineNumber": 494,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 495,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 496,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 497,
        "author": {
          "gitId": "-"
        },
        "content": "      if (!isQuestionFullyAnswered) {"
      },
      {
        "lineNumber": 498,
        "author": {
          "gitId": "-"
        },
        "content": "        notYetAnsweredQuestions.add(questionSubmissionFormModel.questionNumber);"
      },
      {
        "lineNumber": 499,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 500,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 501,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 502,
        "author": {
          "gitId": "-"
        },
        "content": "    this.isSavingResponses \u003d true;"
      },
      {
        "lineNumber": 503,
        "author": {
          "gitId": "-"
        },
        "content": "    let hasSubmissionConfirmationError: boolean \u003d false;"
      },
      {
        "lineNumber": 504,
        "author": {
          "gitId": "-"
        },
        "content": "    forkJoin(savingRequests).pipe("
      },
      {
        "lineNumber": 505,
        "author": {
          "gitId": "-"
        },
        "content": "        switchMap(() \u003d\u003e {"
      },
      {
        "lineNumber": 506,
        "author": {
          "gitId": "-"
        },
        "content": "          if (failToSaveQuestions.size \u003d\u003d\u003d 0) {"
      },
      {
        "lineNumber": 507,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(\u0027All responses submitted successfully!\u0027);"
      },
      {
        "lineNumber": 508,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 509,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(\u0027Some responses are not saved successfully\u0027);"
      },
      {
        "lineNumber": 510,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 511,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 512,
        "author": {
          "gitId": "-"
        },
        "content": "          if (notYetAnsweredQuestions.size !\u003d\u003d 0) {"
      },
      {
        "lineNumber": 513,
        "author": {
          "gitId": "-"
        },
        "content": "            // TODO use showInfoMessage"
      },
      {
        "lineNumber": 514,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage("
      },
      {
        "lineNumber": 515,
        "author": {
          "gitId": "-"
        },
        "content": "                `Note that some questions are yet to be answered. They are:"
      },
      {
        "lineNumber": 516,
        "author": {
          "gitId": "-"
        },
        "content": "                ${ Array.from(notYetAnsweredQuestions.values()) }.`);"
      },
      {
        "lineNumber": 517,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 518,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 519,
        "author": {
          "gitId": "-"
        },
        "content": "          return this.httpRequestService.post(\u0027/submission/confirmation\u0027, {"
      },
      {
        "lineNumber": 520,
        "author": {
          "gitId": "-"
        },
        "content": "            courseid: this.courseId,"
      },
      {
        "lineNumber": 521,
        "author": {
          "gitId": "-"
        },
        "content": "            fsname: this.feedbackSessionName,"
      },
      {
        "lineNumber": 522,
        "author": {
          "gitId": "-"
        },
        "content": "            sendsubmissionemail: String(this.shouldSendConfirmationEmail),"
      },
      {
        "lineNumber": 523,
        "author": {
          "gitId": "-"
        },
        "content": "            intent: this.intent,"
      },
      {
        "lineNumber": 524,
        "author": {
          "gitId": "-"
        },
        "content": "            key: this.regKey,"
      },
      {
        "lineNumber": 525,
        "author": {
          "gitId": "-"
        },
        "content": "            moderatedperson: this.moderatedPerson,"
      },
      {
        "lineNumber": 526,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 527,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 528,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 529,
        "author": {
          "gitId": "-"
        },
        "content": "        finalize(() \u003d\u003e {"
      },
      {
        "lineNumber": 530,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isSavingResponses \u003d false;"
      },
      {
        "lineNumber": 531,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 532,
        "author": {
          "gitId": "-"
        },
        "content": "          const modalRef: NgbModalRef \u003d this.modalService.open(SavingCompleteModalComponent);"
      },
      {
        "lineNumber": 533,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.notYetAnsweredQuestions \u003d Array.from(notYetAnsweredQuestions.values()).join(\u0027, \u0027);"
      },
      {
        "lineNumber": 534,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.failToSaveQuestions \u003d Array.from(failToSaveQuestions.values()).join(\u0027, \u0027);"
      },
      {
        "lineNumber": 535,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.hasSubmissionConfirmationError \u003d hasSubmissionConfirmationError;"
      },
      {
        "lineNumber": 536,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 537,
        "author": {
          "gitId": "-"
        },
        "content": "    ).subscribe((response: ConfirmationResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 538,
        "author": {
          "gitId": "-"
        },
        "content": "      switch (response.result) {"
      },
      {
        "lineNumber": 539,
        "author": {
          "gitId": "-"
        },
        "content": "        case ConfirmationResult.SUCCESS:"
      },
      {
        "lineNumber": 540,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 541,
        "author": {
          "gitId": "-"
        },
        "content": "        case ConfirmationResult.SUCCESS_BUT_EMAIL_FAIL_TO_SEND:"
      },
      {
        "lineNumber": 542,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage("
      },
      {
        "lineNumber": 543,
        "author": {
          "gitId": "-"
        },
        "content": "              `Submission confirmation email failed to send: ${response.message}`);"
      },
      {
        "lineNumber": 544,
        "author": {
          "gitId": "-"
        },
        "content": "          break;"
      },
      {
        "lineNumber": 545,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 546,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(`Unknown result ${response.result}`);"
      },
      {
        "lineNumber": 547,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 548,
        "author": {
          "gitId": "-"
        },
        "content": "      hasSubmissionConfirmationError \u003d false;"
      },
      {
        "lineNumber": 549,
        "author": {
          "gitId": "-"
        },
        "content": "      this.shouldSendConfirmationEmail \u003d false;"
      },
      {
        "lineNumber": 550,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 551,
        "author": {
          "gitId": "-"
        },
        "content": "      hasSubmissionConfirmationError \u003d true;"
      },
      {
        "lineNumber": 552,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 553,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 554,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 555,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "madanalogy": 2,
      "-": 553
    }
  },
  {
    "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Course, Gender, Instructor, InstructorPermissionRole, JoinState, Student } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentCourseDetailsPageComponent, StudentProfileWithPicture } from \u0027./student-course-details-page.component\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StudentCourseDetailsPageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: StudentCourseDetailsPageComponent;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cStudentCourseDetailsPageComponent\u003e;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: [StudentCourseDetailsPageComponent],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(StudentCourseDetailsPageComponent);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with populated fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    const student: Student \u003d {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u00271.1.c-demo2\u0027,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u00271@1.com\u0027,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "      lastName: \u00271\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u00271\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "      comments: \u0027\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "      sectionName: \u0027Tutorial Group 2\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      teamName: \u0027Team 2\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    const instructorDetails: Instructor[] \u003d [{"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u00271.1.c-demo2\u0027,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "      displayedToStudentsAs: \u0027Instructor\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      email: \u00271@1.com\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u00271\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }];"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    const course: Course \u003d {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "      courseId: \u00271.1.c-demo2\u0027,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      courseName: \u0027Sample Course 101\u0027,"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      creationTimestamp: 1552472130000,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      deletionTimestamp: 0,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    const teammateProfiles: StudentProfileWithPicture[] \u003d ["
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "      {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "        photoUrl: \u0027/assets/images/profile_picture_default.png\u0027,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        studentProfile: {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "          email: \u0027iam2@hello.com\u0027,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "          gender: Gender.MALE,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "          institute: \u0027nus\u0027,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          moreInfo: \u0027Misc\u0027,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "          name: \u00272\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "          nationality: \u0027Andorran\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "          shortName: \u0027I am 2\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        },"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    ];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    component.course \u003d course;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    component.instructorDetails \u003d instructorDetails;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d student;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    component.teammateProfiles \u003d teammateProfiles;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 93
    }
  },
  {
    "path": "src/web/app/pages-student/student-course-details-page/student-course-details-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027../../../services/instructor.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027../../../services/student-profile.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentService } from \u0027../../../services/student.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Course, Gender, Instructor, Instructors, JoinState, Student, StudentProfile,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  Students } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " * A student profile which also has the profile picture URL"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "export interface StudentProfileWithPicture {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  studentProfile: StudentProfile;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  photoUrl: string;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": " * Student course details page."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-course-details-page\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-course-details-page.component.html\u0027,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-course-details-page.component.scss\u0027],"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentCourseDetailsPageComponent implements OnInit {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  Gender: typeof Gender \u003d Gender; // enum"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  student: Student \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    email: \u0027\u0027,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    name: \u0027\u0027,"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    lastName: \u0027\u0027,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    comments: \u0027\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    joinState: JoinState.NOT_JOINED,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    teamName: \u0027\u0027,"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    sectionName: \u0027\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course \u003d {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    courseId: \u0027\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    courseName: \u0027\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    timeZone: \u0027UTC\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    creationTimestamp: 0,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    deletionTimestamp: 0,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  };"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  instructorDetails: Instructor[] \u003d [];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  teammateProfiles: StudentProfileWithPicture[] \u003d [];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private instructorService: InstructorService,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentProfileService: StudentProfileService,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentService: StudentService,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService) { }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   * Fetches relevant data to be displayed on page."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadStudent(queryParams.courseid);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadCourse(queryParams.courseid);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      this.loadInstructors(queryParams.courseid);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the course details."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  loadCourse(courseId: string): void {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    this.courseService.getCourseAsStudent(courseId).subscribe((course: Course) \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      this.course \u003d course;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the current logged-in student of the course."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudent(courseId: string): void {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentService.getStudent(courseId)"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "          this.student \u003d student;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "          this.loadTeammates(courseId, student.teamName);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the teammates of the current student."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param teamName: team of current student"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  loadTeammates(courseId: string, teamName: string): void {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentService.getStudentsFromCourseAndTeam(courseId, teamName)"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((students: Students) \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "          students.students.forEach((student: Student) \u003d\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            // filter away current user"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "            if (student.email \u003d\u003d\u003d this.student.email) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "              return;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "            this.studentProfileService.getStudentProfile(student.email, courseId)"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "                  .subscribe((studentProfile: StudentProfile) \u003d\u003e {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "                    const newPhotoUrl: string \u003d"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "              `${environment.backendUrl}/webapi/student/profilePic?courseid\u003d${courseId}\u0026studentemail\u003d${student.email}`;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "                    const newTeammateProfile: StudentProfileWithPicture \u003d {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "                      studentProfile,"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "                      photoUrl : newPhotoUrl,"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "                    };"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "                    this.teammateProfiles.push(newTeammateProfile);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "                  });"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "          });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the instructors of the course."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseid: id of the course queried"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  loadInstructors(courseId: string): void {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.instructorService.getInstructorsFromCourse(courseId)"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "          this.instructorDetails \u003d instructors.instructors;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(resp.error.message);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(teammateProfile: StudentProfileWithPicture): void {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "    teammateProfile.photoUrl \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5,
      "-": 143
    }
  },
  {
    "path": "src/web/app/pages-student/student-home-page/student-home-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { finalize } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { CourseService } from \u0027../../../services/course.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { FeedbackSessionsService } from \u0027../../../services/feedback-sessions.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { LoadingBarService } from \u0027../../../services/loading-bar.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { TimezoneService } from \u0027../../../services/timezone.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  Course,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  Courses,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSession,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionPublishStatus,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessions,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  FeedbackSessionSubmissionStatus,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  HasResponses,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentCourse {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  course: Course;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  feedbackSessions: StudentSession[];"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "interface StudentSession {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  session: FeedbackSession;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  isOpened: boolean;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  isWaitingToOpen: boolean;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  isPublished: boolean;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  isSubmitted: boolean;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": " * Student home page."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-home-page\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-home-page.component.html\u0027,"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-home-page.component.scss\u0027],"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentHomePageComponent implements OnInit {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  // Tooltip messages"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusPublished: string \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027The responses for the session have been published and can now be viewed.\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusNotPublished: string \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027The responses for the session have not yet been published and cannot be viewed.\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusAwaiting: string \u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      \u0027The session is not open for submission at this time. It is expected to open later.\u0027;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusPending: string \u003d \u0027The feedback session is yet to be completed by you.\u0027;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusSubmitted: string \u003d \u0027You have submitted your feedback for this session.\u0027;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  studentFeedbackSessionStatusClosed: string \u003d \u0027 The session is now closed for submissions.\u0027;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  courses: StudentCourse[] \u003d [];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "              private feedbackSessionsService: FeedbackSessionsService,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "              private timezoneService: TimezoneService,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "              private loadingBarService: LoadingBarService) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    this.timezoneService.getTzVersion();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      this.getStudentCourses();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the courses and feedback sessions involving the student."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentCourses(): void {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadingBarService.showLoadingBar();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.getAllCoursesAsStudent().subscribe((resp: Courses) \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      for (const course of resp.courses) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "        this.feedbackSessionsService.getFeedbackSessionsForStudent(course.courseId)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            .pipe(finalize(() \u003d\u003e this.loadingBarService.hideLoadingBar()))"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            .subscribe((fss: FeedbackSessions) \u003d\u003e {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "              const sortedFss: FeedbackSession[] \u003d this.sortFeedbackSessions(fss);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "              const studentSessions: StudentSession[] \u003d [];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "              for (const fs of sortedFss) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "                const isOpened: boolean \u003d fs.submissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.OPEN;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "                const isWaitingToOpen: boolean \u003d"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "                    fs.submissionStatus \u003d\u003d\u003d FeedbackSessionSubmissionStatus.VISIBLE_NOT_OPEN;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "                const isPublished: boolean \u003d fs.publishStatus \u003d\u003d\u003d FeedbackSessionPublishStatus.PUBLISHED;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "                this.feedbackSessionsService.hasStudentResponseForFeedbackSession(course.courseId,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "                    fs.feedbackSessionName)"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "                    .subscribe((hasRes: HasResponses) \u003d\u003e {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "                      const isSubmitted: boolean \u003d hasRes.hasResponses;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "                      studentSessions.push(Object.assign({},"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "                          { isOpened, isWaitingToOpen, isPublished, isSubmitted, session: fs }));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "                    });"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "              }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "              this.courses.push(Object.assign({}, { course, feedbackSessions: studentSessions }));"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "              this.courses.sort((a: StudentCourse, b: StudentCourse) \u003d\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "                  (a.course.courseId \u003e b.course.courseId) ? 1 : -1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "            });"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (e: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(e.error.message);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the tooltip message for the submission status."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "  getSubmissionStatusTooltip(session: StudentSession): string {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "    let msg: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "    if (session.isWaitingToOpen) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusAwaiting;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "    } else if (session.isSubmitted) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusSubmitted;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusPending;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    if (!session.isOpened \u0026\u0026 !session.isWaitingToOpen) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "      msg +\u003d this.studentFeedbackSessionStatusClosed;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": "    return msg;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets the tooltip message for the response status."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "-"
        },
        "content": "  getResponseStatusTooltip(isPublished: boolean): string {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "    if (isPublished) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "      return this.studentFeedbackSessionStatusPublished;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "    return this.studentFeedbackSessionStatusNotPublished;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sorts the feedback sessions based on creation and end timestamp."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": "  sortFeedbackSessions(fss: FeedbackSessions): FeedbackSession[] {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "    return fss.feedbackSessions"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "        .map((fs: FeedbackSession) \u003d\u003e Object.assign({}, fs))"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "        .sort((a: FeedbackSession, b: FeedbackSession) \u003d\u003e (a.createdAtTimestamp \u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "            b.createdAtTimestamp) ? 1 : (a.createdAtTimestamp \u003d\u003d\u003d b.createdAtTimestamp) ?"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "            ((a.submissionEndTimestamp \u003e b.submissionEndTimestamp) ? 1 : -1) : -1);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 4,
      "-": 143
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/student-profile-gender.pipe.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Pipe, PipeTransform } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": " * Pipe to handle the display of gender options in the student profile page."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@Pipe({"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "  name: \u0027genderFormat\u0027,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "export class GenderFormatPipe implements PipeTransform {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   * Transforms {@code gender} to a gender display option for the student profile page."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  transform(gender: Gender): string {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    switch (gender) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "      case Gender.MALE:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Male\u0027;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      case Gender.FEMALE:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Female\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      case Gender.OTHER:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Not Specified\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      default:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        return \u0027Unknown\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 27
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/student-profile-page.component.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { async, ComponentFixture, TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { GenderFormatPipe } from \u0027./student-profile-gender.pipe\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormControl, FormGroup, ReactiveFormsModule } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { MatSnackBarModule } from \u0027@angular/material\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "import { RouterTestingModule } from \u0027@angular/router/testing\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment.prod\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Gender } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { TeammatesCommonModule } from \u0027../../components/teammates-common/teammates-common.module\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfilePageComponent } from \u0027./student-profile-page.component\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027StudentProfilePageComponent\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  let component: StudentProfilePageComponent;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  let fixture: ComponentFixture\u003cStudentProfilePageComponent\u003e;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(async(() \u003d\u003e {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      declarations: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        StudentProfilePageComponent,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        GenderFormatPipe,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        RouterTestingModule,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        ReactiveFormsModule,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        TeammatesCommonModule,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        MatSnackBarModule,"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    })"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    .compileComponents();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  }));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture \u003d TestBed.createComponent(StudentProfilePageComponent);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    component \u003d fixture.componentInstance;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should create\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(component).toBeTruthy();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with default fields\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with a student field without information\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentDetails: any \u003d {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "      studentProfile: {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        shortName: \u0027\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        institute: \u0027\u0027,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "        nationality: \u0027\u0027,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "        gender: Gender,"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "        moreInfo: \u0027\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "        pictureKey: \u0027\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027\u0027,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      requestId: \u0027\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d studentDetails;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    component.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "      studentshortname: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileemail: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileinstitute: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      studentnationality: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "      studentgender: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofilemoreinfo: new FormControl(\u0027\u0027),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should snap with values and a profile photo\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    const studentDetails: any \u003d {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      studentProfile: {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        shortName: \u0027Ash\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "        email: \u0027ayush@nus.com\u0027,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        institute: \u0027NUS\u0027,"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        nationality: \u0027Indian\u0027,"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "        gender: Gender.MALE,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        moreInfo: \u0027I like to party\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        pictureKey: \u0027photo.jpg\u0027,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "      },"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      name: \u0027Ayush\u0027,"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "      requestId: \u002716\u0027,"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    component.student \u003d studentDetails;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    component.profilePicLink \u003d `${environment.backendUrl}/webapi/students/` +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        \u0027profilePic?blob-key\u003d$photo.jpg\u0026time\u003d1552509888215\u0027;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "    component.nationalities \u003d [\u0027Derpistan\u0027, \u0027Blablaland\u0027];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "    // Note: we are not using the full list of countries as the purpose of the snapshot test is to only check whether"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    // the page is being rendered correctly."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "    component.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      studentshortname: new FormControl(\u0027Ash\u0027),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileemail: new FormControl(\u0027ayush@nus.com\u0027),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileinstitute: new FormControl(\u0027NUS\u0027),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      studentnationality: new FormControl(\u0027Indian\u0027),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: new FormControl(\u0027Indian\u0027),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      studentgender: new FormControl(Gender.MALE),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofilemoreinfo: new FormControl(\u0027I like to party\u0027),"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "    fixture.detectChanges();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(fixture).toMatchSnapshot();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 1,
      "-": 108
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/student-profile-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal, NgbModalRef } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { environment } from \u0027../../../environments/environment\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { AuthService } from \u0027../../../services/auth.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { AuthInfo, Gender, MessageOutput, Nationalities, StudentProfile } from \u0027../../../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "import { FormControl, FormGroup } from \u0027@angular/forms\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "import { StatusMessageService } from \u0027../../../services/status-message.service\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileService } from \u0027../../../services/student-profile.service\u0027;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027../../error-message-output\u0027;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpErrorResponse } from \u0027@angular/common/http\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { from, of, throwError } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { catchError, switchMap } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { NationalitiesService } from \u0027../../../services/nationalities.service\u0027;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "import {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  UploadEditProfilePictureModalComponent,"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "} from \u0027./upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": " * Student profile page."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-student-profile-page\u0027,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./student-profile-page.component.html\u0027,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./student-profile-page.component.scss\u0027],"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentProfilePageComponent implements OnInit {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  Gender: typeof Gender \u003d Gender; // enum"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  id: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "  student!: StudentProfile;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "  name?: string;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  editForm!: FormGroup;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "  nationalities?: string[];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  profilePicLink!: string;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "  defaultPictureLink: string \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "  private backendUrl: string \u003d environment.backendUrl;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private ngbModal: NgbModal,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              private nationalitiesService: NationalitiesService,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "              private authService: AuthService,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "              private statusMessageService: StatusMessageService,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "              private studentProfileService: StudentProfileService) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    // populate drop-down menu for nationality list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    this.initNationalities();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    this.loadStudentProfile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "   * Fetches the list of nationalities needed for the drop down box."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "  initNationalities(): void {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.nationalitiesService.getNationalities().subscribe((response: Nationalities) \u003d\u003e {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      this.nationalities \u003d response.nationalities;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "   * Loads the student profile details for this page."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "  loadStudentProfile(): void {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    this.authService.getAuthUser().subscribe((auth: AuthInfo) \u003d\u003e {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "      if (auth.user) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        this.id \u003d auth.user.id;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        this.profilePicLink \u003d `${this.backendUrl}/webapi/student/profilePic?user\u003d${this.id}`;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "        // retrieve profile once we have the student\u0027s googleId"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        this.studentProfileService.getStudentProfile().subscribe((response: StudentProfile) \u003d\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "            this.student \u003d response;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "            this.name \u003d response.name;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            this.initStudentProfileForm(this.student);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "          } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showErrorMessage(\u0027Error retrieving student profile\u0027);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(response.error.message);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "   * Initializes the edit form with the student profile fields fetched from the backend."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "  initStudentProfileForm(profile: StudentProfile): void {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "    this.editForm \u003d new FormGroup({"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "      studentshortname: new FormControl(profile.shortName),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileemail: new FormControl(profile.email),"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofileinstitute: new FormControl(profile.institute),"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "      studentnationality: new FormControl(profile.nationality),"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: new FormControl(profile.nationality),"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "      studentgender: new FormControl(profile.gender),"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "      studentprofilemoreinfo: new FormControl(profile.moreInfo),"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "   * Prompts the user with a modal box to confirm changes made to the form."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "  onSubmit(confirmEditProfile: any): void {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(confirmEditProfile);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "   * Opens a modal box to upload/edit profile picture."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  onUploadEdit(): void {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const NO_IMAGE_UPLOADED: number \u003d 600;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const NO_IMAGE_FOUND: number \u003d 404;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentProfileService.getProfilePicture()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .pipe("
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // If no picture is found, return null"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            catchError((err: HttpErrorResponse) \u003d\u003e {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              if (err.status !\u003d\u003d NO_IMAGE_FOUND) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                return throwError(status);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              return of(null);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // Open Modal and wait for user to upload picture"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            switchMap((image: Blob | null) \u003d\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "              const modalRef: NgbModalRef \u003d this.ngbModal.open(UploadEditProfilePictureModalComponent);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              modalRef.componentInstance.image \u003d image;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              return from(modalRef.result);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // If no image is uploaded, throw an error"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            catchError(() \u003d\u003e throwError({"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              error: {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "                message: \u0027No image uploaded\u0027,"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              },"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              status: NO_IMAGE_UPLOADED,"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            })),"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            // Post the form data"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            switchMap((formData: FormData) \u003d\u003e {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "              return this.studentProfileService.postProfilePicture(formData);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            }),"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        )"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        // Display message status"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showSuccessMessage(\u0027Your profile picture has been saved successfully\u0027);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          // Force reload"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "          const timestamp: number \u003d (new Date()).getTime();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "-"
        },
        "content": "          this.profilePicLink \u003d `${this.backendUrl}/webapi/student/profilePic?${timestamp}\u0026user\u003d${this.id}`;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          // If the error was due to not image uploaded, do nothing"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          if (response.status \u003d\u003d\u003d NO_IMAGE_UPLOADED) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "          }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService.showErrorMessage(response.error.message);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "-"
        },
        "content": "   * Submits the form data to edit the student profile details."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "  submitEditForm(): void {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "    this.studentProfileService.updateStudentProfile(this.id, {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "      shortName: this.editForm.controls.studentshortname.value,"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "      email: this.editForm.controls.studentprofileemail.value,"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "      institute: this.editForm.controls.studentprofileinstitute.value,"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "      nationality: this.editForm.controls.studentnationality.value,"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "      gender: this.editForm.controls.studentgender.value,"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "      moreInfo: this.editForm.controls.studentprofilemoreinfo.value,"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      existingNationality: this.editForm.controls.existingNationality.value,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    }).subscribe((response: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": "      if (response) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "        this.statusMessageService.showSuccessMessage(response.message);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "      this.statusMessageService.showErrorMessage(`Could not save your profile! ${response.error.message}`);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "   * Prompts the user with a modal box to confirm deleting the profile picture."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "-"
        },
        "content": "  onDelete(confirmDeleteProfilePicture: any): void {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "    this.ngbModal.open(confirmDeleteProfilePicture);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes the profile picture and the profile picture key"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteProfilePicture(): void {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      googleid: this.id,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.studentProfileService.deleteProfilePicture(paramMap)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "        .subscribe((response: MessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "          if (response) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "            this.statusMessageService.showSuccessMessage(response.message);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "            this.profilePicLink \u003d \u0027/assets/images/profile_picture_default.png\u0027;"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "          }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "        }, (response: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "          this.statusMessageService."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "            showErrorMessage(`Could not delete your profile picture! ${response.error.message}`);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "        });"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "-"
        },
        "content": "   * Sets the profile picture of a student as the default image."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "-"
        },
        "content": "  setDefaultPic(): void {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "-"
        },
        "content": "    this.profilePicLink \u003d this.defaultPictureLink;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 44,
      "-": 175
    }
  },
  {
    "path": "src/web/app/pages-student/student-profile-page/upload-edit-profile-picture-modal/upload-edit-profile-picture-modal.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, Input, OnInit, ViewChild } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbActiveModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { ImageCroppedEvent, ImageCropperComponent } from \u0027ngx-image-cropper\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * Student profile page\u0027s modal to upload/edit photo."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-upload-edit-profile-picture-modal\u0027,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./upload-edit-profile-picture-modal.component.html\u0027,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./upload-edit-profile-picture-modal.component.scss\u0027],"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "export class UploadEditProfilePictureModalComponent implements OnInit {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  imageChangedEvent: any \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  formData?: FormData;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  @ViewChild(ImageCropperComponent, { static: false }) imageCropper!: ImageCropperComponent;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  @Input() image!: Blob | null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(public activeModal: NgbActiveModal) { }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    if (this.image \u003d\u003d null) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.blobToBase64Image(this.image);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "   * Converts the blob image into a base64 string to be shown in the image cropper."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  blobToBase64Image(image: Blob): void {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    const reader: FileReader \u003d new FileReader();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    reader.addEventListener(\u0027load\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      if (reader.result) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        this.imageCropper.imageBase64 \u003d reader.result as string;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }, false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    if (image) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "      reader.readAsDataURL(image);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   * Populates form data with the image blob."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "  populateFormData(file: File): void {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    this.formData \u003d new FormData();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    this.formData.append(\u0027studentprofilephoto\u0027, file, file.name);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   * Uploads the picture that has been newly uploaded/edited."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "  uploadPicture(): void {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    this.activeModal.close(this.formData);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   * Handles event(s) when a file is selected from the user\u0027s file browser."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  fileChangeEvent(event: any): void {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageChangedEvent \u003d event;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    const file: File \u003d event.target.files[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    if (file) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      this.populateFormData(file);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   * Saves the latest cropped image."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "  imageCropped(event: ImageCroppedEvent): void {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "    this.populateFormData(event.file as File);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "   * Rotates the image in the image cropper to the left."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "  rotateLeft(): void {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.rotateLeft();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": "   * Rotates the image in the image cropper to the right."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "  rotateRight(): void {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.rotateRight();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "   * Flips the image in the image cropper horizontally."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "  flipHorizontal(): void {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.flipHorizontal();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   * Flips the image in the image cropper vertically."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  flipVertical(): void {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    this.imageCropper.flipVertical();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 5,
      "-": 102
    }
  },
  {
    "path": "src/web/app/user-join-page.component.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Component, OnInit } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { ActivatedRoute, Router } from \u0027@angular/router\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { NgbModal } from \u0027@ng-bootstrap/ng-bootstrap\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027../services/course.service\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { JoinStatus } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorReportComponent } from \u0027./components/error-report/error-report.component\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { ErrorMessageOutput } from \u0027./error-message-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * User join page component."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Component({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  selector: \u0027tm-user-join-page\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "  templateUrl: \u0027./user-join-page.component.html\u0027,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  styleUrls: [\u0027./user-join-page.component.scss\u0027],"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "export class UserJoinPageComponent implements OnInit {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  isLoading: boolean \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  hasJoined: boolean \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "  entityType: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "  key: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  institute: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  userId: string \u003d \u0027\u0027;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private route: ActivatedRoute,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "              private router: Router,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "              private courseService: CourseService,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "              private ngbModal: NgbModal) {}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  ngOnInit(): void {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    this.route.queryParams.subscribe((queryParams: any) \u003d\u003e {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      this.entityType \u003d queryParams.entitytype;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "      this.key \u003d queryParams.key;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "      this.institute \u003d queryParams.instructorinstitution;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      this.courseService.getJoinCourseStatus(this.key, this.entityType).subscribe((resp: JoinStatus) \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        this.hasJoined \u003d resp.hasJoined;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        this.userId \u003d resp.userId || \u0027\u0027;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isLoading \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "      }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        if (resp.status \u003d\u003d\u003d 403) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "          this.isLoading \u003d false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "          const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.requestId \u003d resp.error.requestId;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "          modalRef.componentInstance.errorMessage \u003d resp.error.message;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "      });"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   * Joins the course."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "  joinCourse(): void {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    this.courseService.joinCourse(this.key, this.entityType, this.institute).subscribe(() \u003d\u003e {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "      this.router.navigate([`/web/${this.entityType}`]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    }, (resp: ErrorMessageOutput) \u003d\u003e {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "      const modalRef: any \u003d this.ngbModal.open(ErrorReportComponent);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.requestId \u003d resp.error.requestId;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "      modalRef.componentInstance.errorMessage \u003d resp.error.message;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    });"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 3,
      "-": 64
    }
  },
  {
    "path": "src/web/services/course.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseService } from \u0027./course.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "describe(\u0027CourseService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: CourseService;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(CourseService);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  });"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET when getting all courses as student\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getAllCoursesAsStudent();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute PUT when joining course\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      key: \u0027123\u0027,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorinstitution: \u0027National University of Singapore\u0027,"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.joinCourse(paramMap.key, paramMap.entitytype, paramMap.instructorinstitution);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.put).toHaveBeenCalledWith(ResourceEndpoints.JOIN, paramMap);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 37,
      "-": 14
    }
  },
  {
    "path": "src/web/services/course.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { forkJoin, Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "import { map } from \u0027rxjs/operators\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { Course, CourseArchive, Courses,  HasResponses, JoinStatus, MessageOutput } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { CourseArchiveRequest, CourseCreateRequest, CourseUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles course related logic provision."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "export class CourseService {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all course data for an instructor by calling API."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  getAllCoursesAsInstructor(courseStatus: string): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: courseStatus,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get course data by calling API as an instructor."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseAsInstructor(courseId: string): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Gets all course data for a student by calling API."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getAllCoursesAsStudent(): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get course data by calling API as a student."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "  getCourseAsStudent(courseId: string): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSE, paramMap);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get student courses data of a given google id in masquerade mode by calling API."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027student\u0027,"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "      user: googleId,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.COURSES, paramMap);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get instructor courses data of a given google id in masquerade mode by calling API."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "  getInstructorCoursesInMasqueradeMode(googleId: string): Observable\u003cCourses\u003e {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "    const activeCoursesParamMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027active\u0027,"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "      user: googleId,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "    const archivedCoursesParamMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "      coursestatus: \u0027archived\u0027,"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "      user: googleId,"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "    return forkJoin("
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.httpRequestService.get(ResourceEndpoints.COURSES, activeCoursesParamMap),"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        this.httpRequestService.get(ResourceEndpoints.COURSES, archivedCoursesParamMap),"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "    ).pipe("
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "        map((vals: Courses[]) \u003d\u003e {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": "          return {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "            courses: vals[0].courses.concat(vals[1].courses),"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "          };"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": "        }),"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "    );"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "   * Creates a course by calling API."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "  createCourse(request: CourseCreateRequest): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {};"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.COURSE, paramMap, request);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates a course by calling API."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "  updateCourse(courseid: string, request: CourseUpdateRequest): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.COURSE, paramMap, request);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "-"
        },
        "content": "   * Deletes a course by calling API."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "  deleteCourse(courseid: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.COURSE, paramMap);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": "   * Changes the archive status of a course by calling API."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": "  changeArchiveStatus(courseid: string, request: CourseArchiveRequest): Observable\u003cCourseArchive\u003e {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.COURSE_ARCHIVE, paramMap, request);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "   * Bin (soft-delete) a course by calling API."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "-"
        },
        "content": "  binCourse(courseid: string): Observable\u003cCourse\u003e {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.BIN_COURSE, paramMap);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": "   * Restore a soft-deleted course by calling API."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": "  restoreCourse(courseid: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d { courseid };"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.BIN_COURSE, paramMap);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Get the status of whether the entity has joined the course by calling API."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getJoinCourseStatus(regKey: string, entityType: string): Observable\u003cJoinStatus\u003e {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      key: regKey,"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      entitytype: entityType,"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.JOIN, paramMap);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "-"
        },
        "content": "   * Join a course by calling API."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  joinCourse(regKey: string, entityType: string, institute: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "      key: regKey,"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: entityType,"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructorinstitution: institute,"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.JOIN, paramMap);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "   * Send join reminder emails to unregistered students."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "-"
        },
        "content": "  remindUnregisteredStudentsForJoin(courseId: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "-"
        },
        "content": "   * Send join reminder email to a student."
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "-"
        },
        "content": "  remindStudentForJoin(courseId: string, studentEmail: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "      studentemail: studentEmail,"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "   * Send join reminder email to an instructor."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "-"
        },
        "content": "  remindInstructorForJoin(courseId: string, instructorEmail: string): Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "-"
        },
        "content": "      instructoremail: instructorEmail,"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.JOIN_REMIND, paramMap);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "-"
        },
        "content": "   * Checks if there are responses for a course (request sent by instructor)."
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "-"
        },
        "content": "  hasResponsesForCourse(courseId: string): Observable\u003cHasResponses\u003e {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "-"
        },
        "content": "      entitytype: \u0027instructor\u0027,"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.HAS_RESPONSES, paramMap);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "madanalogy"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   * Removes student from course."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "   */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "  removeStudentFromCourse(courseId: string, studentEmail: string): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "      studentemail: studentEmail,"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "madanalogy"
        },
        "content": "    };"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.STUDENT, paramsMap);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 42,
      "madanalogy": 9,
      "-": 174
    }
  },
  {
    "path": "src/web/services/instructor.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import DoneCallback \u003d jest.DoneCallback;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Instructor, InstructorPermissionRole, Instructors, JoinState } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { InstructorService } from \u0027./instructor.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "describe(\u0027InstructorService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: InstructorService;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(InstructorService);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getInstructorsFromCourse(\u0027CS3281\u0027);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.INSTRUCTORS, paramMap);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should send the correct course id\u0027, (done: DoneCallback) \u003d\u003e {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const mockInstructors: Instructors \u003d {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      instructors: [{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        courseId: \u0027CS3281\u0027,"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        email: \u0027\u0027,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        name: \u0027\u0027,"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      }, {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        googleId: \u0027\u0027,"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        courseId: \u0027CS3282\u0027,"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        email: \u0027\u0027,"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        isDisplayedToStudents: true,"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        displayedToStudentsAs: \u0027\u0027,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        name: \u0027\u0027,"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        role: InstructorPermissionRole.INSTRUCTOR_PERMISSION_ROLE_COOWNER,"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        joinState: JoinState.JOINED,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      }],"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService.get.mockImplementation((endpoint: string, paramMap: { [key: string]: string }) \u003d\u003e {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      expect(endpoint).toEqual(ResourceEndpoints.INSTRUCTORS);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      const courseid: string \u003d paramMap.courseid;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      return of\u003cInstructors\u003e({"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        instructors: mockInstructors.instructors.filter((instructor: Instructor) \u003d\u003e instructor.courseId \u003d\u003d\u003d courseid),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getInstructorsFromCourse(\u0027CS3281\u0027).subscribe((instructors: Instructors) \u003d\u003e {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      expect(instructors.instructors).toEqual(mockInstructors.instructors"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        .filter((instructor: Instructor) \u003d\u003e instructor.courseId \u003d\u003d\u003d \u0027CS3281\u0027));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      done();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 82
    }
  },
  {
    "path": "src/web/services/instructor.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Instructors } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Handles instructor related logic provision."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "export class InstructorService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Get a list of instructors of a course by calling API."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getInstructorsFromCourse(courseId: string): Observable\u003cInstructors\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const paramMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.INSTRUCTORS, paramMap);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 27
    }
  },
  {
    "path": "src/web/services/nationalities.service.spec.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { TestBed } from \u0027@angular/core/testing\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpClientTestingModule } from \u0027@angular/common/http/testing\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { of } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import DoneCallback \u003d jest.DoneCallback;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Nationalities } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { NationalitiesService } from \u0027./nationalities.service\u0027;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "describe(\u0027NationalitiesService\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let spyHttpRequestService: any;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  let service: NationalitiesService;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  beforeEach(() \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService \u003d {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      get: jest.fn(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      post: jest.fn(),"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      put: jest.fn(),"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      delete: jest.fn(),"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    TestBed.configureTestingModule({"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      imports: ["
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        HttpClientTestingModule,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      providers: ["
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "        { provide: HttpRequestService, useValue: spyHttpRequestService },"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      ],"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service \u003d TestBed.get(NationalitiesService);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should be created\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(service).toBeTruthy();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should execute GET\u0027, () \u003d\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getNationalities();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    expect(spyHttpRequestService.get).toHaveBeenCalledWith(ResourceEndpoints.NATIONALITIES);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  it(\u0027should return nationalities\u0027, (done: DoneCallback) \u003d\u003e {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    const mockNationalities: Nationalities \u003d {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      nationalities: [\u0027Singapore\u0027],"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    spyHttpRequestService.get.mockReturnValue(of\u003cNationalities\u003e(mockNationalities));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    service.getNationalities().subscribe((nationalities: Nationalities) \u003d\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      expect(nationalities).toEqual(mockNationalities);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      done();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  });"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "});"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 52
    }
  },
  {
    "path": "src/web/services/nationalities.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { Nationalities } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " * Handles nationalities related logic provision."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "})"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "export class NationalitiesService {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) { }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Get a list of nationalities by calling API."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getNationalities(): Observable\u003cNationalities\u003e {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.NATIONALITIES);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 23
    }
  },
  {
    "path": "src/web/services/student-profile.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { MessageOutput, StudentProfile } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentProfileUpdateRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles student profile related logic provision."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentProfileService {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets a student profile by calling API."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * If both studentEmail and courseId are provided, it returns profile of that student."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * If either one is missing, it returns the profile of the current login student."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentProfile(studentEmail?: string, courseId?: string): Observable\u003cStudentProfile\u003e {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    if (studentEmail \u0026\u0026 courseId) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        studentemail: studentEmail,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      return this.httpRequestService.get(ResourceEndpoints.STUDENT_PROFILE, paramsMap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENT_PROFILE);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "   * Updates a student profile by calling API."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  updateStudentProfile(googleId: string, requestBody: StudentProfileUpdateRequest)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "      : Observable\u003cMessageOutput\u003e {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "      googleid: googleId,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.STUDENT_PROFILE, paramsMap, requestBody);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Gets the profile picture as blob image."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  getProfilePicture(): Observable\u003cBlob\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENT_PROFILE_PICTURE, {}, \u0027blob\u0027);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Posts the profile picture."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  postProfilePicture(formData: FormData): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.post(ResourceEndpoints.STUDENT_PROFILE_PICTURE, {}, formData);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   * Deletes the profile picture and the profile picture key"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "   */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "  deleteProfilePicture(paramMap: { [key: string]: string }): Observable\u003cany\u003e {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.delete(ResourceEndpoints.STUDENT_PROFILE_PICTURE, paramMap);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 24,
      "-": 41
    }
  },
  {
    "path": "src/web/services/student.service.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "import { Injectable } from \u0027@angular/core\u0027;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "import { Observable } from \u0027rxjs\u0027;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "import { ResourceEndpoints } from \u0027../types/api-endpoints\u0027;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "import { Student, Students } from \u0027../types/api-output\u0027;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "import { StudentsEnrollRequest } from \u0027../types/api-request\u0027;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "import { HttpRequestService } from \u0027./http-request.service\u0027;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": " * Handles student related logic provision."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@Injectable({"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "  providedIn: \u0027root\u0027,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "})"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "export class StudentService {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  constructor(private httpRequestService: HttpRequestService) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   * Get a list of students of a course by calling API."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   * If teamName is provided, only students in that team will be returned."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   * Otherwise, all students in the course will be returned."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentsFromCourse(courseId: string, teamName?: string): Observable\u003cStudents\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    if (teamName) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "      const paramsMapWithTeamName: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        courseid: courseId,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        teamname: teamName,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "      };"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "      return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMapWithTeamName);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMapWithoutTeamName: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMapWithoutTeamName);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets student of a course by calling API."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "   * \u003cp\u003e If both studentEmail and regKey are not provided, get the student of current logged-in user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "   *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param courseId courseId of the course"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param studentEmail if provided, get the student of the course of the given email"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "   * @param regKey if provided, get the student of the course with regKey"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudent(courseId: string, studentEmail?: string, regKey?: string): Observable\u003cStudent\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    if (studentEmail) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "      paramsMap.studentemail \u003d studentEmail;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    if (regKey) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "      paramsMap.key \u003d regKey;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENT, paramsMap);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "   * Enroll a list of students to a course by calling API."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "   * Students who are enrolled successfully will be returned."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "  enrollStudents(courseId: string, requestBody: StudentsEnrollRequest): Observable\u003cStudents\u003e {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.put(ResourceEndpoints.STUDENTS, paramsMap, requestBody);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "   * Gets all students in a course and team as a student by calling API."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "   */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "  getStudentsFromCourseAndTeam(courseId: string, teamName: string): Observable\u003cStudents\u003e {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    const paramsMap: { [key: string]: string } \u003d {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "      courseid: courseId,"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "      teamname: teamName,"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    };"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tiuweehan"
        },
        "content": "    return this.httpRequestService.get(ResourceEndpoints.STUDENTS, paramsMap);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tiuweehan": 6,
      "-": 76
    }
  },
  {
    "path": "src/web/test-helpers/mock-tinymce-uuid.ts",
    "fileType": "ts",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Mock `Date` and `Math.random` such that TinyMCE generates a fixed UUID."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " * Refer to https://github.com/TEAMMATES/teammates/pull/9910#issuecomment-574006203 for more details."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dvrylc"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "export const mockTinyMceUuid: () \u003d\u003e void \u003d (): void \u003d\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  const mockDate: Date \u003d new Date(\u00272020\u0027);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  const realDate: DateConstructor \u003d Date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  const realMath: Math \u003d Math;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  beforeAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Date \u003d jest.fn(() \u003d\u003e mockDate) as any;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Math.random \u003d jest.fn(() \u003d\u003e 0);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  });"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dvrylc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  afterAll(() \u003d\u003e {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Date \u003d realDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "    Math \u003d realMath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "  });"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dvrylc"
        },
        "content": "};"
      }
    ],
    "authorContributionMap": {
      "dvrylc": 19
    }
  }
]
